// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.11.3
// source: SceneGalleryInfo.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SceneGalleryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreStartEndTime  uint32                      `protobuf:"varint,14,opt,name=pre_start_end_time,json=preStartEndTime,proto3" json:"pre_start_end_time,omitempty"`
	OwnerUid         uint32                      `protobuf:"varint,9,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
	ProgressInfoList []*SceneGalleryProgressInfo `protobuf:"bytes,10,rep,name=progress_info_list,json=progressInfoList,proto3" json:"progress_info_list,omitempty"`
	GalleryId        uint32                      `protobuf:"varint,4,opt,name=gallery_id,json=galleryId,proto3" json:"gallery_id,omitempty"`
	StartTime        uint32                      `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	PlayerCount      uint32                      `protobuf:"varint,15,opt,name=player_count,json=playerCount,proto3" json:"player_count,omitempty"`
	EndTime          uint32                      `protobuf:"varint,1,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Stage            GalleryStageType            `protobuf:"varint,8,opt,name=stage,proto3,enum=GalleryStageType" json:"stage,omitempty"`
	// Types that are assignable to Info:
	//
	//	*SceneGalleryInfo_BalloonInfo
	//	*SceneGalleryInfo_FallInfo
	//	*SceneGalleryInfo_FlowerInfo
	//	*SceneGalleryInfo_BulletInfo
	//	*SceneGalleryInfo_BrokenFloorInfo
	//	*SceneGalleryInfo_HideAndSeekInfo
	//	*SceneGalleryInfo_BuoyantCombatInfo
	//	*SceneGalleryInfo_BounceConjuringInfo
	//	*SceneGalleryInfo_HandballInfo
	//	*SceneGalleryInfo_SumoInfo
	//	*SceneGalleryInfo_SalvagePreventInfo
	//	*SceneGalleryInfo_SalvageEscortInfo
	//	*SceneGalleryInfo_HomeBalloonInfo
	//	*SceneGalleryInfo_CrystalLinkInfo
	//	*SceneGalleryInfo_IrodoriMasterInfo
	//	*SceneGalleryInfo_LuminanceStoneChallengeInfo
	//	*SceneGalleryInfo_HomeSeekFurnitureInfo
	//	*SceneGalleryInfo_IslandPartyDownHillInfo
	//	*SceneGalleryInfo_SummerTimeV2BoatInfo
	//	*SceneGalleryInfo_IslandPartyRaftInfo
	//	*SceneGalleryInfo_IslandPartySailInfo
	//	*SceneGalleryInfo_InstableSprayInfo
	//	*SceneGalleryInfo_MuqadasPotionInfo
	//	*SceneGalleryInfo_TreasureSeelieInfo
	//	*SceneGalleryInfo_VintageHuntingInfo
	//	*SceneGalleryInfo_WindFieldInfo
	//	*SceneGalleryInfo_FungusFighterTrainingInfo
	//	*SceneGalleryInfo_EffigyChallengeInfo
	//	*SceneGalleryInfo_FungusFighterCaptureInfo
	//	*SceneGalleryInfo_CharAmusementInfo
	//	*SceneGalleryInfo_CoinCollectInfo
	Info isSceneGalleryInfo_Info `protobuf_oneof:"info"`
}

func (x *SceneGalleryInfo) Reset() {
	*x = SceneGalleryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneGalleryInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneGalleryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneGalleryInfo) ProtoMessage() {}

func (x *SceneGalleryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneGalleryInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneGalleryInfo.ProtoReflect.Descriptor instead.
func (*SceneGalleryInfo) Descriptor() ([]byte, []int) {
	return file_SceneGalleryInfo_proto_rawDescGZIP(), []int{0}
}

func (x *SceneGalleryInfo) GetPreStartEndTime() uint32 {
	if x != nil {
		return x.PreStartEndTime
	}
	return 0
}

func (x *SceneGalleryInfo) GetOwnerUid() uint32 {
	if x != nil {
		return x.OwnerUid
	}
	return 0
}

func (x *SceneGalleryInfo) GetProgressInfoList() []*SceneGalleryProgressInfo {
	if x != nil {
		return x.ProgressInfoList
	}
	return nil
}

func (x *SceneGalleryInfo) GetGalleryId() uint32 {
	if x != nil {
		return x.GalleryId
	}
	return 0
}

func (x *SceneGalleryInfo) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SceneGalleryInfo) GetPlayerCount() uint32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

func (x *SceneGalleryInfo) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *SceneGalleryInfo) GetStage() GalleryStageType {
	if x != nil {
		return x.Stage
	}
	return GalleryStageType_GALLERY_STAGE_TYPE_NONE
}

func (m *SceneGalleryInfo) GetInfo() isSceneGalleryInfo_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *SceneGalleryInfo) GetBalloonInfo() *SceneGalleryBalloonInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_BalloonInfo); ok {
		return x.BalloonInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetFallInfo() *SceneGalleryFallInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_FallInfo); ok {
		return x.FallInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetFlowerInfo() *SceneGalleryFlowerInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_FlowerInfo); ok {
		return x.FlowerInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetBulletInfo() *SceneGalleryBulletInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_BulletInfo); ok {
		return x.BulletInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetBrokenFloorInfo() *SceneGalleryBrokenFloorInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_BrokenFloorInfo); ok {
		return x.BrokenFloorInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetHideAndSeekInfo() *SceneGalleryHideAndSeekInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_HideAndSeekInfo); ok {
		return x.HideAndSeekInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetBuoyantCombatInfo() *SceneGalleryBuoyantCombatInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_BuoyantCombatInfo); ok {
		return x.BuoyantCombatInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetBounceConjuringInfo() *SceneGalleryBounceConjuringInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_BounceConjuringInfo); ok {
		return x.BounceConjuringInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetHandballInfo() *SceneGalleryHandballInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_HandballInfo); ok {
		return x.HandballInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetSumoInfo() *SceneGallerySumoInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_SumoInfo); ok {
		return x.SumoInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetSalvagePreventInfo() *SceneGallerySalvagePreventInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_SalvagePreventInfo); ok {
		return x.SalvagePreventInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetSalvageEscortInfo() *SceneGallerySalvageEscortInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_SalvageEscortInfo); ok {
		return x.SalvageEscortInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetHomeBalloonInfo() *SceneGalleryHomeBalloonInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_HomeBalloonInfo); ok {
		return x.HomeBalloonInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetCrystalLinkInfo() *SceneGalleryCrystalLinkInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_CrystalLinkInfo); ok {
		return x.CrystalLinkInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetIrodoriMasterInfo() *SceneGalleryIrodoriMasterInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_IrodoriMasterInfo); ok {
		return x.IrodoriMasterInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetLuminanceStoneChallengeInfo() *SceneGalleryLuminanceStoneChallengeInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_LuminanceStoneChallengeInfo); ok {
		return x.LuminanceStoneChallengeInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetHomeSeekFurnitureInfo() *SceneGalleryHomeSeekFurnitureInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_HomeSeekFurnitureInfo); ok {
		return x.HomeSeekFurnitureInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetIslandPartyDownHillInfo() *SceneGalleryIslandPartyDownHillInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_IslandPartyDownHillInfo); ok {
		return x.IslandPartyDownHillInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetSummerTimeV2BoatInfo() *SceneGallerySummerTimeV2BoatInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_SummerTimeV2BoatInfo); ok {
		return x.SummerTimeV2BoatInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetIslandPartyRaftInfo() *SceneGalleryIslandPartyRaftInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_IslandPartyRaftInfo); ok {
		return x.IslandPartyRaftInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetIslandPartySailInfo() *SceneGalleryIslandPartySailInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_IslandPartySailInfo); ok {
		return x.IslandPartySailInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetInstableSprayInfo() *SceneGalleryInstableSprayInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_InstableSprayInfo); ok {
		return x.InstableSprayInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetMuqadasPotionInfo() *SceneGalleryMuqadasPotionInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_MuqadasPotionInfo); ok {
		return x.MuqadasPotionInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetTreasureSeelieInfo() *SceneGalleryTreasureSeelieInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_TreasureSeelieInfo); ok {
		return x.TreasureSeelieInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetVintageHuntingInfo() *SceneGalleryVintageHuntingInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_VintageHuntingInfo); ok {
		return x.VintageHuntingInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetWindFieldInfo() *SceneGalleryWindFieldInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_WindFieldInfo); ok {
		return x.WindFieldInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetFungusFighterTrainingInfo() *SceneGalleryFungusFighterTrainingInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_FungusFighterTrainingInfo); ok {
		return x.FungusFighterTrainingInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetEffigyChallengeInfo() *SceneGalleryEffigyChallengeV2Info {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_EffigyChallengeInfo); ok {
		return x.EffigyChallengeInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetFungusFighterCaptureInfo() *SceneGalleryFungusFighterCaptureInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_FungusFighterCaptureInfo); ok {
		return x.FungusFighterCaptureInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetCharAmusementInfo() *SceneGalleryCharAmusementInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_CharAmusementInfo); ok {
		return x.CharAmusementInfo
	}
	return nil
}

func (x *SceneGalleryInfo) GetCoinCollectInfo() *SceneGalleryCoinCollectInfo {
	if x, ok := x.GetInfo().(*SceneGalleryInfo_CoinCollectInfo); ok {
		return x.CoinCollectInfo
	}
	return nil
}

type isSceneGalleryInfo_Info interface {
	isSceneGalleryInfo_Info()
}

type SceneGalleryInfo_BalloonInfo struct {
	BalloonInfo *SceneGalleryBalloonInfo `protobuf:"bytes,5,opt,name=balloon_info,json=balloonInfo,proto3,oneof"`
}

type SceneGalleryInfo_FallInfo struct {
	FallInfo *SceneGalleryFallInfo `protobuf:"bytes,7,opt,name=fall_info,json=fallInfo,proto3,oneof"`
}

type SceneGalleryInfo_FlowerInfo struct {
	FlowerInfo *SceneGalleryFlowerInfo `protobuf:"bytes,11,opt,name=flower_info,json=flowerInfo,proto3,oneof"`
}

type SceneGalleryInfo_BulletInfo struct {
	BulletInfo *SceneGalleryBulletInfo `protobuf:"bytes,12,opt,name=bullet_info,json=bulletInfo,proto3,oneof"`
}

type SceneGalleryInfo_BrokenFloorInfo struct {
	BrokenFloorInfo *SceneGalleryBrokenFloorInfo `protobuf:"bytes,6,opt,name=broken_floor_info,json=brokenFloorInfo,proto3,oneof"`
}

type SceneGalleryInfo_HideAndSeekInfo struct {
	HideAndSeekInfo *SceneGalleryHideAndSeekInfo `protobuf:"bytes,13,opt,name=hide_and_seek_info,json=hideAndSeekInfo,proto3,oneof"`
}

type SceneGalleryInfo_BuoyantCombatInfo struct {
	BuoyantCombatInfo *SceneGalleryBuoyantCombatInfo `protobuf:"bytes,1224,opt,name=buoyant_combat_info,json=buoyantCombatInfo,proto3,oneof"`
}

type SceneGalleryInfo_BounceConjuringInfo struct {
	BounceConjuringInfo *SceneGalleryBounceConjuringInfo `protobuf:"bytes,621,opt,name=bounce_conjuring_info,json=bounceConjuringInfo,proto3,oneof"`
}

type SceneGalleryInfo_HandballInfo struct {
	HandballInfo *SceneGalleryHandballInfo `protobuf:"bytes,1835,opt,name=handball_info,json=handballInfo,proto3,oneof"`
}

type SceneGalleryInfo_SumoInfo struct {
	SumoInfo *SceneGallerySumoInfo `protobuf:"bytes,877,opt,name=sumo_info,json=sumoInfo,proto3,oneof"`
}

type SceneGalleryInfo_SalvagePreventInfo struct {
	SalvagePreventInfo *SceneGallerySalvagePreventInfo `protobuf:"bytes,1477,opt,name=salvage_prevent_info,json=salvagePreventInfo,proto3,oneof"`
}

type SceneGalleryInfo_SalvageEscortInfo struct {
	SalvageEscortInfo *SceneGallerySalvageEscortInfo `protobuf:"bytes,732,opt,name=salvage_escort_info,json=salvageEscortInfo,proto3,oneof"`
}

type SceneGalleryInfo_HomeBalloonInfo struct {
	HomeBalloonInfo *SceneGalleryHomeBalloonInfo `protobuf:"bytes,1866,opt,name=home_balloon_info,json=homeBalloonInfo,proto3,oneof"`
}

type SceneGalleryInfo_CrystalLinkInfo struct {
	CrystalLinkInfo *SceneGalleryCrystalLinkInfo `protobuf:"bytes,666,opt,name=crystal_link_info,json=crystalLinkInfo,proto3,oneof"`
}

type SceneGalleryInfo_IrodoriMasterInfo struct {
	IrodoriMasterInfo *SceneGalleryIrodoriMasterInfo `protobuf:"bytes,1679,opt,name=irodori_master_info,json=irodoriMasterInfo,proto3,oneof"`
}

type SceneGalleryInfo_LuminanceStoneChallengeInfo struct {
	LuminanceStoneChallengeInfo *SceneGalleryLuminanceStoneChallengeInfo `protobuf:"bytes,1847,opt,name=luminance_stone_challenge_info,json=luminanceStoneChallengeInfo,proto3,oneof"`
}

type SceneGalleryInfo_HomeSeekFurnitureInfo struct {
	HomeSeekFurnitureInfo *SceneGalleryHomeSeekFurnitureInfo `protobuf:"bytes,540,opt,name=home_seek_furniture_info,json=homeSeekFurnitureInfo,proto3,oneof"`
}

type SceneGalleryInfo_IslandPartyDownHillInfo struct {
	IslandPartyDownHillInfo *SceneGalleryIslandPartyDownHillInfo `protobuf:"bytes,2047,opt,name=island_party_down_hill_info,json=islandPartyDownHillInfo,proto3,oneof"`
}

type SceneGalleryInfo_SummerTimeV2BoatInfo struct {
	SummerTimeV2BoatInfo *SceneGallerySummerTimeV2BoatInfo `protobuf:"bytes,1890,opt,name=summer_time_v2_boat_info,json=summerTimeV2BoatInfo,proto3,oneof"`
}

type SceneGalleryInfo_IslandPartyRaftInfo struct {
	IslandPartyRaftInfo *SceneGalleryIslandPartyRaftInfo `protobuf:"bytes,244,opt,name=island_party_raft_info,json=islandPartyRaftInfo,proto3,oneof"`
}

type SceneGalleryInfo_IslandPartySailInfo struct {
	IslandPartySailInfo *SceneGalleryIslandPartySailInfo `protobuf:"bytes,633,opt,name=island_party_sail_info,json=islandPartySailInfo,proto3,oneof"`
}

type SceneGalleryInfo_InstableSprayInfo struct {
	InstableSprayInfo *SceneGalleryInstableSprayInfo `protobuf:"bytes,75,opt,name=instable_spray_info,json=instableSprayInfo,proto3,oneof"`
}

type SceneGalleryInfo_MuqadasPotionInfo struct {
	MuqadasPotionInfo *SceneGalleryMuqadasPotionInfo `protobuf:"bytes,496,opt,name=muqadas_potion_info,json=muqadasPotionInfo,proto3,oneof"`
}

type SceneGalleryInfo_TreasureSeelieInfo struct {
	TreasureSeelieInfo *SceneGalleryTreasureSeelieInfo `protobuf:"bytes,16,opt,name=treasure_seelie_info,json=treasureSeelieInfo,proto3,oneof"`
}

type SceneGalleryInfo_VintageHuntingInfo struct {
	VintageHuntingInfo *SceneGalleryVintageHuntingInfo `protobuf:"bytes,1470,opt,name=vintage_hunting_info,json=vintageHuntingInfo,proto3,oneof"`
}

type SceneGalleryInfo_WindFieldInfo struct {
	WindFieldInfo *SceneGalleryWindFieldInfo `protobuf:"bytes,1001,opt,name=wind_field_info,json=windFieldInfo,proto3,oneof"`
}

type SceneGalleryInfo_FungusFighterTrainingInfo struct {
	FungusFighterTrainingInfo *SceneGalleryFungusFighterTrainingInfo `protobuf:"bytes,861,opt,name=fungus_fighter_training_info,json=fungusFighterTrainingInfo,proto3,oneof"`
}

type SceneGalleryInfo_EffigyChallengeInfo struct {
	EffigyChallengeInfo *SceneGalleryEffigyChallengeV2Info `protobuf:"bytes,1577,opt,name=effigy_challenge_info,json=effigyChallengeInfo,proto3,oneof"`
}

type SceneGalleryInfo_FungusFighterCaptureInfo struct {
	FungusFighterCaptureInfo *SceneGalleryFungusFighterCaptureInfo `protobuf:"bytes,711,opt,name=fungus_fighter_capture_info,json=fungusFighterCaptureInfo,proto3,oneof"`
}

type SceneGalleryInfo_CharAmusementInfo struct {
	CharAmusementInfo *SceneGalleryCharAmusementInfo `protobuf:"bytes,152,opt,name=char_amusement_info,json=charAmusementInfo,proto3,oneof"`
}

type SceneGalleryInfo_CoinCollectInfo struct {
	CoinCollectInfo *SceneGalleryCoinCollectInfo `protobuf:"bytes,1243,opt,name=coin_collect_info,json=coinCollectInfo,proto3,oneof"`
}

func (*SceneGalleryInfo_BalloonInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_FallInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_FlowerInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_BulletInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_BrokenFloorInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_HideAndSeekInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_BuoyantCombatInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_BounceConjuringInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_HandballInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_SumoInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_SalvagePreventInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_SalvageEscortInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_HomeBalloonInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_CrystalLinkInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_IrodoriMasterInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_LuminanceStoneChallengeInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_HomeSeekFurnitureInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_IslandPartyDownHillInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_SummerTimeV2BoatInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_IslandPartyRaftInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_IslandPartySailInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_InstableSprayInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_MuqadasPotionInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_TreasureSeelieInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_VintageHuntingInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_WindFieldInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_FungusFighterTrainingInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_EffigyChallengeInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_FungusFighterCaptureInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_CharAmusementInfo) isSceneGalleryInfo_Info() {}

func (*SceneGalleryInfo_CoinCollectInfo) isSceneGalleryInfo_Info() {}

var File_SceneGalleryInfo_proto protoreflect.FileDescriptor

var file_SceneGalleryInfo_proto_rawDesc = []byte{
	0x0a, 0x16, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x42, 0x61,
	0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x25, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x42, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6a, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x79, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x42, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x41, 0x6d,
	0x75, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x21, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x45, 0x66, 0x66, 0x69, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x56, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1a, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x46, 0x61,
	0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x48, 0x61, 0x6e, 0x64, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x48, 0x69, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x65, 0x6b, 0x46,
	0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x23, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x72, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x72, 0x6f, 0x64, 0x6f, 0x72, 0x69, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x44, 0x6f, 0x77, 0x6e, 0x48, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x52, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x73, 0x6c, 0x61,
	0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x79, 0x4c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x6e,
	0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x4d, 0x75, 0x71, 0x61, 0x64, 0x61, 0x73, 0x50, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x61, 0x6c, 0x76, 0x61, 0x67, 0x65, 0x45, 0x73,
	0x63, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x61, 0x6c, 0x76,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x32, 0x42, 0x6f,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x75, 0x6d, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x65, 0x6c, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x56, 0x69, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x16, 0x0a, 0x10, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x72,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x34, 0x0a, 0x09, 0x66, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x79, 0x46, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x66,
	0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0b, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x4a, 0x0a, 0x11, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x6e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x12, 0x68,
	0x69, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x65, 0x6b, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x48, 0x69, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x65,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x68, 0x69, 0x64, 0x65, 0x41, 0x6e, 0x64,
	0x53, 0x65, 0x65, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x13, 0x62, 0x75, 0x6f, 0x79,
	0x61, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0xc8, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x42, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x57, 0x0a, 0x15, 0x62,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6a, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0xed, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x42, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x6a, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x13, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6a, 0x75, 0x72, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x62, 0x61, 0x6c, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xab, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x62,
	0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x62,
	0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x6f, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0xed, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x75, 0x6d, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x73, 0x75, 0x6d, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x54,
	0x0a, 0x14, 0x73, 0x61, 0x6c, 0x76, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xc5, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x61, 0x6c, 0x76,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x12, 0x73, 0x61, 0x6c, 0x76, 0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x13, 0x73, 0x61, 0x6c, 0x76, 0x61, 0x67, 0x65, 0x5f,
	0x65, 0x73, 0x63, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xdc, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x53, 0x61, 0x6c, 0x76, 0x61, 0x67, 0x65, 0x45, 0x73, 0x63, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x11, 0x73, 0x61, 0x6c, 0x76, 0x61, 0x67, 0x65, 0x45, 0x73, 0x63,
	0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x11, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xca, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x11, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x9a, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43,
	0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x0f, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x51, 0x0a, 0x13, 0x69, 0x72, 0x6f, 0x64, 0x6f, 0x72, 0x69, 0x5f, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x8f, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x72,
	0x6f, 0x64, 0x6f, 0x72, 0x69, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x11, 0x69, 0x72, 0x6f, 0x64, 0x6f, 0x72, 0x69, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x70, 0x0a, 0x1e, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb7, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4c, 0x75, 0x6d, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x1b, 0x6c, 0x75, 0x6d, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5e, 0x0a, 0x18, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x65, 0x6b, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x9c, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x65, 0x6b,
	0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x15, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x65, 0x6b, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x65, 0x0a, 0x1b, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x68, 0x69, 0x6c, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xff, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x73, 0x6c, 0x61, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x44, 0x6f, 0x77, 0x6e, 0x48, 0x69, 0x6c, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x17, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x44, 0x6f, 0x77, 0x6e, 0x48, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5c, 0x0a,
	0x18, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x32, 0x5f,
	0x62, 0x6f, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xe2, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53,
	0x75, 0x6d, 0x6d, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x32, 0x42, 0x6f, 0x61, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x14, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x56, 0x32, 0x42, 0x6f, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x16, 0x69,
	0x73, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x61, 0x66, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xf4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x73, 0x6c, 0x61, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x13, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x61, 0x66,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x16, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0xf9, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x53, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x13, 0x69, 0x73, 0x6c, 0x61,
	0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x50, 0x0a, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x72, 0x61,
	0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x70, 0x72, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x72, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x51, 0x0a, 0x13, 0x6d, 0x75, 0x71, 0x61, 0x64, 0x61, 0x73, 0x5f, 0x70, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xf0, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4d, 0x75,
	0x71, 0x61, 0x64, 0x61, 0x73, 0x50, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x11, 0x6d, 0x75, 0x71, 0x61, 0x64, 0x61, 0x73, 0x50, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x14, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x5f, 0x73, 0x65, 0x65, 0x6c, 0x69, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x65, 0x6c, 0x69, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53,
	0x65, 0x65, 0x6c, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x54, 0x0a, 0x14, 0x76, 0x69, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0xbe, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x56, 0x69, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x48, 0x75,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12, 0x76, 0x69, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x45, 0x0a, 0x0f, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x6a, 0x0a, 0x1c, 0x66, 0x75, 0x6e, 0x67, 0x75, 0x73,
	0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xdd, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x67,
	0x75, 0x73, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x19, 0x66, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x59, 0x0a, 0x15, 0x65, 0x66, 0x66, 0x69, 0x67, 0x79, 0x5f, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xa9, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x45, 0x66, 0x66, 0x69, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x56, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x13, 0x65, 0x66, 0x66, 0x69, 0x67, 0x79,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x67, 0x0a,
	0x1b, 0x66, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x5f,
	0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xc7, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x46, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x43,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x18, 0x66, 0x75,
	0x6e, 0x67, 0x75, 0x73, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x61,
	0x6d, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x98, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11, 0x63, 0x68, 0x61, 0x72, 0x41, 0x6d, 0x75, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x11, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xdb,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x47, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x06,
	0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_SceneGalleryInfo_proto_rawDescOnce sync.Once
	file_SceneGalleryInfo_proto_rawDescData = file_SceneGalleryInfo_proto_rawDesc
)

func file_SceneGalleryInfo_proto_rawDescGZIP() []byte {
	file_SceneGalleryInfo_proto_rawDescOnce.Do(func() {
		file_SceneGalleryInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_SceneGalleryInfo_proto_rawDescData)
	})
	return file_SceneGalleryInfo_proto_rawDescData
}

var file_SceneGalleryInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_SceneGalleryInfo_proto_goTypes = []interface{}{
	(*SceneGalleryInfo)(nil),                        // 0: SceneGalleryInfo
	(*SceneGalleryProgressInfo)(nil),                // 1: SceneGalleryProgressInfo
	(GalleryStageType)(0),                           // 2: GalleryStageType
	(*SceneGalleryBalloonInfo)(nil),                 // 3: SceneGalleryBalloonInfo
	(*SceneGalleryFallInfo)(nil),                    // 4: SceneGalleryFallInfo
	(*SceneGalleryFlowerInfo)(nil),                  // 5: SceneGalleryFlowerInfo
	(*SceneGalleryBulletInfo)(nil),                  // 6: SceneGalleryBulletInfo
	(*SceneGalleryBrokenFloorInfo)(nil),             // 7: SceneGalleryBrokenFloorInfo
	(*SceneGalleryHideAndSeekInfo)(nil),             // 8: SceneGalleryHideAndSeekInfo
	(*SceneGalleryBuoyantCombatInfo)(nil),           // 9: SceneGalleryBuoyantCombatInfo
	(*SceneGalleryBounceConjuringInfo)(nil),         // 10: SceneGalleryBounceConjuringInfo
	(*SceneGalleryHandballInfo)(nil),                // 11: SceneGalleryHandballInfo
	(*SceneGallerySumoInfo)(nil),                    // 12: SceneGallerySumoInfo
	(*SceneGallerySalvagePreventInfo)(nil),          // 13: SceneGallerySalvagePreventInfo
	(*SceneGallerySalvageEscortInfo)(nil),           // 14: SceneGallerySalvageEscortInfo
	(*SceneGalleryHomeBalloonInfo)(nil),             // 15: SceneGalleryHomeBalloonInfo
	(*SceneGalleryCrystalLinkInfo)(nil),             // 16: SceneGalleryCrystalLinkInfo
	(*SceneGalleryIrodoriMasterInfo)(nil),           // 17: SceneGalleryIrodoriMasterInfo
	(*SceneGalleryLuminanceStoneChallengeInfo)(nil), // 18: SceneGalleryLuminanceStoneChallengeInfo
	(*SceneGalleryHomeSeekFurnitureInfo)(nil),       // 19: SceneGalleryHomeSeekFurnitureInfo
	(*SceneGalleryIslandPartyDownHillInfo)(nil),     // 20: SceneGalleryIslandPartyDownHillInfo
	(*SceneGallerySummerTimeV2BoatInfo)(nil),        // 21: SceneGallerySummerTimeV2BoatInfo
	(*SceneGalleryIslandPartyRaftInfo)(nil),         // 22: SceneGalleryIslandPartyRaftInfo
	(*SceneGalleryIslandPartySailInfo)(nil),         // 23: SceneGalleryIslandPartySailInfo
	(*SceneGalleryInstableSprayInfo)(nil),           // 24: SceneGalleryInstableSprayInfo
	(*SceneGalleryMuqadasPotionInfo)(nil),           // 25: SceneGalleryMuqadasPotionInfo
	(*SceneGalleryTreasureSeelieInfo)(nil),          // 26: SceneGalleryTreasureSeelieInfo
	(*SceneGalleryVintageHuntingInfo)(nil),          // 27: SceneGalleryVintageHuntingInfo
	(*SceneGalleryWindFieldInfo)(nil),               // 28: SceneGalleryWindFieldInfo
	(*SceneGalleryFungusFighterTrainingInfo)(nil),   // 29: SceneGalleryFungusFighterTrainingInfo
	(*SceneGalleryEffigyChallengeV2Info)(nil),       // 30: SceneGalleryEffigyChallengeV2Info
	(*SceneGalleryFungusFighterCaptureInfo)(nil),    // 31: SceneGalleryFungusFighterCaptureInfo
	(*SceneGalleryCharAmusementInfo)(nil),           // 32: SceneGalleryCharAmusementInfo
	(*SceneGalleryCoinCollectInfo)(nil),             // 33: SceneGalleryCoinCollectInfo
}
var file_SceneGalleryInfo_proto_depIdxs = []int32{
	1,  // 0: SceneGalleryInfo.progress_info_list:type_name -> SceneGalleryProgressInfo
	2,  // 1: SceneGalleryInfo.stage:type_name -> GalleryStageType
	3,  // 2: SceneGalleryInfo.balloon_info:type_name -> SceneGalleryBalloonInfo
	4,  // 3: SceneGalleryInfo.fall_info:type_name -> SceneGalleryFallInfo
	5,  // 4: SceneGalleryInfo.flower_info:type_name -> SceneGalleryFlowerInfo
	6,  // 5: SceneGalleryInfo.bullet_info:type_name -> SceneGalleryBulletInfo
	7,  // 6: SceneGalleryInfo.broken_floor_info:type_name -> SceneGalleryBrokenFloorInfo
	8,  // 7: SceneGalleryInfo.hide_and_seek_info:type_name -> SceneGalleryHideAndSeekInfo
	9,  // 8: SceneGalleryInfo.buoyant_combat_info:type_name -> SceneGalleryBuoyantCombatInfo
	10, // 9: SceneGalleryInfo.bounce_conjuring_info:type_name -> SceneGalleryBounceConjuringInfo
	11, // 10: SceneGalleryInfo.handball_info:type_name -> SceneGalleryHandballInfo
	12, // 11: SceneGalleryInfo.sumo_info:type_name -> SceneGallerySumoInfo
	13, // 12: SceneGalleryInfo.salvage_prevent_info:type_name -> SceneGallerySalvagePreventInfo
	14, // 13: SceneGalleryInfo.salvage_escort_info:type_name -> SceneGallerySalvageEscortInfo
	15, // 14: SceneGalleryInfo.home_balloon_info:type_name -> SceneGalleryHomeBalloonInfo
	16, // 15: SceneGalleryInfo.crystal_link_info:type_name -> SceneGalleryCrystalLinkInfo
	17, // 16: SceneGalleryInfo.irodori_master_info:type_name -> SceneGalleryIrodoriMasterInfo
	18, // 17: SceneGalleryInfo.luminance_stone_challenge_info:type_name -> SceneGalleryLuminanceStoneChallengeInfo
	19, // 18: SceneGalleryInfo.home_seek_furniture_info:type_name -> SceneGalleryHomeSeekFurnitureInfo
	20, // 19: SceneGalleryInfo.island_party_down_hill_info:type_name -> SceneGalleryIslandPartyDownHillInfo
	21, // 20: SceneGalleryInfo.summer_time_v2_boat_info:type_name -> SceneGallerySummerTimeV2BoatInfo
	22, // 21: SceneGalleryInfo.island_party_raft_info:type_name -> SceneGalleryIslandPartyRaftInfo
	23, // 22: SceneGalleryInfo.island_party_sail_info:type_name -> SceneGalleryIslandPartySailInfo
	24, // 23: SceneGalleryInfo.instable_spray_info:type_name -> SceneGalleryInstableSprayInfo
	25, // 24: SceneGalleryInfo.muqadas_potion_info:type_name -> SceneGalleryMuqadasPotionInfo
	26, // 25: SceneGalleryInfo.treasure_seelie_info:type_name -> SceneGalleryTreasureSeelieInfo
	27, // 26: SceneGalleryInfo.vintage_hunting_info:type_name -> SceneGalleryVintageHuntingInfo
	28, // 27: SceneGalleryInfo.wind_field_info:type_name -> SceneGalleryWindFieldInfo
	29, // 28: SceneGalleryInfo.fungus_fighter_training_info:type_name -> SceneGalleryFungusFighterTrainingInfo
	30, // 29: SceneGalleryInfo.effigy_challenge_info:type_name -> SceneGalleryEffigyChallengeV2Info
	31, // 30: SceneGalleryInfo.fungus_fighter_capture_info:type_name -> SceneGalleryFungusFighterCaptureInfo
	32, // 31: SceneGalleryInfo.char_amusement_info:type_name -> SceneGalleryCharAmusementInfo
	33, // 32: SceneGalleryInfo.coin_collect_info:type_name -> SceneGalleryCoinCollectInfo
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_SceneGalleryInfo_proto_init() }
func file_SceneGalleryInfo_proto_init() {
	if File_SceneGalleryInfo_proto != nil {
		return
	}
	file_GalleryStageType_proto_init()
	file_SceneGalleryBalloonInfo_proto_init()
	file_SceneGalleryBounceConjuringInfo_proto_init()
	file_SceneGalleryBrokenFloorInfo_proto_init()
	file_SceneGalleryBulletInfo_proto_init()
	file_SceneGalleryBuoyantCombatInfo_proto_init()
	file_SceneGalleryCharAmusementInfo_proto_init()
	file_SceneGalleryCoinCollectInfo_proto_init()
	file_SceneGalleryCrystalLinkInfo_proto_init()
	file_SceneGalleryEffigyChallengeV2Info_proto_init()
	file_SceneGalleryFallInfo_proto_init()
	file_SceneGalleryFlowerInfo_proto_init()
	file_SceneGalleryFungusFighterCaptureInfo_proto_init()
	file_SceneGalleryFungusFighterTrainingInfo_proto_init()
	file_SceneGalleryHandballInfo_proto_init()
	file_SceneGalleryHideAndSeekInfo_proto_init()
	file_SceneGalleryHomeBalloonInfo_proto_init()
	file_SceneGalleryHomeSeekFurnitureInfo_proto_init()
	file_SceneGalleryInstableSprayInfo_proto_init()
	file_SceneGalleryIrodoriMasterInfo_proto_init()
	file_SceneGalleryIslandPartyDownHillInfo_proto_init()
	file_SceneGalleryIslandPartyRaftInfo_proto_init()
	file_SceneGalleryIslandPartySailInfo_proto_init()
	file_SceneGalleryLuminanceStoneChallengeInfo_proto_init()
	file_SceneGalleryMuqadasPotionInfo_proto_init()
	file_SceneGalleryProgressInfo_proto_init()
	file_SceneGallerySalvageEscortInfo_proto_init()
	file_SceneGallerySalvagePreventInfo_proto_init()
	file_SceneGallerySummerTimeV2BoatInfo_proto_init()
	file_SceneGallerySumoInfo_proto_init()
	file_SceneGalleryTreasureSeelieInfo_proto_init()
	file_SceneGalleryVintageHuntingInfo_proto_init()
	file_SceneGalleryWindFieldInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SceneGalleryInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneGalleryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_SceneGalleryInfo_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SceneGalleryInfo_BalloonInfo)(nil),
		(*SceneGalleryInfo_FallInfo)(nil),
		(*SceneGalleryInfo_FlowerInfo)(nil),
		(*SceneGalleryInfo_BulletInfo)(nil),
		(*SceneGalleryInfo_BrokenFloorInfo)(nil),
		(*SceneGalleryInfo_HideAndSeekInfo)(nil),
		(*SceneGalleryInfo_BuoyantCombatInfo)(nil),
		(*SceneGalleryInfo_BounceConjuringInfo)(nil),
		(*SceneGalleryInfo_HandballInfo)(nil),
		(*SceneGalleryInfo_SumoInfo)(nil),
		(*SceneGalleryInfo_SalvagePreventInfo)(nil),
		(*SceneGalleryInfo_SalvageEscortInfo)(nil),
		(*SceneGalleryInfo_HomeBalloonInfo)(nil),
		(*SceneGalleryInfo_CrystalLinkInfo)(nil),
		(*SceneGalleryInfo_IrodoriMasterInfo)(nil),
		(*SceneGalleryInfo_LuminanceStoneChallengeInfo)(nil),
		(*SceneGalleryInfo_HomeSeekFurnitureInfo)(nil),
		(*SceneGalleryInfo_IslandPartyDownHillInfo)(nil),
		(*SceneGalleryInfo_SummerTimeV2BoatInfo)(nil),
		(*SceneGalleryInfo_IslandPartyRaftInfo)(nil),
		(*SceneGalleryInfo_IslandPartySailInfo)(nil),
		(*SceneGalleryInfo_InstableSprayInfo)(nil),
		(*SceneGalleryInfo_MuqadasPotionInfo)(nil),
		(*SceneGalleryInfo_TreasureSeelieInfo)(nil),
		(*SceneGalleryInfo_VintageHuntingInfo)(nil),
		(*SceneGalleryInfo_WindFieldInfo)(nil),
		(*SceneGalleryInfo_FungusFighterTrainingInfo)(nil),
		(*SceneGalleryInfo_EffigyChallengeInfo)(nil),
		(*SceneGalleryInfo_FungusFighterCaptureInfo)(nil),
		(*SceneGalleryInfo_CharAmusementInfo)(nil),
		(*SceneGalleryInfo_CoinCollectInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SceneGalleryInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SceneGalleryInfo_proto_goTypes,
		DependencyIndexes: file_SceneGalleryInfo_proto_depIdxs,
		MessageInfos:      file_SceneGalleryInfo_proto_msgTypes,
	}.Build()
	File_SceneGalleryInfo_proto = out.File
	file_SceneGalleryInfo_proto_rawDesc = nil
	file_SceneGalleryInfo_proto_goTypes = nil
	file_SceneGalleryInfo_proto_depIdxs = nil
}
