// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: MNDCMMKBIBP.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MNDCMMKBIBP int32

const (
	MNDCMMKBIBP_MNDCMMKBIBP_Default            MNDCMMKBIBP = 0
	MNDCMMKBIBP_MNDCMMKBIBP_Effect             MNDCMMKBIBP = 1
	MNDCMMKBIBP_MNDCMMKBIBP_Cost               MNDCMMKBIBP = 2
	MNDCMMKBIBP_MNDCMMKBIBP_Gm                 MNDCMMKBIBP = 3
	MNDCMMKBIBP_MNDCMMKBIBP_Attack             MNDCMMKBIBP = 4
	MNDCMMKBIBP_MNDCMMKBIBP_Reboot             MNDCMMKBIBP = 5
	MNDCMMKBIBP_MNDCMMKBIBP_PlayCard           MNDCMMKBIBP = 6
	MNDCMMKBIBP_MNDCMMKBIBP_QuicklyOnstage     MNDCMMKBIBP = 7
	MNDCMMKBIBP_MNDCMMKBIBP_RemoveAfterDie     MNDCMMKBIBP = 8
	MNDCMMKBIBP_MNDCMMKBIBP_Init               MNDCMMKBIBP = 9
	MNDCMMKBIBP_MNDCMMKBIBP_EffectDamage       MNDCMMKBIBP = 10
	MNDCMMKBIBP_MNDCMMKBIBP_EffectHeal         MNDCMMKBIBP = 11
	MNDCMMKBIBP_MNDCMMKBIBP_EffectRevive       MNDCMMKBIBP = 12
	MNDCMMKBIBP_MNDCMMKBIBP_InitOnstage        MNDCMMKBIBP = 13
	MNDCMMKBIBP_MNDCMMKBIBP_DieOnstage         MNDCMMKBIBP = 14
	MNDCMMKBIBP_MNDCMMKBIBP_SelectOnstage      MNDCMMKBIBP = 15
	MNDCMMKBIBP_MNDCMMKBIBP_CharacterDie       MNDCMMKBIBP = 16
	MNDCMMKBIBP_MNDCMMKBIBP_ReviveWhenDeath    MNDCMMKBIBP = 17
	MNDCMMKBIBP_MNDCMMKBIBP_TransferToOpponent MNDCMMKBIBP = 18
	MNDCMMKBIBP_MNDCMMKBIBP_TransferDice       MNDCMMKBIBP = 19
)

// Enum value maps for MNDCMMKBIBP.
var (
	MNDCMMKBIBP_name = map[int32]string{
		0:  "MNDCMMKBIBP_Default",
		1:  "MNDCMMKBIBP_Effect",
		2:  "MNDCMMKBIBP_Cost",
		3:  "MNDCMMKBIBP_Gm",
		4:  "MNDCMMKBIBP_Attack",
		5:  "MNDCMMKBIBP_Reboot",
		6:  "MNDCMMKBIBP_PlayCard",
		7:  "MNDCMMKBIBP_QuicklyOnstage",
		8:  "MNDCMMKBIBP_RemoveAfterDie",
		9:  "MNDCMMKBIBP_Init",
		10: "MNDCMMKBIBP_EffectDamage",
		11: "MNDCMMKBIBP_EffectHeal",
		12: "MNDCMMKBIBP_EffectRevive",
		13: "MNDCMMKBIBP_InitOnstage",
		14: "MNDCMMKBIBP_DieOnstage",
		15: "MNDCMMKBIBP_SelectOnstage",
		16: "MNDCMMKBIBP_CharacterDie",
		17: "MNDCMMKBIBP_ReviveWhenDeath",
		18: "MNDCMMKBIBP_TransferToOpponent",
		19: "MNDCMMKBIBP_TransferDice",
	}
	MNDCMMKBIBP_value = map[string]int32{
		"MNDCMMKBIBP_Default":            0,
		"MNDCMMKBIBP_Effect":             1,
		"MNDCMMKBIBP_Cost":               2,
		"MNDCMMKBIBP_Gm":                 3,
		"MNDCMMKBIBP_Attack":             4,
		"MNDCMMKBIBP_Reboot":             5,
		"MNDCMMKBIBP_PlayCard":           6,
		"MNDCMMKBIBP_QuicklyOnstage":     7,
		"MNDCMMKBIBP_RemoveAfterDie":     8,
		"MNDCMMKBIBP_Init":               9,
		"MNDCMMKBIBP_EffectDamage":       10,
		"MNDCMMKBIBP_EffectHeal":         11,
		"MNDCMMKBIBP_EffectRevive":       12,
		"MNDCMMKBIBP_InitOnstage":        13,
		"MNDCMMKBIBP_DieOnstage":         14,
		"MNDCMMKBIBP_SelectOnstage":      15,
		"MNDCMMKBIBP_CharacterDie":       16,
		"MNDCMMKBIBP_ReviveWhenDeath":    17,
		"MNDCMMKBIBP_TransferToOpponent": 18,
		"MNDCMMKBIBP_TransferDice":       19,
	}
)

func (x MNDCMMKBIBP) Enum() *MNDCMMKBIBP {
	p := new(MNDCMMKBIBP)
	*p = x
	return p
}

func (x MNDCMMKBIBP) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MNDCMMKBIBP) Descriptor() protoreflect.EnumDescriptor {
	return file_MNDCMMKBIBP_proto_enumTypes[0].Descriptor()
}

func (MNDCMMKBIBP) Type() protoreflect.EnumType {
	return &file_MNDCMMKBIBP_proto_enumTypes[0]
}

func (x MNDCMMKBIBP) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MNDCMMKBIBP.Descriptor instead.
func (MNDCMMKBIBP) EnumDescriptor() ([]byte, []int) {
	return file_MNDCMMKBIBP_proto_rawDescGZIP(), []int{0}
}

var File_MNDCMMKBIBP_proto protoreflect.FileDescriptor

var file_MNDCMMKBIBP_proto_rawDesc = []byte{
	0x0a, 0x11, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2a, 0xb9, 0x04, 0x0a, 0x0b, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42,
	0x49, 0x42, 0x50, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49,
	0x42, 0x50, 0x5f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42,
	0x49, 0x42, 0x50, 0x5f, 0x43, 0x6f, 0x73, 0x74, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4e,
	0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x47, 0x6d, 0x10, 0x03, 0x12, 0x16,
	0x0a, 0x12, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d,
	0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x10, 0x05, 0x12, 0x18,
	0x0a, 0x14, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x50, 0x6c,
	0x61, 0x79, 0x43, 0x61, 0x72, 0x64, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x4e, 0x44, 0x43,
	0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x6c, 0x79, 0x4f,
	0x6e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x10, 0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x4e, 0x44, 0x43,
	0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x44, 0x69, 0x65, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4e, 0x44, 0x43,
	0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x09, 0x12, 0x1c,
	0x0a, 0x18, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16,
	0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x10, 0x0b, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x4e, 0x44, 0x43,
	0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x76, 0x65, 0x10, 0x0c, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d,
	0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x4f, 0x6e, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x10, 0x0d, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49,
	0x42, 0x50, 0x5f, 0x44, 0x69, 0x65, 0x4f, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x10, 0x0e, 0x12,
	0x1d, 0x0a, 0x19, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x10, 0x0f, 0x12, 0x1c,
	0x0a, 0x18, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x44, 0x69, 0x65, 0x10, 0x10, 0x12, 0x1f, 0x0a, 0x1b,
	0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x52, 0x65, 0x76, 0x69,
	0x76, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x44, 0x65, 0x61, 0x74, 0x68, 0x10, 0x11, 0x12, 0x22, 0x0a,
	0x1e, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50, 0x5f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x10,
	0x12, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x4e, 0x44, 0x43, 0x4d, 0x4d, 0x4b, 0x42, 0x49, 0x42, 0x50,
	0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x69, 0x63, 0x65, 0x10, 0x13, 0x42,
	0x06, 0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_MNDCMMKBIBP_proto_rawDescOnce sync.Once
	file_MNDCMMKBIBP_proto_rawDescData = file_MNDCMMKBIBP_proto_rawDesc
)

func file_MNDCMMKBIBP_proto_rawDescGZIP() []byte {
	file_MNDCMMKBIBP_proto_rawDescOnce.Do(func() {
		file_MNDCMMKBIBP_proto_rawDescData = protoimpl.X.CompressGZIP(file_MNDCMMKBIBP_proto_rawDescData)
	})
	return file_MNDCMMKBIBP_proto_rawDescData
}

var file_MNDCMMKBIBP_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_MNDCMMKBIBP_proto_goTypes = []interface{}{
	(MNDCMMKBIBP)(0), // 0: MNDCMMKBIBP
}
var file_MNDCMMKBIBP_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_MNDCMMKBIBP_proto_init() }
func file_MNDCMMKBIBP_proto_init() {
	if File_MNDCMMKBIBP_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MNDCMMKBIBP_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_MNDCMMKBIBP_proto_goTypes,
		DependencyIndexes: file_MNDCMMKBIBP_proto_depIdxs,
		EnumInfos:         file_MNDCMMKBIBP_proto_enumTypes,
	}.Build()
	File_MNDCMMKBIBP_proto = out.File
	file_MNDCMMKBIBP_proto_rawDesc = nil
	file_MNDCMMKBIBP_proto_goTypes = nil
	file_MNDCMMKBIBP_proto_depIdxs = nil
}
