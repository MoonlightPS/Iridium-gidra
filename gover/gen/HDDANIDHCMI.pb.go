// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: HDDANIDHCMI.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HDDANIDHCMI int32

const (
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopNone                HDDANIDHCMI = 0
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopTimeup              HDDANIDHCMI = 1
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopClientInterrupt     HDDANIDHCMI = 2
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopLuaInterruptSuccess HDDANIDHCMI = 3
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopLuaInterruptFail    HDDANIDHCMI = 4
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopOwnerLeaveScene     HDDANIDHCMI = 5
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopPlayInitFailed      HDDANIDHCMI = 6
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopOtherPlayerEnter    HDDANIDHCMI = 7
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopAvatarDie           HDDANIDHCMI = 8
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopFinished            HDDANIDHCMI = 9
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopFungusAllDie        HDDANIDHCMI = 10
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopLifeCountZero       HDDANIDHCMI = 11
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopActivityClosed      HDDANIDHCMI = 12
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopLeaveRegionFail     HDDANIDHCMI = 13
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopHeartBloodUsedOut   HDDANIDHCMI = 14
	HDDANIDHCMI_HDDANIDHCMI_GalleryStopGuardianStoneDie    HDDANIDHCMI = 15
)

// Enum value maps for HDDANIDHCMI.
var (
	HDDANIDHCMI_name = map[int32]string{
		0:  "HDDANIDHCMI_GalleryStopNone",
		1:  "HDDANIDHCMI_GalleryStopTimeup",
		2:  "HDDANIDHCMI_GalleryStopClientInterrupt",
		3:  "HDDANIDHCMI_GalleryStopLuaInterruptSuccess",
		4:  "HDDANIDHCMI_GalleryStopLuaInterruptFail",
		5:  "HDDANIDHCMI_GalleryStopOwnerLeaveScene",
		6:  "HDDANIDHCMI_GalleryStopPlayInitFailed",
		7:  "HDDANIDHCMI_GalleryStopOtherPlayerEnter",
		8:  "HDDANIDHCMI_GalleryStopAvatarDie",
		9:  "HDDANIDHCMI_GalleryStopFinished",
		10: "HDDANIDHCMI_GalleryStopFungusAllDie",
		11: "HDDANIDHCMI_GalleryStopLifeCountZero",
		12: "HDDANIDHCMI_GalleryStopActivityClosed",
		13: "HDDANIDHCMI_GalleryStopLeaveRegionFail",
		14: "HDDANIDHCMI_GalleryStopHeartBloodUsedOut",
		15: "HDDANIDHCMI_GalleryStopGuardianStoneDie",
	}
	HDDANIDHCMI_value = map[string]int32{
		"HDDANIDHCMI_GalleryStopNone":                0,
		"HDDANIDHCMI_GalleryStopTimeup":              1,
		"HDDANIDHCMI_GalleryStopClientInterrupt":     2,
		"HDDANIDHCMI_GalleryStopLuaInterruptSuccess": 3,
		"HDDANIDHCMI_GalleryStopLuaInterruptFail":    4,
		"HDDANIDHCMI_GalleryStopOwnerLeaveScene":     5,
		"HDDANIDHCMI_GalleryStopPlayInitFailed":      6,
		"HDDANIDHCMI_GalleryStopOtherPlayerEnter":    7,
		"HDDANIDHCMI_GalleryStopAvatarDie":           8,
		"HDDANIDHCMI_GalleryStopFinished":            9,
		"HDDANIDHCMI_GalleryStopFungusAllDie":        10,
		"HDDANIDHCMI_GalleryStopLifeCountZero":       11,
		"HDDANIDHCMI_GalleryStopActivityClosed":      12,
		"HDDANIDHCMI_GalleryStopLeaveRegionFail":     13,
		"HDDANIDHCMI_GalleryStopHeartBloodUsedOut":   14,
		"HDDANIDHCMI_GalleryStopGuardianStoneDie":    15,
	}
)

func (x HDDANIDHCMI) Enum() *HDDANIDHCMI {
	p := new(HDDANIDHCMI)
	*p = x
	return p
}

func (x HDDANIDHCMI) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HDDANIDHCMI) Descriptor() protoreflect.EnumDescriptor {
	return file_HDDANIDHCMI_proto_enumTypes[0].Descriptor()
}

func (HDDANIDHCMI) Type() protoreflect.EnumType {
	return &file_HDDANIDHCMI_proto_enumTypes[0]
}

func (x HDDANIDHCMI) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HDDANIDHCMI.Descriptor instead.
func (HDDANIDHCMI) EnumDescriptor() ([]byte, []int) {
	return file_HDDANIDHCMI_proto_rawDescGZIP(), []int{0}
}

var File_HDDANIDHCMI_proto protoreflect.FileDescriptor

var file_HDDANIDHCMI_proto_rawDesc = []byte{
	0x0a, 0x11, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2a, 0xae, 0x05, 0x0a, 0x0b, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48,
	0x43, 0x4d, 0x49, 0x12, 0x1f, 0x0a, 0x1b, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48, 0x43,
	0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x6f,
	0x6e, 0x65, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48,
	0x43, 0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x75, 0x70, 0x10, 0x01, 0x12, 0x2a, 0x0a, 0x26, 0x48, 0x44, 0x44, 0x41, 0x4e,
	0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x6f, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70,
	0x74, 0x10, 0x02, 0x12, 0x2e, 0x0a, 0x2a, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48, 0x43,
	0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x75,
	0x61, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x10, 0x03, 0x12, 0x2b, 0x0a, 0x27, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48, 0x43,
	0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x75,
	0x61, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x10, 0x04,
	0x12, 0x2a, 0x0a, 0x26, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x5f,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x10, 0x05, 0x12, 0x29, 0x0a, 0x25,
	0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x69, 0x74, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x06, 0x12, 0x2b, 0x0a, 0x27, 0x48, 0x44, 0x44, 0x41, 0x4e,
	0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x6f, 0x70, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x10, 0x07, 0x12, 0x24, 0x0a, 0x20, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48,
	0x43, 0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x69, 0x65, 0x10, 0x08, 0x12, 0x23, 0x0a, 0x1f, 0x48, 0x44,
	0x44, 0x41, 0x4e, 0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x6f, 0x70, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x09, 0x12,
	0x27, 0x0a, 0x23, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x5f, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x46, 0x75, 0x6e, 0x67, 0x75, 0x73,
	0x41, 0x6c, 0x6c, 0x44, 0x69, 0x65, 0x10, 0x0a, 0x12, 0x28, 0x0a, 0x24, 0x48, 0x44, 0x44, 0x41,
	0x4e, 0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x6f, 0x70, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x65, 0x72, 0x6f,
	0x10, 0x0b, 0x12, 0x29, 0x0a, 0x25, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48, 0x43, 0x4d,
	0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x10, 0x0c, 0x12, 0x2a, 0x0a,
	0x26, 0x48, 0x44, 0x44, 0x41, 0x4e, 0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x10, 0x0d, 0x12, 0x2c, 0x0a, 0x28, 0x48, 0x44, 0x44,
	0x41, 0x4e, 0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79,
	0x53, 0x74, 0x6f, 0x70, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x55, 0x73,
	0x65, 0x64, 0x4f, 0x75, 0x74, 0x10, 0x0e, 0x12, 0x2b, 0x0a, 0x27, 0x48, 0x44, 0x44, 0x41, 0x4e,
	0x49, 0x44, 0x48, 0x43, 0x4d, 0x49, 0x5f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x6f, 0x70, 0x47, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x6e, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x44,
	0x69, 0x65, 0x10, 0x0f, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_HDDANIDHCMI_proto_rawDescOnce sync.Once
	file_HDDANIDHCMI_proto_rawDescData = file_HDDANIDHCMI_proto_rawDesc
)

func file_HDDANIDHCMI_proto_rawDescGZIP() []byte {
	file_HDDANIDHCMI_proto_rawDescOnce.Do(func() {
		file_HDDANIDHCMI_proto_rawDescData = protoimpl.X.CompressGZIP(file_HDDANIDHCMI_proto_rawDescData)
	})
	return file_HDDANIDHCMI_proto_rawDescData
}

var file_HDDANIDHCMI_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_HDDANIDHCMI_proto_goTypes = []interface{}{
	(HDDANIDHCMI)(0), // 0: HDDANIDHCMI
}
var file_HDDANIDHCMI_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_HDDANIDHCMI_proto_init() }
func file_HDDANIDHCMI_proto_init() {
	if File_HDDANIDHCMI_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_HDDANIDHCMI_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_HDDANIDHCMI_proto_goTypes,
		DependencyIndexes: file_HDDANIDHCMI_proto_depIdxs,
		EnumInfos:         file_HDDANIDHCMI_proto_enumTypes,
	}.Build()
	File_HDDANIDHCMI_proto = out.File
	file_HDDANIDHCMI_proto_rawDesc = nil
	file_HDDANIDHCMI_proto_goTypes = nil
	file_HDDANIDHCMI_proto_depIdxs = nil
}
