// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: JKLJHDFICPL.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JKLJHDFICPL int32

const (
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelNone       JKLJHDFICPL = 0
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelConst      JKLJHDFICPL = 1
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelWeek       JKLJHDFICPL = 2
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelWorld      JKLJHDFICPL = 3
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelBoss       JKLJHDFICPL = 4
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelCharacter  JKLJHDFICPL = 5
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelBreak      JKLJHDFICPL = 6
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelQuest      JKLJHDFICPL = 7
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelGuideGroup JKLJHDFICPL = 8
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelOther      JKLJHDFICPL = 9
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelJourney    JKLJHDFICPL = 10
	JKLJHDFICPL_JKLJHDFICPL_GcgLevelPve        JKLJHDFICPL = 11
)

// Enum value maps for JKLJHDFICPL.
var (
	JKLJHDFICPL_name = map[int32]string{
		0:  "JKLJHDFICPL_GcgLevelNone",
		1:  "JKLJHDFICPL_GcgLevelConst",
		2:  "JKLJHDFICPL_GcgLevelWeek",
		3:  "JKLJHDFICPL_GcgLevelWorld",
		4:  "JKLJHDFICPL_GcgLevelBoss",
		5:  "JKLJHDFICPL_GcgLevelCharacter",
		6:  "JKLJHDFICPL_GcgLevelBreak",
		7:  "JKLJHDFICPL_GcgLevelQuest",
		8:  "JKLJHDFICPL_GcgLevelGuideGroup",
		9:  "JKLJHDFICPL_GcgLevelOther",
		10: "JKLJHDFICPL_GcgLevelJourney",
		11: "JKLJHDFICPL_GcgLevelPve",
	}
	JKLJHDFICPL_value = map[string]int32{
		"JKLJHDFICPL_GcgLevelNone":       0,
		"JKLJHDFICPL_GcgLevelConst":      1,
		"JKLJHDFICPL_GcgLevelWeek":       2,
		"JKLJHDFICPL_GcgLevelWorld":      3,
		"JKLJHDFICPL_GcgLevelBoss":       4,
		"JKLJHDFICPL_GcgLevelCharacter":  5,
		"JKLJHDFICPL_GcgLevelBreak":      6,
		"JKLJHDFICPL_GcgLevelQuest":      7,
		"JKLJHDFICPL_GcgLevelGuideGroup": 8,
		"JKLJHDFICPL_GcgLevelOther":      9,
		"JKLJHDFICPL_GcgLevelJourney":    10,
		"JKLJHDFICPL_GcgLevelPve":        11,
	}
)

func (x JKLJHDFICPL) Enum() *JKLJHDFICPL {
	p := new(JKLJHDFICPL)
	*p = x
	return p
}

func (x JKLJHDFICPL) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JKLJHDFICPL) Descriptor() protoreflect.EnumDescriptor {
	return file_JKLJHDFICPL_proto_enumTypes[0].Descriptor()
}

func (JKLJHDFICPL) Type() protoreflect.EnumType {
	return &file_JKLJHDFICPL_proto_enumTypes[0]
}

func (x JKLJHDFICPL) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JKLJHDFICPL.Descriptor instead.
func (JKLJHDFICPL) EnumDescriptor() ([]byte, []int) {
	return file_JKLJHDFICPL_proto_rawDescGZIP(), []int{0}
}

var File_JKLJHDFICPL_proto protoreflect.FileDescriptor

var file_JKLJHDFICPL_proto_rawDesc = []byte{
	0x0a, 0x11, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2a, 0x87, 0x03, 0x0a, 0x0b, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49,
	0x43, 0x50, 0x4c, 0x12, 0x1c, 0x0a, 0x18, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43,
	0x50, 0x4c, 0x5f, 0x47, 0x63, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c,
	0x5f, 0x47, 0x63, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x10, 0x01,
	0x12, 0x1c, 0x0a, 0x18, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x5f,
	0x47, 0x63, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x57, 0x65, 0x65, 0x6b, 0x10, 0x02, 0x12, 0x1d,
	0x0a, 0x19, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x5f, 0x47, 0x63,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x10, 0x03, 0x12, 0x1c, 0x0a,
	0x18, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x5f, 0x47, 0x63, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x6f, 0x73, 0x73, 0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x4a,
	0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x5f, 0x47, 0x63, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x10, 0x05, 0x12, 0x1d,
	0x0a, 0x19, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x5f, 0x47, 0x63,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x10, 0x06, 0x12, 0x1d, 0x0a,
	0x19, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x5f, 0x47, 0x63, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x10, 0x07, 0x12, 0x22, 0x0a, 0x1e,
	0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x5f, 0x47, 0x63, 0x67, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x47, 0x75, 0x69, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x08,
	0x12, 0x1d, 0x0a, 0x19, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x5f,
	0x47, 0x63, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x09, 0x12,
	0x1f, 0x0a, 0x1b, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x5f, 0x47,
	0x63, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x10, 0x0a,
	0x12, 0x1b, 0x0a, 0x17, 0x4a, 0x4b, 0x4c, 0x4a, 0x48, 0x44, 0x46, 0x49, 0x43, 0x50, 0x4c, 0x5f,
	0x47, 0x63, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x76, 0x65, 0x10, 0x0b, 0x42, 0x06, 0x5a,
	0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_JKLJHDFICPL_proto_rawDescOnce sync.Once
	file_JKLJHDFICPL_proto_rawDescData = file_JKLJHDFICPL_proto_rawDesc
)

func file_JKLJHDFICPL_proto_rawDescGZIP() []byte {
	file_JKLJHDFICPL_proto_rawDescOnce.Do(func() {
		file_JKLJHDFICPL_proto_rawDescData = protoimpl.X.CompressGZIP(file_JKLJHDFICPL_proto_rawDescData)
	})
	return file_JKLJHDFICPL_proto_rawDescData
}

var file_JKLJHDFICPL_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_JKLJHDFICPL_proto_goTypes = []interface{}{
	(JKLJHDFICPL)(0), // 0: JKLJHDFICPL
}
var file_JKLJHDFICPL_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_JKLJHDFICPL_proto_init() }
func file_JKLJHDFICPL_proto_init() {
	if File_JKLJHDFICPL_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_JKLJHDFICPL_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_JKLJHDFICPL_proto_goTypes,
		DependencyIndexes: file_JKLJHDFICPL_proto_depIdxs,
		EnumInfos:         file_JKLJHDFICPL_proto_enumTypes,
	}.Build()
	File_JKLJHDFICPL_proto = out.File
	file_JKLJHDFICPL_proto_rawDesc = nil
	file_JKLJHDFICPL_proto_goTypes = nil
	file_JKLJHDFICPL_proto_depIdxs = nil
}
