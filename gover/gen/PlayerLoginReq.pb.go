// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.11.3
// source: PlayerLoginReq.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceUuid             string              `protobuf:"bytes,5,opt,name=device_uuid,json=deviceUuid,proto3" json:"device_uuid,omitempty"`
	TargetUid              uint32              `protobuf:"varint,10,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	ExtraBinData           []byte              `protobuf:"bytes,2046,opt,name=extra_bin_data,json=extraBinData,proto3" json:"extra_bin_data,omitempty"`
	Platform               string              `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform,omitempty"`
	Checksum               string              `protobuf:"bytes,1334,opt,name=checksum,proto3" json:"checksum,omitempty"`
	ChannelId              uint32              `protobuf:"varint,1565,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ClientVerisonHash      string              `protobuf:"bytes,2040,opt,name=client_verison_hash,json=clientVerisonHash,proto3" json:"client_verison_hash,omitempty"`
	LanguageType           uint32              `protobuf:"varint,11,opt,name=language_type,json=languageType,proto3" json:"language_type,omitempty"`
	ClientDataVersion      uint32              `protobuf:"varint,847,opt,name=client_data_version,json=clientDataVersion,proto3" json:"client_data_version,omitempty"`
	AccountType            uint32              `protobuf:"varint,7,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	SecurityLibraryMd5     string              `protobuf:"bytes,868,opt,name=security_library_md5,json=securityLibraryMd5,proto3" json:"security_library_md5,omitempty"`
	OnlineId               string              `protobuf:"bytes,577,opt,name=online_id,json=onlineId,proto3" json:"online_id,omitempty"`
	Unk3300_PMGFBMJNNCL    uint32              `protobuf:"varint,82,opt,name=Unk3300_PMGFBMJNNCL,json=Unk3300PMGFBMJNNCL,proto3" json:"Unk3300_PMGFBMJNNCL,omitempty"`
	DeviceName             string              `protobuf:"bytes,12,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	Birthday               string              `protobuf:"bytes,875,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Tag                    uint32              `protobuf:"varint,525,opt,name=tag,proto3" json:"tag,omitempty"`
	AccountUid             string              `protobuf:"bytes,14,opt,name=account_uid,json=accountUid,proto3" json:"account_uid,omitempty"`
	DeviceInfo             string              `protobuf:"bytes,15,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	SubChannelId           uint32              `protobuf:"varint,1458,opt,name=sub_channel_id,json=subChannelId,proto3" json:"sub_channel_id,omitempty"`
	IsEditor               bool                `protobuf:"varint,1,opt,name=is_editor,json=isEditor,proto3" json:"is_editor,omitempty"`
	Token                  string              `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	RegPlatform            uint32              `protobuf:"varint,424,opt,name=reg_platform,json=regPlatform,proto3" json:"reg_platform,omitempty"`
	ChecksumClientVersion  string              `protobuf:"bytes,581,opt,name=checksum_client_version,json=checksumClientVersion,proto3" json:"checksum_client_version,omitempty"`
	Unk3300_OOBHAIIIPHH    uint32              `protobuf:"varint,85,opt,name=Unk3300_OOBHAIIIPHH,json=Unk3300OOBHAIIIPHH,proto3" json:"Unk3300_OOBHAIIIPHH,omitempty"`
	Unk3300_NDLANBEIGEG    uint32              `protobuf:"varint,1320,opt,name=Unk3300_NDLANBEIGEG,json=Unk3300NDLANBEIGEG,proto3" json:"Unk3300_NDLANBEIGEG,omitempty"`
	CountryCode            string              `protobuf:"bytes,104,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	GmUid                  uint32              `protobuf:"varint,1790,opt,name=gm_uid,json=gmUid,proto3" json:"gm_uid,omitempty"`
	TrackingIoInfo         *TrackingIOInfo     `protobuf:"bytes,1713,opt,name=tracking_io_info,json=trackingIoInfo,proto3" json:"tracking_io_info,omitempty"`
	IsTransfer             bool                `protobuf:"varint,624,opt,name=is_transfer,json=isTransfer,proto3" json:"is_transfer,omitempty"`
	SecurityLibraryVersion string              `protobuf:"bytes,828,opt,name=security_library_version,json=securityLibraryVersion,proto3" json:"security_library_version,omitempty"`
	ClientVersion          string              `protobuf:"bytes,2,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	IsGuest                bool                `protobuf:"varint,13,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
	SystemVersion          string              `protobuf:"bytes,6,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	TargetHomeOwnerUid     uint32              `protobuf:"varint,899,opt,name=target_home_owner_uid,json=targetHomeOwnerUid,proto3" json:"target_home_owner_uid,omitempty"`
	PsnId                  string              `protobuf:"bytes,1146,opt,name=psn_id,json=psnId,proto3" json:"psn_id,omitempty"`
	SecurityCmdReply       []byte              `protobuf:"bytes,874,opt,name=security_cmd_reply,json=securityCmdReply,proto3" json:"security_cmd_reply,omitempty"`
	Unk3300_OFFHPAFIFGD    uint32              `protobuf:"varint,1028,opt,name=Unk3300_OFFHPAFIFGD,json=Unk3300OFFHPAFIFGD,proto3" json:"Unk3300_OFFHPAFIFGD,omitempty"`
	LoginRand              uint64              `protobuf:"varint,9,opt,name=login_rand,json=loginRand,proto3" json:"login_rand,omitempty"`
	AdjustTrackingInfo     *AdjustTrackingInfo `protobuf:"bytes,64,opt,name=adjust_tracking_info,json=adjustTrackingInfo,proto3" json:"adjust_tracking_info,omitempty"`
	EnvironmentErrorCode   []byte              `protobuf:"bytes,256,opt,name=environment_error_code,json=environmentErrorCode,proto3" json:"environment_error_code,omitempty"`
	PlatformType           uint32              `protobuf:"varint,3,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`
	Cps                    string              `protobuf:"bytes,1983,opt,name=cps,proto3" json:"cps,omitempty"`
}

func (x *PlayerLoginReq) Reset() {
	*x = PlayerLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PlayerLoginReq_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginReq) ProtoMessage() {}

func (x *PlayerLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_PlayerLoginReq_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginReq.ProtoReflect.Descriptor instead.
func (*PlayerLoginReq) Descriptor() ([]byte, []int) {
	return file_PlayerLoginReq_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerLoginReq) GetDeviceUuid() string {
	if x != nil {
		return x.DeviceUuid
	}
	return ""
}

func (x *PlayerLoginReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *PlayerLoginReq) GetExtraBinData() []byte {
	if x != nil {
		return x.ExtraBinData
	}
	return nil
}

func (x *PlayerLoginReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *PlayerLoginReq) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *PlayerLoginReq) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *PlayerLoginReq) GetClientVerisonHash() string {
	if x != nil {
		return x.ClientVerisonHash
	}
	return ""
}

func (x *PlayerLoginReq) GetLanguageType() uint32 {
	if x != nil {
		return x.LanguageType
	}
	return 0
}

func (x *PlayerLoginReq) GetClientDataVersion() uint32 {
	if x != nil {
		return x.ClientDataVersion
	}
	return 0
}

func (x *PlayerLoginReq) GetAccountType() uint32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *PlayerLoginReq) GetSecurityLibraryMd5() string {
	if x != nil {
		return x.SecurityLibraryMd5
	}
	return ""
}

func (x *PlayerLoginReq) GetOnlineId() string {
	if x != nil {
		return x.OnlineId
	}
	return ""
}

func (x *PlayerLoginReq) GetUnk3300_PMGFBMJNNCL() uint32 {
	if x != nil {
		return x.Unk3300_PMGFBMJNNCL
	}
	return 0
}

func (x *PlayerLoginReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *PlayerLoginReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *PlayerLoginReq) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *PlayerLoginReq) GetAccountUid() string {
	if x != nil {
		return x.AccountUid
	}
	return ""
}

func (x *PlayerLoginReq) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

func (x *PlayerLoginReq) GetSubChannelId() uint32 {
	if x != nil {
		return x.SubChannelId
	}
	return 0
}

func (x *PlayerLoginReq) GetIsEditor() bool {
	if x != nil {
		return x.IsEditor
	}
	return false
}

func (x *PlayerLoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PlayerLoginReq) GetRegPlatform() uint32 {
	if x != nil {
		return x.RegPlatform
	}
	return 0
}

func (x *PlayerLoginReq) GetChecksumClientVersion() string {
	if x != nil {
		return x.ChecksumClientVersion
	}
	return ""
}

func (x *PlayerLoginReq) GetUnk3300_OOBHAIIIPHH() uint32 {
	if x != nil {
		return x.Unk3300_OOBHAIIIPHH
	}
	return 0
}

func (x *PlayerLoginReq) GetUnk3300_NDLANBEIGEG() uint32 {
	if x != nil {
		return x.Unk3300_NDLANBEIGEG
	}
	return 0
}

func (x *PlayerLoginReq) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *PlayerLoginReq) GetGmUid() uint32 {
	if x != nil {
		return x.GmUid
	}
	return 0
}

func (x *PlayerLoginReq) GetTrackingIoInfo() *TrackingIOInfo {
	if x != nil {
		return x.TrackingIoInfo
	}
	return nil
}

func (x *PlayerLoginReq) GetIsTransfer() bool {
	if x != nil {
		return x.IsTransfer
	}
	return false
}

func (x *PlayerLoginReq) GetSecurityLibraryVersion() string {
	if x != nil {
		return x.SecurityLibraryVersion
	}
	return ""
}

func (x *PlayerLoginReq) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *PlayerLoginReq) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

func (x *PlayerLoginReq) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *PlayerLoginReq) GetTargetHomeOwnerUid() uint32 {
	if x != nil {
		return x.TargetHomeOwnerUid
	}
	return 0
}

func (x *PlayerLoginReq) GetPsnId() string {
	if x != nil {
		return x.PsnId
	}
	return ""
}

func (x *PlayerLoginReq) GetSecurityCmdReply() []byte {
	if x != nil {
		return x.SecurityCmdReply
	}
	return nil
}

func (x *PlayerLoginReq) GetUnk3300_OFFHPAFIFGD() uint32 {
	if x != nil {
		return x.Unk3300_OFFHPAFIFGD
	}
	return 0
}

func (x *PlayerLoginReq) GetLoginRand() uint64 {
	if x != nil {
		return x.LoginRand
	}
	return 0
}

func (x *PlayerLoginReq) GetAdjustTrackingInfo() *AdjustTrackingInfo {
	if x != nil {
		return x.AdjustTrackingInfo
	}
	return nil
}

func (x *PlayerLoginReq) GetEnvironmentErrorCode() []byte {
	if x != nil {
		return x.EnvironmentErrorCode
	}
	return nil
}

func (x *PlayerLoginReq) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *PlayerLoginReq) GetCps() string {
	if x != nil {
		return x.Cps
	}
	return ""
}

var File_PlayerLoginReq_proto protoreflect.FileDescriptor

var file_PlayerLoginReq_proto_rawDesc = []byte{
	0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x14, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x0c, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0xfe, 0x0f, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x08,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0xb6, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x9d, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0xf8, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2f, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xcf, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0xe4, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x4d, 0x64, 0x35, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0xc1, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x55, 0x6e, 0x6b, 0x33, 0x33, 0x30, 0x30, 0x5f,
	0x50, 0x4d, 0x47, 0x46, 0x42, 0x4d, 0x4a, 0x4e, 0x4e, 0x43, 0x4c, 0x18, 0x52, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x55, 0x6e, 0x6b, 0x33, 0x33, 0x30, 0x30, 0x50, 0x4d, 0x47, 0x46, 0x42, 0x4d,
	0x4a, 0x4e, 0x4e, 0x43, 0x4c, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x18, 0xeb, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x12, 0x11, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x8d, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0xb2, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0xa8, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x37, 0x0a, 0x17, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0xc5, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x13, 0x55, 0x6e, 0x6b, 0x33, 0x33, 0x30, 0x30, 0x5f, 0x4f, 0x4f, 0x42, 0x48, 0x41,
	0x49, 0x49, 0x49, 0x50, 0x48, 0x48, 0x18, 0x55, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x55, 0x6e,
	0x6b, 0x33, 0x33, 0x30, 0x30, 0x4f, 0x4f, 0x42, 0x48, 0x41, 0x49, 0x49, 0x49, 0x50, 0x48, 0x48,
	0x12, 0x30, 0x0a, 0x13, 0x55, 0x6e, 0x6b, 0x33, 0x33, 0x30, 0x30, 0x5f, 0x4e, 0x44, 0x4c, 0x41,
	0x4e, 0x42, 0x45, 0x49, 0x47, 0x45, 0x47, 0x18, 0xa8, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x55, 0x6e, 0x6b, 0x33, 0x33, 0x30, 0x30, 0x4e, 0x44, 0x4c, 0x41, 0x4e, 0x42, 0x45, 0x49, 0x47,
	0x45, 0x47, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6d, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0xfe, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x3a, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0xb1, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x4f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0xf0, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x18, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xbc, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x83, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x73, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0xfa, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x73, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0xea, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6d, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x55, 0x6e,
	0x6b, 0x33, 0x33, 0x30, 0x30, 0x5f, 0x4f, 0x46, 0x46, 0x48, 0x50, 0x41, 0x46, 0x49, 0x46, 0x47,
	0x44, 0x18, 0x84, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x55, 0x6e, 0x6b, 0x33, 0x33, 0x30,
	0x30, 0x4f, 0x46, 0x46, 0x48, 0x50, 0x41, 0x46, 0x49, 0x46, 0x47, 0x44, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x14, 0x61,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12,
	0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x35, 0x0a, 0x16, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x80, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x14, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11,
	0x0a, 0x03, 0x63, 0x70, 0x73, 0x18, 0xbf, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70,
	0x73, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_PlayerLoginReq_proto_rawDescOnce sync.Once
	file_PlayerLoginReq_proto_rawDescData = file_PlayerLoginReq_proto_rawDesc
)

func file_PlayerLoginReq_proto_rawDescGZIP() []byte {
	file_PlayerLoginReq_proto_rawDescOnce.Do(func() {
		file_PlayerLoginReq_proto_rawDescData = protoimpl.X.CompressGZIP(file_PlayerLoginReq_proto_rawDescData)
	})
	return file_PlayerLoginReq_proto_rawDescData
}

var file_PlayerLoginReq_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_PlayerLoginReq_proto_goTypes = []interface{}{
	(*PlayerLoginReq)(nil),     // 0: PlayerLoginReq
	(*TrackingIOInfo)(nil),     // 1: TrackingIOInfo
	(*AdjustTrackingInfo)(nil), // 2: AdjustTrackingInfo
}
var file_PlayerLoginReq_proto_depIdxs = []int32{
	1, // 0: PlayerLoginReq.tracking_io_info:type_name -> TrackingIOInfo
	2, // 1: PlayerLoginReq.adjust_tracking_info:type_name -> AdjustTrackingInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_PlayerLoginReq_proto_init() }
func file_PlayerLoginReq_proto_init() {
	if File_PlayerLoginReq_proto != nil {
		return
	}
	file_AdjustTrackingInfo_proto_init()
	file_TrackingIOInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_PlayerLoginReq_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PlayerLoginReq_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PlayerLoginReq_proto_goTypes,
		DependencyIndexes: file_PlayerLoginReq_proto_depIdxs,
		MessageInfos:      file_PlayerLoginReq_proto_msgTypes,
	}.Build()
	File_PlayerLoginReq_proto = out.File
	file_PlayerLoginReq_proto_rawDesc = nil
	file_PlayerLoginReq_proto_goTypes = nil
	file_PlayerLoginReq_proto_depIdxs = nil
}
