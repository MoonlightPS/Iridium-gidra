# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: combined34rel_1.proto
# plugin: python-betterproto
import builtins
from dataclasses import dataclass
from typing import Dict, List

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


class AbilityInvokeArgument(betterproto.Enum):
    ABILITY_INVOKE_ARGUMENT_NONE = 0
    ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE = 1
    ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2
    ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT = 3
    ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM = 4
    ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM = 5
    ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP = 6
    ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE = 7
    ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE = 8
    ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH = 9
    ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10
    ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_STATE = 11
    ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER = 12
    ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY = 13
    ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY = 14
    ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY = 15
    ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE = 16
    ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL = 17
    ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER = 18
    ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE = 19
    ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION = 20
    ABILITY_INVOKE_ARGUMENT_META_LOSE_HP = 21
    ABILITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO = 22
    ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY = 50
    ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE = 51
    ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT = 52
    ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON = 53
    ABILITY_INVOKE_ARGUMENT_ACTION_BLINK = 54
    ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET = 55
    ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER = 56
    ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL = 57
    ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE = 58
    ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG = 59
    ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE = 60
    ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE = 61
    ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE = 62
    ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA = 63
    ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT = 64
    ABILITY_INVOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET = 65
    Unk3400_GHKNBDBFGLN = 66
    ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA = 100
    ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND = 101
    ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE = 102
    ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA = 103
    ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD = 104
    ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD = 105
    ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD = 106
    ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR = 107
    ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER = 108
    ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION = 109
    ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE = 110
    ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC = 111
    ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT = 112
    ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO = (
        113
    )
    ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWORKS_LAUNCHER = 114
    ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREATE_COUNT = 115
    ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL = 116
    ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT = 117
    ABILITY_INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN = 118
    ABILITY_INVOKE_ARGUMENT_MIXIN_UI_INTERACT = 119
    ABILITY_INVOKE_ARGUMENT_MIXIN_SHOOT_FROM_CAMERA = 120
    ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_BRICK_ACTIVITY = 121
    ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT = 122
    Unk3400_BFBGAADHEJC = 123
    Unk3400_HGOJHAPAJLD = 124


class AbilityScalarType(betterproto.Enum):
    ABILITY_SCALAR_TYPE_UNKNOWN = 0
    ABILITY_SCALAR_TYPE_FLOAT = 1
    ABILITY_SCALAR_TYPE_INT = 2
    ABILITY_SCALAR_TYPE_BOOL = 3
    ABILITY_SCALAR_TYPE_TRIGGER = 4
    ABILITY_SCALAR_TYPE_STRING = 5
    ABILITY_SCALAR_TYPE_UINT = 6


class ActivityPushTipsState(betterproto.Enum):
    ACTIVITY_PUSH_TIPS_STATE_NONE = 0
    ACTIVITY_PUSH_TIPS_STATE_START = 1
    ACTIVITY_PUSH_TIPS_STATE_READ = 2


class Aggicdiehnl(betterproto.Enum):
    APOHFKNGIIJ = 0
    FCCAGMOBPJI = 1


class AranaraCollectionState(betterproto.Enum):
    ARANARA_COLLECTION_STATE_NONE = 0
    ARANARA_COLLECTION_STATE_COLLECTABLE = 1
    ARANARA_COLLECTION_STATE_COLLECTED = 2
    ARANARA_COLLECTION_STATE_FINISHED = 3


class AreaPlayType(betterproto.Enum):
    AREA_PLAY_TYPE_NONE = 0
    AREA_PLAY_TYPE_CLIMATE = 1
    AREA_PLAY_TYPE_REGIONAL_PLAY = 2


class AStarMethod(betterproto.Enum):
    A_STAR_METHOD_CLASSIC = 0
    A_STAR_METHOD_TENDENCY = 1
    A_STAR_METHOD_ADAPTIVE = 2
    A_STAR_METHOD_INFLECTION = 3


class AsterLittleStageState(betterproto.Enum):
    ASTER_LITTLE_STAGE_STATE_NONE = 0
    ASTER_LITTLE_STAGE_STATE_UNSTARTED = 1
    ASTER_LITTLE_STAGE_STATE_STARTED = 2
    ASTER_LITTLE_STAGE_STATE_FINISHED = 3


class AuditState(betterproto.Enum):
    AUDIT_STATE_NONE = 0
    AUDIT_STATE_WAITING = 1
    AUDIT_STATE_FAILED = 2


class AvatarExpeditionState(betterproto.Enum):
    AVATAR_EXPEDITION_STATE_NONE = 0
    AVATAR_EXPEDITION_STATE_DOING = 1
    AVATAR_EXPEDITION_STATE_FINISH_WAIT_REWARD = 2
    AVATAR_EXPEDITION_STATE_CALLBACK_WAIT_REWARD = 3
    AVATAR_EXPEDITION_STATE_LOCKED = 4


class AvatarType(betterproto.Enum):
    AVATAR_TYPE_NONE = 0
    AVATAR_TYPE_FORMAL = 1
    AVATAR_TYPE_TRIAL = 2
    AVATAR_TYPE_MIRROR = 3


class BargainResultType(betterproto.Enum):
    BARGAIN_RESULT_TYPE_COMPLETE_SUCC = 0
    BARGAIN_RESULT_TYPE_SINGLE_FAIL = 1
    BARGAIN_RESULT_TYPE_COMPLETE_FAIL = 2


class BattlePassUnlockStatus(betterproto.Enum):
    BATTLE_PASS_UNLOCK_STATUS_INVALID = 0
    BATTLE_PASS_UNLOCK_STATUS_FREE = 1
    BATTLE_PASS_UNLOCK_STATUS_PAID = 2


class BreakoutActionType(betterproto.Enum):
    BREAKOUT_ACTION_TYPE_NONE = 0
    BREAKOUT_ACTION_TYPE_LAUNCH_BALL = 1
    BREAKOUT_ACTION_TYPE_DESTROY_BALL = 2
    BREAKOUT_ACTION_TYPE_FALLING_OBJECT = 3
    BREAKOUT_ACTION_TYPE_MISSILE = 4


class BrickBreakerStageType(betterproto.Enum):
    BRICK_BREAKER_STAGE_TYPE_PREPARE = 0
    BRICK_BREAKER_STAGE_TYPE_PICK = 1
    BRICK_BREAKER_STAGE_TYPE_GAME = 2
    BRICK_BREAKER_STAGE_TYPE_PLAY = 3
    BRICK_BREAKER_STAGE_TYPE_SETTLE = 4


class ChallengeFinishType(betterproto.Enum):
    CHALLENGE_FINISH_TYPE_NONE = 0
    CHALLENGE_FINISH_TYPE_FAIL = 1
    CHALLENGE_FINISH_TYPE_SUCC = 2
    CHALLENGE_FINISH_TYPE_PAUSE = 3


class ChangeEnergyReason(betterproto.Enum):
    CHANGE_ENERGY_REASON_NONE = 0
    CHANGE_ENERGY_REASON_SKILL_START = 1


class ChangeHpReason(betterproto.Enum):
    CHANGE_HP_REASON_NONE = 0
    CHANGE_HP_REASON_SUB_AVATAR = 1
    CHANGE_HP_REASON_SUB_MONSTER = 2
    CHANGE_HP_REASON_SUB_GEAR = 3
    CHANGE_HP_REASON_SUB_ENVIR = 4
    CHANGE_HP_REASON_SUB_FALL = 5
    CHANGE_HP_REASON_SUB_DRAWN = 6
    CHANGE_HP_REASON_SUB_ABYSS = 7
    CHANGE_HP_REASON_SUB_ABILITY = 8
    CHANGE_HP_REASON_SUB_SUMMON = 9
    CHANGE_HP_REASON_SUB_SCRIPT = 10
    CHANGE_HP_REASON_SUB_GM = 11
    CHANGE_HP_REASON_SUB_KILL_SELF = 12
    CHANGE_HP_REASON_SUB_CLIMATE_COLD = 13
    CHANGE_HP_REASON_SUB_STORM_LIGHTNING = 14
    CHANGE_HP_REASON_SUB_KILL_SERVER_GADGET = 15
    CHANGE_HP_REASON_SUB_REPLACE = 16
    CHANGE_HP_REASON_SUB_PLAYER_LEAVE = 17
    CHANGE_HP_REASON_ATTACK_BY_ENERGY = 18
    CHANGE_HP_REASON_ATTACK_BY_RECYCLE = 19
    CHANGE_HP_REASON_BY_LUA = 51
    CHANGE_HP_REASON_ADD_ABILITY = 101
    CHANGE_HP_REASON_ADD_ITEM = 102
    CHANGE_HP_REASON_ADD_REVIVE = 103
    CHANGE_HP_REASON_ADD_UPGRADE = 104
    CHANGE_HP_REASON_ADD_STATUE = 105
    CHANGE_HP_REASON_ADD_BACKGROUND = 106
    CHANGE_HP_REASON_ADD_GM = 107
    CHANGE_HP_REASON_ADD_TRIAL_AVATAR_ACTIVITY = 108
    CHANGE_HP_REASON_ADD_ROGUELIKE_SPRING = 109


class ChapterState(betterproto.Enum):
    CHAPTER_STATE_NONE = 0
    CHAPTER_STATE_UNABLE_TO_BEGIN = 1
    CHAPTER_STATE_BEGIN = 2
    CHAPTER_STATE_END = 3


class ClientInputType(betterproto.Enum):
    CLIENT_INPUT_TYPE_NONE = 0
    CLIENT_INPUT_TYPE_KEYBOARD_MOUSE = 1
    CLIENT_INPUT_TYPE_GAMEPAD = 2
    CLIENT_INPUT_TYPE_TOUCH_PANEL = 3


class ClientReconnectReason(betterproto.Enum):
    CLIENT_RECONNECT_REASON_NONE = 0
    CLIENT_RECONNECT_REASON_QUIT_MP = 1


class Clmdhlaenej(betterproto.Enum):
    HIHDNJGDBML = 0
    DPMMMOJKBIL = 1
    LJODKMGEFHL = 2


class CmdId(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CodexType(betterproto.Enum):
    CODEX_TYPE_NONE = 0
    CODEX_TYPE_QUEST = 1
    CODEX_TYPE_WEAPON = 2
    CODEX_TYPE_ANIMAL = 3
    CODEX_TYPE_MATERIAL = 4
    CODEX_TYPE_BOOKS = 5
    CODEX_TYPE_PUSHTIPS = 6
    CODEX_TYPE_VIEW = 7
    CODEX_TYPE_RELIQUARY = 8


class CombatTypeArgument(betterproto.Enum):
    COMBAT_TYPE_ARGUMENT_NONE = 0
    COMBAT_TYPE_ARGUMENT_EVT_BEING_HIT = 1
    COMBAT_TYPE_ARGUMENT_ANIMATOR_STATE_CHANGED = 2
    COMBAT_TYPE_ARGUMENT_FACE_TO_DIR = 3
    COMBAT_TYPE_ARGUMENT_SET_ATTACK_TARGET = 4
    COMBAT_TYPE_ARGUMENT_RUSH_MOVE = 5
    COMBAT_TYPE_ARGUMENT_ANIMATOR_PARAMETER_CHANGED = 6
    COMBAT_TYPE_ARGUMENT_ENTITY_MOVE = 7
    COMBAT_TYPE_ARGUMENT_SYNC_ENTITY_POSITION = 8
    COMBAT_TYPE_ARGUMENT_STEER_MOTION_INFO = 9
    COMBAT_TYPE_ARGUMENT_FORCE_SET_POS_INFO = 10
    COMBAT_TYPE_ARGUMENT_COMPENSATE_POS_DIFF = 11
    COMBAT_TYPE_ARGUMENT_MONSTER_DO_BLINK = 12
    COMBAT_TYPE_ARGUMENT_FIXED_RUSH_MOVE = 13
    COMBAT_TYPE_ARGUMENT_SYNC_TRANSFORM = 14
    COMBAT_TYPE_ARGUMENT_LIGHT_CORE_MOVE = 15
    COMBAT_TYPE_ARGUMENT_BEING_HEALED_NTF = 16
    COMBAT_TYPE_ARGUMENT_SKILL_ANCHOR_POSITION_NTF = 17
    COMBAT_TYPE_ARGUMENT_GRAPPLING_HOOK_MOVE = 18


class CompoundBoostTakeStatusType(betterproto.Enum):
    COMPOUND_BOOST_TAKE_STATUS_TYPE_NONE = 0
    COMPOUND_BOOST_TAKE_STATUS_TYPE_BOOST_ONLY = 1
    COMPOUND_BOOST_TAKE_STATUS_TYPE_BOOST_AND_TAKE = 2
    COMPOUND_BOOST_TAKE_STATUS_TYPE_BAG_FULL = 3


class CreateReason(betterproto.Enum):
    CREATE_REASON_NONE = 0
    CREATE_REASON_QUEST = 1
    CREATE_REASON_ENERGY = 2


class CustomDungeonBanType(betterproto.Enum):
    CUSTOM_DUNGEON_BAN_TYPE_NONE = 0
    CUSTOM_DUNGEON_BAN_TYPE_LAYOUT = 1


class CustomDungeonFinishType(betterproto.Enum):
    CUSTOM_DUNGEON_FINISH_TYPE_PLAY_NORMAL = 0
    CUSTOM_DUNGEON_FINISH_TYPE_PLAY_TRY = 1
    CUSTOM_DUNGEON_FINISH_TYPE_EDIT_TRY = 2
    CUSTOM_DUNGEON_FINISH_TYPE_SELF_PLAY_NORMAL = 3


class CustomDungeonState(betterproto.Enum):
    CUSTOM_DUNGEON_STATE_EDIT = 0
    CUSTOM_DUNGEON_STATE_SELF_PASS = 1
    CUSTOM_DUNGEON_STATE_PUBLISHED = 2


class DataResVersionOpType(betterproto.Enum):
    DATA_RES_VERSION_OP_TYPE_NONE = 0
    DATA_RES_VERSION_OP_TYPE_RELOGIN = 1
    DATA_RES_VERSION_OP_TYPE_MP_RELOGIN = 2


class DealAddFriendResultType(betterproto.Enum):
    DEAL_ADD_FRIEND_RESULT_TYPE_REJECT = 0
    DEAL_ADD_FRIEND_RESULT_TYPE_ACCEPT = 1


class Djldjfdpbei(betterproto.Enum):
    DJLDJFDPBEI_NONE = 0
    CDFMIMCCFKH = 1
    FIIEHMIEFKF = 2
    EFEBEKMCOAN = 3
    GNPNHKCKDHL = 4
    DIHJPJCKIAP = 5
    JJOIEEDMABA = 6


class DraftInviteFailReason(betterproto.Enum):
    DRAFT_INVITE_FAIL_REASON_UNKNOWN = 0
    DRAFT_INVITE_FAIL_REASON_ACTIVITY_NOT_OPEN = 1
    DRAFT_INVITE_FAIL_REASON_ACTIVITY_PLAY_NOT_OPEN = 2
    DRAFT_INVITE_FAIL_REASON_SCENE_NOT_MEET = 3
    DRAFT_INVITE_FAIL_REASON_WORLD_NOT_MEET = 4
    DRAFT_INVITE_FAIL_REASON_PLAY_LIMIT_NOT_MEET = 5


class DungeonCandidateTeamPlayerDismissReason(betterproto.Enum):
    DUNGEON_CANDIDATE_TEAM_PLAYER_DISMISS_REASON_TPDR_NORMAL = 0
    DUNGEON_CANDIDATE_TEAM_PLAYER_DISMISS_REASON_TPDR_DIE = 1
    DUNGEON_CANDIDATE_TEAM_PLAYER_DISMISS_REASON_TPDR_DISCONNECT = 2


class DungeonCandidateTeamPlayerLeaveReason(betterproto.Enum):
    DUNGEON_CANDIDATE_TEAM_PLAYER_LEAVE_REASON_TPLR_NORMAL = 0
    DUNGEON_CANDIDATE_TEAM_PLAYER_LEAVE_REASON_TPLR_DIE = 1
    DUNGEON_CANDIDATE_TEAM_PLAYER_LEAVE_REASON_TPLR_BE_KICK = 2
    DUNGEON_CANDIDATE_TEAM_PLAYER_LEAVE_REASON_TPLR_DISCONNECT = 3


class DungeonCandidateTeamPlayerState(betterproto.Enum):
    DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_IDLE = 0
    DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_CHANGING_AV_ATAR = 1
    DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_READY = 2


class DungeonEntryBlockReason(betterproto.Enum):
    DUNGEON_ENTRY_BLOCK_REASON_NONE = 0
    DUNGEON_ENTRY_BLOCK_REASON_LEVEL = 1
    DUNGEON_ENTRY_BLOCK_REASON_QUEST = 2
    DUNGEON_ENTRY_BLOCK_REASON_MULTIPLE = 3


class EdgeType(betterproto.Enum):
    EDGE_TYPE_INNER = 0
    EDGE_TYPE_TILE_BOUND = 1
    EDGE_TYPE_TILE_BOUND_UNCONNECT = 2
    EDGE_TYPE_TILE_BOUND_OVERIDE = 3


class EnterCustomDungeonType(betterproto.Enum):
    ENTER_CUSTOM_DUNGEON_TYPE_NONE = 0
    ENTER_CUSTOM_DUNGEON_TYPE_EDIT = 1
    ENTER_CUSTOM_DUNGEON_TYPE_PLAY = 2
    ENTER_CUSTOM_DUNGEON_TYPE_OFFICIAL = 3


class EnterType(betterproto.Enum):
    ENTER_TYPE_NONE = 0
    ENTER_TYPE_SELF = 1
    ENTER_TYPE_GOTO = 2
    ENTER_TYPE_JUMP = 3
    ENTER_TYPE_OTHER = 4
    ENTER_TYPE_BACK = 5
    ENTER_TYPE_DUNGEON = 6
    ENTER_TYPE_DUNGEON_REPLAY = 7
    ENTER_TYPE_GOTO_BY_PORTAL = 8
    ENTER_TYPE_SELF_HOME = 9
    ENTER_TYPE_OTHER_HOME = 10
    ENTER_TYPE_GOTO_RECREATE = 11


class EventTriggerType(betterproto.Enum):
    EVENT_TRIGGER_TYPE_NONE = 0
    EVENT_TRIGGER_TYPE_ENTER_FORCE = 1


class ExpeditionState(betterproto.Enum):
    EXPEDITION_STATE_NONE = 0
    EXPEDITION_STATE_STARTED = 1
    EXPEDITION_STATE_FINISHED = 2
    EXPEDITION_STATE_REWARDED = 3
    EXPEDITION_STATE_LOCKED = 4


class FilterType(betterproto.Enum):
    FILTER_TYPE_ALL = 0
    FILTER_TYPE_AIR = 1
    FILTER_TYPE_WATER = 2


class FinishReason(betterproto.Enum):
    FINISH_REASON_DEFAULT = 0
    FINISH_REASON_CLEAR = 1
    FINISH_REASON_DISTANCE = 2
    FINISH_REASON_FINISH = 3


class FireworksLaunchParamType(betterproto.Enum):
    FIREWORKS_LAUNCH_PARAM_TYPE_NONE = 0
    FIREWORKS_LAUNCH_PARAM_TYPE_REPEAT = 1
    FIREWORKS_LAUNCH_PARAM_TYPE_INTERVAL = 2
    FIREWORKS_LAUNCH_PARAM_TYPE_DELAY = 3
    FIREWORKS_LAUNCH_PARAM_TYPE_ROUND_INTERVAL = 4
    FIREWORKS_LAUNCH_PARAM_TYPE_MAX = 5


class FireworksReformParamType(betterproto.Enum):
    FIREWORKS_REFORM_PARAM_TYPE_NONE = 0
    FIREWORKS_REFORM_PARAM_TYPE_COLOR = 1
    FIREWORKS_REFORM_PARAM_TYPE_HEIGHT = 2
    FIREWORKS_REFORM_PARAM_TYPE_SIZE = 3
    FIREWORKS_REFORM_PARAM_TYPE_DENSITY = 4
    FIREWORKS_REFORM_PARAM_TYPE_Vector = 5


class FishBattleResult(betterproto.Enum):
    FISH_BATTLE_RESULT_NONE = 0
    FISH_BATTLE_RESULT_SUCC = 1
    FISH_BATTLE_RESULT_FAIL = 2
    FISH_BATTLE_RESULT_TIMEOUT = 3
    FISH_BATTLE_RESULT_CANCEL = 4
    FISH_BATTLE_RESULT_EXIT = 5


class FishEscapeReason(betterproto.Enum):
    FISH_ESCAPE_REASON_NONE = 0
    FISH_ESCAPE_REASON_SHOCKED = 1
    FISH_ESCAPE_REASON_UNHOOK = 2


class FishNoRewardReason(betterproto.Enum):
    FISH_NO_REWARD_REASON_NONE = 0
    FISH_NO_REWARD_REASON_ACTIVITY_LIMIT = 1
    FISH_NO_REWARD_REASON_BAG_LIMIT = 2
    FISH_NO_REWARD_REASON_POOL_LIMIT = 3


class FollowType(betterproto.Enum):
    FOLLOW_TYPE_INIT_FOLLOW_POS = 0
    FOLLOW_TYPE_SET_FOLLOW_POS = 1
    FOLLOW_TYPE_SET_ABS_FOLLOW_POS = 2


class ForgeQueueManipulateType(betterproto.Enum):
    FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT = 0
    FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE = 1


class ForwardType(betterproto.Enum):
    FORWARD_TYPE_LOCAL = 0
    FORWARD_TYPE_TO_ALL = 1
    FORWARD_TYPE_TO_ALL_EXCEPT_CUR = 2
    FORWARD_TYPE_TO_HOST = 3
    FORWARD_TYPE_TO_ALL_GUEST = 4
    FORWARD_TYPE_TO_PEER = 5
    FORWARD_TYPE_TO_PEERS = 6
    FORWARD_TYPE_ONLY_SERVER = 7
    FORWARD_TYPE_TO_ALL_EXIST_EXCEPT_CUR = 8


class FoundationOpType(betterproto.Enum):
    FOUNDATION_OP_TYPE_NONE = 0
    FOUNDATION_OP_TYPE_BUILD = 1
    FOUNDATION_OP_TYPE_DEMOLITION = 2
    FOUNDATION_OP_TYPE_REBUILD = 3
    FOUNDATION_OP_TYPE_ROTATE = 4
    FOUNDATION_OP_TYPE_LOCK = 5
    FOUNDATION_OP_TYPE_UNLOCK = 6


class FoundationStatus(betterproto.Enum):
    FOUNDATION_STATUS_NONE = 0
    FOUNDATION_STATUS_INIT = 1
    FOUNDATION_STATUS_BUILDING = 2
    FOUNDATION_STATUS_BUILT = 3


class FriendEnterHomeOption(betterproto.Enum):
    FRIEND_ENTER_HOME_OPTION_NEED_CONFIRM = 0
    FRIEND_ENTER_HOME_OPTION_REFUSE = 1
    FRIEND_ENTER_HOME_OPTION_DIRECT = 2


class FriendOnlineState(betterproto.Enum):
    FRIEND_ONLINE_STATE_DISCONNECT = 0
    FRIEND_ONLINE_STATE_ONLINE = 1


class GadgetBornType(betterproto.Enum):
    GADGET_BORN_TYPE_NONE = 0
    GADGET_BORN_TYPE_IN_AIR = 1
    GADGET_BORN_TYPE_PLAYER = 2
    GADGET_BORN_TYPE_MONSTER_HIT = 3
    GADGET_BORN_TYPE_MONSTER_DIE = 4
    GADGET_BORN_TYPE_GADGET = 5
    GADGET_BORN_TYPE_GROUND = 6


class GalleryStageType(betterproto.Enum):
    GALLERY_STAGE_TYPE_NONE = 0
    GALLERY_STAGE_TYPE_PRESTART = 1
    GALLERY_STAGE_TYPE_START = 2


class GalleryStartSource(betterproto.Enum):
    GALLERY_START_SOURCE_BY_NONE = 0
    GALLERY_START_SOURCE_BY_MATCH = 1
    GALLERY_START_SOURCE_BY_DRAFT = 2


class GalleryStopReason(betterproto.Enum):
    GALLERY_STOP_REASON_NONE = 0
    GALLERY_STOP_REASON_TIMEUP = 1
    GALLERY_STOP_REASON_CLIENT_INTERRUPT = 2
    GALLERY_STOP_REASON_LUA_INTERRUPT_SUCCESS = 3
    GALLERY_STOP_REASON_LUA_INTERRUPT_FAIL = 4
    GALLERY_STOP_REASON_OWNER_LEAVE_SCENE = 5
    GALLERY_STOP_REASON_PLAY_INIT_FAILED = 6
    GALLERY_STOP_REASON_OTHER_PLAYER_ENTER = 7
    GALLERY_STOP_REASON_AVATAR_DIE = 8
    GALLERY_STOP_REASON_FINISHED = 9
    GALLERY_STOP_REASON_FUNGUS_ALL_DIE = 10
    GALLERY_STOP_REASON_LIFE_COUNT_ZERO = 11
    GALLERY_STOP_REASON_Unk3300_DFPLGCGIIDM = 12


class GcgActionType(betterproto.Enum):
    GCG_ACTION_TYPE_NONE = 0
    GCG_ACTION_TYPE_SPECIAL_PHASE = 1
    GCG_ACTION_TYPE_NEXT_PHASE = 2
    GCG_ACTION_TYPE_DRAW = 3
    GCG_ACTION_TYPE_REDRAW = 4
    GCG_ACTION_TYPE_SELECT_ONSTAGE = 5
    GCG_ACTION_TYPE_ROLL = 6
    GCG_ACTION_TYPE_REROLL = 7
    GCG_ACTION_TYPE_ATTACK = 8
    GCG_ACTION_TYPE_PLAY_CARD = 9
    GCG_ACTION_TYPE_PASS = 10
    GCG_ACTION_TYPE_REBOOT = 11
    GCG_ACTION_TYPE_GAME_OVER = 12
    GCG_ACTION_TYPE_TRIGGER = 13
    GCG_ACTION_TYPE_PHASE_EXIT = 14
    GCG_ACTION_TYPE_CUSTOM = 15
    GCG_ACTION_TYPE_NOTIFY_COST = 16
    GCG_ACTION_TYPE_AFTER_OPERATION = 17
    GCG_ACTION_TYPE_USE_SKILL = 18
    GCG_ACTION_TYPE_NOTIFY_SKILL_PREVIEW = 19
    GCG_ACTION_TYPE_PREVIEW_ATTACK = 20
    GCG_ACTION_TYPE_PREVIEW_AFTER_ATTACK = 21
    GCG_ACTION_TYPE_SEND_MESSAGE = 22
    GCG_ACTION_TYPE_WAITING_CHARACTER = 23
    GCG_ACTION_TYPE_TRIGGER_SKILL = 24
    GCG_ACTION_TYPE_BEFORE_NEXT_OPERATION = 25


class GcgClientPerformType(betterproto.Enum):
    GCG_CLIENT_PERFORM_TYPE_INVALID = 0
    GCG_CLIENT_PERFORM_TYPE_CARD_EXCHANGE = 1
    GCG_CLIENT_PERFORM_TYPE_FIRST_HAND = 2
    GCG_CLIENT_PERFORM_TYPE_REROLL = 3


class GcgDiceSideType(betterproto.Enum):
    GCG_DICE_SIDE_TYPE_INVALID = 0
    GCG_DICE_SIDE_TYPE_CRYO = 1
    GCG_DICE_SIDE_TYPE_HYDRO = 2
    GCG_DICE_SIDE_TYPE_PYRO = 3
    GCG_DICE_SIDE_TYPE_ELECTRO = 4
    GCG_DICE_SIDE_TYPE_GEO = 5
    GCG_DICE_SIDE_TYPE_DENDRO = 6
    GCG_DICE_SIDE_TYPE_ANEMO = 7
    GCG_DICE_SIDE_TYPE_PAIMON = 8


class GcgEndReason(betterproto.Enum):
    GCG_END_REASON_DEFAULT = 0
    GCG_END_REASON_DIE = 1
    GCG_END_REASON_SURRENDER = 2
    GCG_END_REASON_DISCONNECTED = 3
    GCG_END_REASON_ROUND_LIMIT = 4
    GCG_END_REASON_GM = 5
    GCG_END_REASON_NO_PLAYER = 6
    GCG_END_REASON_GIVE_UP = 7
    GCG_END_REASON_INIT_TIMEOUT = 8
    GCG_END_REASON_EFFECT = 9
    GCG_END_REASON_Unk3300_INAPHKAKKHF = 10


class GcgGameBusinessType(betterproto.Enum):
    GCG_GAME_BUSINESS_TYPE_NONE = 0
    GCG_GAME_BUSINESS_TYPE_GM = 1
    GCG_GAME_BUSINESS_TYPE_MATCH = 2
    GCG_GAME_BUSINESS_TYPE_PVP = 3
    GCG_GAME_BUSINESS_TYPE_TAVERN_CHALLENGE = 4
    GCG_GAME_BUSINESS_TYPE_CONST_CHALLENGE = 5
    GCG_GAME_BUSINESS_TYPE_WORLD_CHALLENGE = 6
    GCG_GAME_BUSINESS_TYPE_BOSS_CHALLENGE = 7
    GCG_GAME_BUSINESS_TYPE_WEEK_CHALLENGE = 8
    GCG_GAME_BUSINESS_TYPE_BREAK_CHALLENGE = 9
    GCG_GAME_BUSINESS_TYPE_QUEST = 10
    GCG_GAME_BUSINESS_TYPE_GUIDE_GROUP = 11
    KOGBPIPKHNF = 12


class GcgGameCreateReason(betterproto.Enum):
    GCG_GAME_CREATE_REASON_NONE = 0
    GCG_GAME_CREATE_REASON_GAME_MAX = 1
    GCG_GAME_CREATE_REASON_CLIENT_VERSION_NOT_LATEST = 2
    GCG_GAME_CREATE_REASON_RESOURCE_NOT_COMPLETE = 3
    GCG_GAME_CREATE_REASON_TIMEOUT = 4
    GCG_GAME_CREATE_REASON_Unk3300_EMCDFGGFFAH = 5


class GcgIntentionChangeType(betterproto.Enum):
    GCG_INTENTION_CHANGE_TYPE_NONE = 0
    GCG_INTENTION_CHANGE_TYPE_RM = 1


class GcgPhaseType(betterproto.Enum):
    GCG_PHASE_TYPE_INVALID = 0
    GCG_PHASE_TYPE_START = 1
    GCG_PHASE_TYPE_DRAW = 2
    GCG_PHASE_TYPE_ON_STAGE = 3
    GCG_PHASE_TYPE_DICE = 4
    GCG_PHASE_TYPE_MAIN = 5
    GCG_PHASE_TYPE_END = 6
    GCG_PHASE_TYPE_DIE = 7
    GCG_PHASE_TYPE_FIN = 8
    GCG_PHASE_TYPE_PRE_MAIN = 9
    GCG_PHASE_TYPE_REROLL = 10


class GcgReason(betterproto.Enum):
    GCG_REASON_DEFAULT = 0
    GCG_REASON_EFFECT = 1
    GCG_REASON_COST = 2
    GCG_REASON_GM = 3
    GCG_REASON_ATTACK = 4
    GCG_REASON_REBOOT = 5
    GCG_REASON_PLAY_CARD = 6
    GCG_REASON_QUICKLY_ONSTAGE = 7
    GCG_REASON_REMOVE_AFTER_DIE = 8
    GCG_REASON_INIT = 9
    GCG_REASON_EFFECT_DAMAGE = 10
    GCG_REASON_EFFECT_HEAL = 11
    GCG_REASON_EFFECT_REVIVE = 12


class GcgSkillHpChangeType(betterproto.Enum):
    GCG_SKILL_HP_CHANGE_TYPE_NONE = 0
    GCG_SKILL_HP_CHANGE_TYPE_DAMAGE = 1
    GCG_SKILL_HP_CHANGE_TYPE_HEAL = 2


class GcgTavernNpcInfo(betterproto.Enum):
    GCG_SETTLE_OPTION_OPT_NONE = 0
    GCG_SETTLE_OPTION_OPT_EXIT = 1
    GCG_SETTLE_OPTION_OPT_CONTINUE = 2
    GCG_SETTLE_OPTION_OPT_RESTART = 3


class GcgZoneType(betterproto.Enum):
    GCG_ZONE_TYPE_INVALID = 0
    GCG_ZONE_TYPE_DECK = 1
    GCG_ZONE_TYPE_HAND = 2
    GCG_ZONE_TYPE_CHARACTER = 3
    GCG_ZONE_TYPE_MODIFY = 4
    GCG_ZONE_TYPE_SUMMON = 5
    GCG_ZONE_TYPE_ASSIST = 7
    GCG_ZONE_TYPE_ONSTAGE = 8
    GCG_ZONE_TYPE_RULE = 9


class GetUgcType(betterproto.Enum):
    GET_UGC_TYPE_NONE = 0
    GET_UGC_TYPE_MINE = 1
    GET_UGC_TYPE_PUBLISH = 2


class Gglaofmeggk(betterproto.Enum):
    GGLAOFMEGGK_NONE = 0
    speed = 1
    NLKFKAOKKGB = 2
    AOMJCNMNCDB = 3


class Gjphkjffmom(betterproto.Enum):
    PHBJNMNOPOI = 0
    EFGPKKDHDHP = 1


class HideAndSeekStageType(betterproto.Enum):
    HIDE_AND_SEEK_STAGE_TYPE_PREPARE = 0
    HIDE_AND_SEEK_STAGE_TYPE_PICK = 1
    HIDE_AND_SEEK_STAGE_TYPE_GAME = 2
    HIDE_AND_SEEK_STAGE_TYPE_HIDE = 3
    HIDE_AND_SEEK_STAGE_TYPE_SEEK = 4
    HIDE_AND_SEEK_STAGE_TYPE_SETTLE = 5


class HitColliderType(betterproto.Enum):
    HIT_COLLIDER_TYPE_INVALID = 0
    HIT_COLLIDER_TYPE_HIT_BOX = 1
    HIT_COLLIDER_TYPE_WET_HIT_BOX = 2
    HIT_COLLIDER_TYPE_HEAD_BOX = 3


class HomePlantFieldStatus(betterproto.Enum):
    HOME_PLANT_FIELD_STATUS_STATUE_NONE = 0
    HOME_PLANT_FIELD_STATUS_STATUE_SEED = 1
    HOME_PLANT_FIELD_STATUS_STATUE_SPROUT = 2
    HOME_PLANT_FIELD_STATUS_STATUE_GATHER = 3


class HuntingOfferState(betterproto.Enum):
    HUNTING_OFFER_STATE_NONE = 0
    HUNTING_OFFER_STATE_STARTED = 1
    HUNTING_OFFER_STATE_UNSTARTED = 2
    HUNTING_OFFER_STATE_SUCC = 3


class Igelbdlljbj(betterproto.Enum):
    IGELBDLLJBJ_NONE = 0
    AHEECBJFNHH = 1
    HGICJDHDLFB = 2
    ENGFFCGEOPF = 3
    BBCFLJLFDAP = 4
    IGELBDLLJBJ_FIFTH = 5
    FNPCNAAAGBH = 6
    FACMNGDGCOG = 7


class InBattleMechanicusCardChallengeState(betterproto.Enum):
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_STATE_NONE = 0
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_STATE_ON_GOING = 1
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_STATE_FAIL = 2
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_STATE_SUCCESS = 3


class InteractType(betterproto.Enum):
    INTERACT_TYPE_NONE = 0
    INTERACT_TYPE_PICK_ITEM = 1
    INTERACT_TYPE_GATHER = 2
    INTERACT_TYPE_OPEN_CHEST = 3
    INTERACT_TYPE_OPEN_STATUE = 4
    INTERACT_TYPE_CONSUME = 5
    INTERACT_TYPE_MP_PLAY_REWARD = 6
    INTERACT_TYPE_VIEW = 7
    INTERACT_TYPE_GENERAL_REWARD = 8
    INTERACT_TYPE_MIRACLE_RING = 9
    INTERACT_TYPE_FOUNDATION = 10
    INTERACT_TYPE_ECHO_SHELL = 11
    INTERACT_TYPE_HOME_GATHER = 12
    INTERACT_TYPE_ENV_ANIMAL = 13
    INTERACT_TYPE_QUEST_GADGET = 14
    INTERACT_TYPE_UI_INTERACT = 15
    INTERACT_TYPE_DESHRET_OBELISK = 16


class InterOpType(betterproto.Enum):
    INTER_OP_TYPE_FINISH = 0
    INTER_OP_TYPE_START = 1


class IslandPartySailStage(betterproto.Enum):
    ISLAND_PARTY_SAIL_STAGE_NONE = 0
    ISLAND_PARTY_SAIL_STAGE_SAIL = 1
    ISLAND_PARTY_SAIL_STAGE_BATTLE = 2


class ItemExceedLimitMsgType(betterproto.Enum):
    ITEM_EXCEED_LIMIT_MSG_TYPE_DEFAULT = 0
    ITEM_EXCEED_LIMIT_MSG_TYPE_TEXT = 1
    ITEM_EXCEED_LIMIT_MSG_TYPE_DIALOG = 2
    ITEM_EXCEED_LIMIT_MSG_TYPE_DIALOG_NONBLOCK = 3


class ItemGivingType(betterproto.Enum):
    ITEM_GIVING_TYPE_NONE = 0
    ITEM_GIVING_TYPE_GADGET = 1


class Jdoflklciki(betterproto.Enum):
    KPDAFBNHFDO = 0
    OAEHBFDMCJE = 1
    BNNFAGCDOLI = 2
    EHFNDNMJGNL = 3
    FOPMOLPIEFJ = 4
    NFGCPNOJCIM = 5
    AODINJMGNDO = 6
    JDANCCGDAGK = 7
    NPENOCKHFFO = 8
    BIHHFBLNNLH = 9
    MKLANBOJFNI = 10
    CGPIMEDKDHL = 11
    OKJLEACKFDM = 12
    KCOHHOLFEGI = 13
    NEPIJBCNPNB = 14
    CPBGPCMGFOA = 15
    INIMEBDLMIE = 16
    CHKKLNAMPFO = 17
    OLDFLOIHADA = 18


class KeepRotType(betterproto.Enum):
    KEEP_ROT_TYPE_X = 0
    KEEP_ROT_TYPE_XY = 1


class LockReason(betterproto.Enum):
    LOCK_REASON_LEVEL = 0
    LOCK_REASON_QUEST = 1


class LockState(betterproto.Enum):
    LOCK_STATE_NONE = 0
    LOCK_STATE_QUEST = 1


class LuaOptionType(betterproto.Enum):
    LUA_OPTION_TYPE_NONE = 0
    LUA_OPTION_TYPE_PLAYER_INPUT = 1


class LuaShellType(betterproto.Enum):
    LUA_SHELL_TYPE_LUASHELL_NONE = 0
    LUA_SHELL_TYPE_LUASHELL_NORMAL = 1
    LUA_SHELL_TYPE_LUASHELL_SECURITY = 2
    LUA_SHELL_TYPE_LUASHELL_SHELL_CODE = 3


class LunaRiteHintPointType(betterproto.Enum):
    LUNA_RITE_HINT_POINT_TYPE_NONE = 0
    LUNA_RITE_HINT_POINT_TYPE_RUNE = 1
    LUNA_RITE_HINT_POINT_TYPE_CHEST = 2


class LunaRiteHintStatusType(betterproto.Enum):
    LUNA_RITE_HINT_STATUS_TYPE_DEFAULT = 0
    LUNA_RITE_HINT_STATUS_TYPE_NO_COUNT = 1
    LUNA_RITE_HINT_STATUS_TYPE_FINISH = 2


class MailCollectState(betterproto.Enum):
    MAIL_COLLECT_STATE_COLLECTIBLE_UNKNOWN = 0
    MAIL_COLLECT_STATE_NOT_COLLECTIBLE = 1
    MAIL_COLLECT_STATE_COLLECTIBLE_UNCOLLECTED = 2
    MAIL_COLLECT_STATE_COLLECTIBLE_COLLECTED = 3


class MapMarkFromType(betterproto.Enum):
    MAP_MARK_FROM_TYPE_NONE = 0
    MAP_MARK_FROM_TYPE_MONSTER = 1
    MAP_MARK_FROM_TYPE_QUEST = 2


class MapMarkPointType(betterproto.Enum):
    MAP_MARK_POINT_TYPE_NPC = 0
    MAP_MARK_POINT_TYPE_QUEST = 1
    MAP_MARK_POINT_TYPE_SPECIAL = 2
    MAP_MARK_POINT_TYPE_MINE = 3
    MAP_MARK_POINT_TYPE_COLLECTION = 4
    MAP_MARK_POINT_TYPE_MONSTER = 5
    MAP_MARK_POINT_TYPE_FISH_POOL = 6


class MapMarkTipsType(betterproto.Enum):
    MAP_MARK_TIPS_TYPE_DUNGEON_ELEMENT_TRIAL = 0


class MatchReason(betterproto.Enum):
    MATCH_REASON_NONE = 0
    MATCH_REASON_FINISH = 1
    MATCH_REASON_PLAYER_CANCEL = 2
    MATCH_REASON_TIMEOUT = 3
    MATCH_REASON_PLAYER_CONFIRM = 4
    MATCH_REASON_FAILED = 5
    MATCH_REASON_SYSTEM_ERROR = 6
    MATCH_REASON_INTERRUPTED = 7
    MATCH_REASON_MP_UNAVAILABLE = 8
    MATCH_REASON_CONFIRM_TIMEOUT = 9


class MatchType(betterproto.Enum):
    MATCH_TYPE_NONE = 0
    MATCH_TYPE_DUNGEON = 1
    MATCH_TYPE_MP_PLAY = 2
    MATCH_TYPE_MECHANICUS = 3
    MATCH_TYPE_GENERAL = 4
    MATCH_TYPE_GCG = 5


class MaterialDeleteReturnType(betterproto.Enum):
    MATERIAL_DELETE_RETURN_TYPE_BAG = 0
    MATERIAL_DELETE_RETURN_TYPE_SEED = 1


class MissionStatus(betterproto.Enum):
    MISSION_STATUS_INVALID = 0
    MISSION_STATUS_UNFINISHED = 1
    MISSION_STATUS_FINISHED = 2
    MISSION_STATUS_POINT_TAKEN = 3


class MonsterBornType(betterproto.Enum):
    MONSTER_BORN_TYPE_NONE = 0
    MONSTER_BORN_TYPE_DEFAULT = 1
    MONSTER_BORN_TYPE_RANDOM = 2


class MotionState(betterproto.Enum):
    MOTION_STATE_NONE = 0
    MOTION_STATE_RESET = 1
    MOTION_STATE_STANDBY = 2
    MOTION_STATE_STANDBY_MOVE = 3
    MOTION_STATE_WALK = 4
    MOTION_STATE_RUN = 5
    MOTION_STATE_DASH = 6
    MOTION_STATE_CLIMB = 7
    MOTION_STATE_CLIMB_JUMP = 8
    MOTION_STATE_STANDBY_TO_CLIMB = 9
    MOTION_STATE_FIGHT = 10
    MOTION_STATE_JUMP = 11
    MOTION_STATE_DROP = 12
    MOTION_STATE_FLY = 13
    MOTION_STATE_SWIM_MOVE = 14
    MOTION_STATE_SWIM_IDLE = 15
    MOTION_STATE_SWIM_DASH = 16
    MOTION_STATE_SWIM_JUMP = 17
    MOTION_STATE_SLIP = 18
    MOTION_STATE_GO_UPSTAIRS = 19
    MOTION_STATE_FALL_ON_GROUND = 20
    MOTION_STATE_JUMP_UP_WALL_FOR_STANDBY = 21
    MOTION_STATE_JUMP_OFF_WALL = 22
    MOTION_STATE_POWERED_FLY = 23
    MOTION_STATE_LADDER_IDLE = 24
    MOTION_STATE_LADDER_MOVE = 25
    MOTION_STATE_LADDER_SLIP = 26
    MOTION_STATE_STANDBY_TO_LADDER = 27
    MOTION_STATE_LADDER_TO_STANDBY = 28
    MOTION_STATE_DANGER_STANDBY = 29
    MOTION_STATE_DANGER_STANDBY_MOVE = 30
    MOTION_STATE_DANGER_WALK = 31
    MOTION_STATE_DANGER_RUN = 32
    MOTION_STATE_DANGER_DASH = 33
    MOTION_STATE_CROUCH_IDLE = 34
    MOTION_STATE_CROUCH_MOVE = 35
    MOTION_STATE_CROUCH_ROLL = 36
    MOTION_STATE_NOTIFY = 37
    MOTION_STATE_LAND_SPEED = 38
    MOTION_STATE_MOVE_FAIL_ACK = 39
    MOTION_STATE_WATERFALL = 40
    MOTION_STATE_DASH_BEFORE_SHAKE = 41
    MOTION_STATE_SIT_IDLE = 42
    MOTION_STATE_FORCE_SET_POS = 43
    MOTION_STATE_QUEST_FORCE_DRAG = 44
    MOTION_STATE_FOLLOW_ROUTE = 45
    MOTION_STATE_SKIFF_BOARDING = 46
    MOTION_STATE_SKIFF_NORMAL = 47
    MOTION_STATE_SKIFF_DASH = 48
    MOTION_STATE_SKIFF_POWERED_DASH = 49
    MOTION_STATE_DESTROY_VEHICLE = 50
    MOTION_STATE_FLY_IDLE = 51
    MOTION_STATE_FLY_SLOW = 52
    MOTION_STATE_FLY_FAST = 53
    MOTION_STATE_AIM_MOVE = 54
    MOTION_STATE_AIR_COMPENSATION = 55
    MOTION_STATE_NUM = 56


class MovingPlatformType(betterproto.Enum):
    MOVING_PLATFORM_TYPE_NONE = 0
    MOVING_PLATFORM_TYPE_USE_CONFIG = 1
    MOVING_PLATFORM_TYPE_ABILITY = 2
    MOVING_PLATFORM_TYPE_ROUTE = 3


class Mpmjbkdblne(betterproto.Enum):
    KKAAJJMHHMJ = 0
    NOOJLHLJBLA = 1
    PFOCJJJODLJ = 2


class MpSettingType(betterproto.Enum):
    MP_SETTING_TYPE_NO_ENTER = 0
    MP_SETTING_TYPE_ENTER_FREELY = 1
    MP_SETTING_TYPE_ENTER_AFTER_APPLY = 2


class Nhmkamgokdk(betterproto.Enum):
    NHMKAMGOKDK_NONE = 0
    BNEBIHJPEAE = 1
    HIPIFJLLHNM = 3
    OGALALLEPFD = 4
    OGKELOFFMCC = 5
    KIIBLMIHGBO = 6
    ABPCDJJPGKN = 7
    MPHJAGCGJFA = 10
    IHFODEDLHMC = 11
    KPPKKIAKECK = 12
    HKIBLOJEAIE = 13
    NPDHLJJENNO = 14
    JAJHDFANFDJ = 15
    CHJOANAGJPK = 16
    FAAJEMLPFDK = 17
    KNEPHONAMCE = 18


class Nndiacogjbl(betterproto.Enum):
    NNDIACOGJBL_NONE = 0
    BLKJCONMCCO = 1
    CIADBIJEAMK = 2


class Noabgcfidld(betterproto.Enum):
    NOABGCFIDLD_NONE = 0
    DEABBPDEBFE = 1
    DCNEOJNMMEI = 2
    JEGAOENPDIM = 3


class NullValue(betterproto.Enum):
    CEPOMEPFIME = 0


class OperateType(betterproto.Enum):
    OPERATE_TYPE_NONE = 0
    OPERATE_TYPE_EFFECT = 1


class Operation(betterproto.Enum):
    OPERATION_ADD = 0
    OPERATION_MOD = 1
    OPERATION_DEL = 2
    OPERATION_GET = 3


class OptionType(betterproto.Enum):
    OPTION_TYPE_NONE = 0
    OPTION_TYPE_NORMAL = 1
    OPTION_TYPE_FIRST_CAN_GO = 2


class OpType(betterproto.Enum):
    OP_TYPE_NONE = 0
    OP_TYPE_ACTIVATE = 1
    OP_TYPE_DEACTIVATE = 2


class PathStatusType(betterproto.Enum):
    PATH_STATUS_TYPE_FAIL = 0
    PATH_STATUS_TYPE_SUCC = 1
    PATH_STATUS_TYPE_PARTIAL = 2


class Pkgiaobkfdc(betterproto.Enum):
    PPGJHILBMOO = 0
    OCLBHCJHJKM = 1
    MBJCKIMBKLO = 2
    KACANNNNAIP = 3
    JNHCKJLFBOH = 4
    KOFLABAGLBC = 5
    KBMIJHJJPBP = 6
    NOODOCIAMMP = 7
    ALKAMFOJIND = 8
    IMHABLPEFGJ = 9
    BJOCLHFPKGA = 10
    AAJAMLABMKA = 11
    MMNMGEKLBAH = 12
    EPLBJGOKHFG = 13
    EACPLJEMGBP = 14
    JEGMFLFLJHO = 15


class PlatformType(betterproto.Enum):
    PLATFORM_TYPE_EDITOR = 0
    PLATFORM_TYPE_IOS = 1
    PLATFORM_TYPE_ANDROID = 2
    PLATFORM_TYPE_PC = 3
    PLATFORM_TYPE_PS4 = 4
    PLATFORM_TYPE_SERVER = 5
    PLATFORM_TYPE_CLOUD_ANDROID = 6
    PLATFORM_TYPE_CLOUD_IOS = 7
    PLATFORM_TYPE_PS5 = 8
    PLATFORM_TYPE_CLOUD_WEB = 9
    PLATFORM_TYPE_CLOUD_TV = 10
    PLATFORM_TYPE_CLOUD_MAC = 11
    PLATFORM_TYPE_CLOUD_PC = 12
    PLATFORM_TYPE_CLOUD_THIRD_PARTY_MOBILE = 13
    PLATFORM_TYPE_CLOUD_THIRD_PARTY_PC = 14


class PlayerDieOption(betterproto.Enum):
    PLAYER_DIE_OPTION_OPT_NONE = 0
    PLAYER_DIE_OPTION_OPT_REPLAY = 1
    PLAYER_DIE_OPTION_OPT_CANCEL = 2
    PLAYER_DIE_OPTION_OPT_REVIVE = 3


class PlayerDieType(betterproto.Enum):
    PLAYER_DIE_TYPE_NONE = 0
    PLAYER_DIE_TYPE_KILL_BY_MONSTER = 1
    PLAYER_DIE_TYPE_KILL_BY_GEAR = 2
    PLAYER_DIE_TYPE_FALL = 3
    PLAYER_DIE_TYPE_DRAWN = 4
    PLAYER_DIE_TYPE_ABYSS = 5
    PLAYER_DIE_TYPE_GM = 6
    PLAYER_DIE_TYPE_CLIMATE_COLD = 7
    PLAYER_DIE_TYPE_STORM_LIGHTING = 8


class PlaySoundType(betterproto.Enum):
    PLAY_SOUND_TYPE_NONE = 0
    PLAY_SOUND_TYPE_START = 1
    PLAY_SOUND_TYPE_STOP = 2


class PropChangeReason(betterproto.Enum):
    PROP_CHANGE_REASON_NONE = 0
    PROP_CHANGE_REASON_STATUE_RECOVER = 1
    PROP_CHANGE_REASON_ENERGY_BALL = 2
    PROP_CHANGE_REASON_ABILITY = 3
    PROP_CHANGE_REASON_LEVELUP = 4
    PROP_CHANGE_REASON_ITEM = 5
    PROP_CHANGE_REASON_AVATAR_CARD = 6
    PROP_CHANGE_REASON_CITY_LEVELUP = 7
    PROP_CHANGE_REASON_AVATAR_UPGRADE = 8
    PROP_CHANGE_REASON_AVATAR_PROMOTE = 9
    PROP_CHANGE_REASON_PLAYER_ADD_EXP = 10
    PROP_CHANGE_REASON_FINISH_QUEST = 11
    PROP_CHANGE_REASON_GM = 12
    PROP_CHANGE_REASON_MANUAL_ADJUST_WORLD_LEVEL = 13


class ProtEntityType(betterproto.Enum):
    PROT_ENTITY_TYPE_NONE = 0
    PROT_ENTITY_TYPE_AVATAR = 1
    PROT_ENTITY_TYPE_MONSTER = 2
    PROT_ENTITY_TYPE_NPC = 3
    PROT_ENTITY_TYPE_GADGET = 4
    PROT_ENTITY_TYPE_REGION = 5
    PROT_ENTITY_TYPE_WEAPON = 6
    PROT_ENTITY_TYPE_WEATHER = 7
    PROT_ENTITY_TYPE_SCENE = 8
    PROT_ENTITY_TYPE_TEAM = 9
    PROT_ENTITY_TYPE_MASSIVE_ENTITY = 10
    PROT_ENTITY_TYPE_MP_LEVEL = 11
    PROT_ENTITY_TYPE_PLAY_TEAM_ENTITY = 12
    PROT_ENTITY_TYPE_EYE_POINT = 13
    PROT_ENTITY_TYPE_MAX = 14


class QuitReason(betterproto.Enum):
    QUIT_REASON_INVALID = 0
    QUIT_REASON_HOST_NO_OTHER_PLAYER = 1
    QUIT_REASON_KICK_BY_HOST = 2
    QUIT_REASON_BACK_TO_MY_WORLD = 3
    QUIT_REASON_KICK_BY_HOST_LOGOUT = 4
    QUIT_REASON_KICK_BY_HOST_BLOCK = 5
    QUIT_REASON_BE_BLOCKED = 6


class Reason(betterproto.Enum):
    REASON_SUCC = 0
    REASON_TARGET_SCENE_CANNOT_ENTER = 1
    REASON_SELF_MP_UNAVAILABLE = 2
    REASON_OTHER_DATA_VERSION_NOT_LATEST = 3
    REASON_DATA_VERSION_NOT_LATEST = 4
    REASON_GM_CLEAR = 5
    REASON_PLAYER_TRANSFER = 6
    REASON_CLIENT_CHECKSUM_INVALID = 7
    NHMKGJGLHPO = 8


class RecordUsage(betterproto.Enum):
    RECORD_USAGE_UGC_RECORD_USAGE_NONE = 0
    RECORD_USAGE_UGC_RECORD_USAGE_IMPORT = 1
    RECORD_USAGE_UGC_RECORD_USAGE_PLAY = 2
    RECORD_USAGE_UGC_RECORD_USAGE_TRIAL = 3
    RECORD_USAGE_UGC_RECORD_USAGE_COMPARE = 4


class RegionEvent(betterproto.Enum):
    REGION_EVENT_NONE = 0
    REGION_EVENT_ENTER = 1
    REGION_EVENT_LEAVE = 2


class RegionSearchState(betterproto.Enum):
    REGION_SEARCH_STATE_NONE = 0
    REGION_SEARCH_STATE_UNSTARTED = 1
    REGION_SEARCH_STATE_STARTED = 2
    REGION_SEARCH_STATE_WAIT_REWARD = 3
    REGION_SEARCH_STATE_FINISHED = 4


class ReportReasonType(betterproto.Enum):
    REPORT_REASON_TYPE_NONE = 0
    REPORT_REASON_TYPE_DECEPTIVE_ADS = 1
    REPORT_REASON_TYPE_ABUSING = 2
    REPORT_REASON_TYPE_CHEAT = 3
    REPORT_REASON_TYPE_POLITICAL = 4
    REPORT_REASON_TYPE_OTHER = 5
    REPORT_REASON_TYPE_HOME = 6


class ResinCostType(betterproto.Enum):
    RESIN_COST_TYPE_NONE = 0
    RESIN_COST_TYPE_NORMAL = 1
    RESIN_COST_TYPE_CONDENSE = 2
    RESIN_COST_TYPE_REUNION_PRIVILEGE = 3
    RESIN_COST_TYPE_OP_ACTIVITY = 4
    RESIN_COST_TYPE_MATERIAL = 5


class RogueCellState(betterproto.Enum):
    ROGUE_CELL_STATE_NONE = 0
    ROGUE_CELL_STATE_BATTLE = 1
    ROGUE_CELL_STATE_SUCCESS = 2
    ROGUE_CELL_STATE_FINISH = 3
    ROGUE_CELL_STATE_TAKEN_CHEST = 4


class RogueDiaryAvatarDisableStatus(betterproto.Enum):
    ROGUE_DIARY_AVATAR_DISABLE_STATUS_NONE = 0
    ROGUE_DIARY_AVATAR_DISABLE_STATUS_DEATH = 1
    ROGUE_DIARY_AVATAR_DISABLE_STATUS_TIRED = 2
    ROGUE_DIARY_AVATAR_DISABLE_STATUS_DUPLICATED = 3


class RogueEliteCellDifficultyType(betterproto.Enum):
    ROGUE_ELITE_CELL_DIFFICULTY_TYPE_NORMAL = 0
    ROGUE_ELITE_CELL_DIFFICULTY_TYPE_HARD = 1


class SalesmanStatusType(betterproto.Enum):
    SALESMAN_STATUS_TYPE_NONE = 0
    SALESMAN_STATUS_TYPE_UNSTARTED = 1
    SALESMAN_STATUS_TYPE_STARTED = 2
    SALESMAN_STATUS_TYPE_DELIVERED = 3


class SalvageEscortStopReason(betterproto.Enum):
    SALVAGE_ESCORT_STOP_REASON_NONE = 0
    SALVAGE_ESCORT_STOP_REASON_SUCCESS = 1
    SALVAGE_ESCORT_STOP_REASON_DUMP = 2
    SALVAGE_ESCORT_STOP_REASON_TIME = 3
    SALVAGE_ESCORT_STOP_REASON_INTERRUPT = 4
    SALVAGE_ESCORT_STOP_REASON_LEAVE = 5
    SALVAGE_ESCORT_STOP_REASON_FULL = 6


class SalvagePreventStopReason(betterproto.Enum):
    SALVAGE_PREVENT_STOP_REASON_NONE = 0
    SALVAGE_PREVENT_STOP_REASON_SUCCESS = 1
    SALVAGE_PREVENT_STOP_REASON_ARRIVAL = 2
    SALVAGE_PREVENT_STOP_REASON_INTERRUPT = 3
    SALVAGE_PREVENT_STOP_REASON_LEAVE = 4
    SALVAGE_PREVENT_STOP_REASON_FULL = 5
    SALVAGE_PREVENT_STOP_REASON_AWAY = 6


class SealBattleType(betterproto.Enum):
    SEAL_BATTLE_TYPE_KEEP_ALIVE = 0
    SEAL_BATTLE_TYPE_KILL_MONSTER = 1
    SEAL_BATTLE_TYPE_ENERGY_CHARGE = 2


class ServerBuffChangeType(betterproto.Enum):
    SERVER_BUFF_CHANGE_TYPE_ADD_SERVER_BUFF = 0
    SERVER_BUFF_CHANGE_TYPE_DEL_SERVER_BUFF = 1


class ServerLogLevel(betterproto.Enum):
    SERVER_LOG_LEVEL_NONE = 0
    SERVER_LOG_LEVEL_DEBUG = 1
    SERVER_LOG_LEVEL_INFO = 2
    SERVER_LOG_LEVEL_WARNING = 3
    SERVER_LOG_LEVEL_ERROR = 4


class ServerLogType(betterproto.Enum):
    SERVER_LOG_TYPE_NONE = 0
    SERVER_LOG_TYPE_ABILITY = 1
    SERVER_LOG_TYPE_LEVEL = 2
    SERVER_LOG_TYPE_ENTITY = 3
    SERVER_LOG_TYPE_LUA = 4


class SettleReason(betterproto.Enum):
    SETTLE_REASON_TIME_OUT = 0
    SETTLE_REASON_PLAY_END = 1
    SETTLE_REASON_PLAYER_QUIT = 2
    SETTLE_REASON_LIFE_COUNT = 3


class ShapeType(betterproto.Enum):
    SHAPE_TYPE_OBSTACLE_SHAPE_CAPSULE = 0
    SHAPE_TYPE_OBSTACLE_SHAPE_BOX = 1


class State(betterproto.Enum):
    STATE_INVALID = 0
    STATE_START = 1
    STATE_TIMEOUT = 2


class Status(betterproto.Enum):
    STATUS_INVALID = 0
    STATUS_UNFINISHED = 1
    STATUS_FINISHED = 2
    STATUS_REWARD_TAKEN = 3


class StoreType(betterproto.Enum):
    STORE_TYPE_NONE = 0
    STORE_TYPE_PACK = 1
    STORE_TYPE_DEPOT = 2


class SvrMsgId(betterproto.Enum):
    MSG_UNKNOWN = 0
    MSG_BLOCK_REFRESH_COUNTDOWN = 1
    MSG_AVATAR_REVIVE_BY_STATUE = 2
    MSG_DAILY_TASK_REWARD_MAX_NUM = 3
    MSG_ROUTINE_TYPE_NOT_OPEN = 4
    MSG_ROUTINE_TYPE_REWARD_MAX_NUM = 5
    MSG_MECHANICUS_COIN_LIMIT = 6


class TransmitReason(betterproto.Enum):
    TRANSMIT_REASON_NONE = 0
    TRANSMIT_REASON_QUEST = 1


class TryCustomDungeonType(betterproto.Enum):
    TRY_CUSTOM_DUNGEON_TYPE_NONE = 0
    TRY_CUSTOM_DUNGEON_TYPE_ROOM = 1
    TRY_CUSTOM_DUNGEON_TYPE_ALL = 2
    TRY_CUSTOM_DUNGEON_TYPE_OFFICIAL_PLAY = 3


class Type(betterproto.Enum):
    TYPE_NULL = 0
    TYPE_ACTIVE = 1
    TYPE_PASSIVE = 2


class UgcType(betterproto.Enum):
    UGC_TYPE_NONE = 0
    UGC_TYPE_MUSIC_GAME = 1


class UpdateType(betterproto.Enum):
    UPDATE_TYPE_INVALID = 0
    UPDATE_TYPE_ADD = 1
    UPDATE_TYPE_SET = 2


class VehicleInteractType(betterproto.Enum):
    VEHICLE_INTERACT_TYPE_NONE = 0
    VEHICLE_INTERACT_TYPE_IN = 1
    VEHICLE_INTERACT_TYPE_OUT = 2


class VisionType(betterproto.Enum):
    VISION_TYPE_NONE = 0
    VISION_TYPE_MEET = 1
    VISION_TYPE_REBORN = 2
    VISION_TYPE_REPLACE = 3
    VISION_TYPE_WAYPOINT_REBORN = 4
    VISION_TYPE_MISS = 5
    VISION_TYPE_DIE = 6
    VISION_TYPE_GATHER_ESCAPE = 7
    VISION_TYPE_REFRESH = 8
    VISION_TYPE_TRANSPORT = 9
    VISION_TYPE_REPLACE_DIE = 10
    VISION_TYPE_REPLACE_NO_NOTIFY = 11
    VISION_TYPE_BORN = 12
    VISION_TYPE_PICKUP = 13
    VISION_TYPE_REMOVE = 14
    VISION_TYPE_CHANGE_COSTUME = 15
    VISION_TYPE_FISH_REFRESH = 16
    VISION_TYPE_FISH_BIG_SHOCK = 17
    VISION_TYPE_FISH_QTE_SUCC = 18
    VISION_TYPE_CAPTURE_DISAPPEAR = 19


class WidgetCreatorOpType(betterproto.Enum):
    WIDGET_CREATOR_OP_TYPE_NONE = 0
    WIDGET_CREATOR_OP_TYPE_RETRACT = 1
    WIDGET_CREATOR_OP_TYPE_RETRACT_AND_CREATE = 2


class WidgetExtraCdType(betterproto.Enum):
    NONE = 0
    WIDGET_EXTRA_CD_TYPE_E_SKILL_SHARED = 1


class WidgetSlotOp(betterproto.Enum):
    WIDGET_SLOT_OP_ATTACH = 0
    WIDGET_SLOT_OP_DETACH = 1


class WidgetSlotTag(betterproto.Enum):
    WIDGET_SLOT_TAG_QUICK_USE = 0
    WIDGET_SLOT_TAG_ATTACH_AVATAR = 1


class WindFieldDungeonFailReason(betterproto.Enum):
    WIND_FIELD_DUNGEON_FAIL_REASON_NONE = 0
    WIND_FIELD_DUNGEON_FAIL_REASON_CANCEL = 1
    WIND_FIELD_DUNGEON_FAIL_REASON_TIMEOUT = 2
    WIND_FIELD_DUNGEON_FAIL_REASON_ALL_AVATAR_DIE = 3
    WIND_FIELD_DUNGEON_FAIL_REASON_LUA_INTERRUPT = 4


class BattlePassMissionMissionStatus(betterproto.Enum):
    MISSION_STATUS_INVALID = 0
    MISSION_STATUS_UNFINISHED = 1
    MISSION_STATUS_FINISHED = 2
    MISSION_STATUS_POINT_TAKEN = 3


class DebugNotifyRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GmObstacleInfoShapeType(betterproto.Enum):
    SHAPE_TYPE_OBSTACLE_SHAPE_CAPSULE = 0
    SHAPE_TYPE_OBSTACLE_SHAPE_BOX = 1


class MarkMapReqOperation(betterproto.Enum):
    OPERATION_ADD = 0
    OPERATION_MOD = 1
    OPERATION_DEL = 2
    OPERATION_GET = 3


class ObstacleInfoShapeType(betterproto.Enum):
    SHAPE_TYPE_OBSTACLE_SHAPE_CAPSULE = 0
    SHAPE_TYPE_OBSTACLE_SHAPE_BOX = 1


class PlayerApplyEnterMpResultNotifyReason(betterproto.Enum):
    REASON_PLAYER_JUDGE = 0
    REASON_SCENE_CANNOT_ENTER = 1
    REASON_PLAYER_CANNOT_ENTER_MP = 2
    REASON_SYSTEM_JUDGE = 3
    REASON_ALLOW_ENTER_PLAYER_FULL = 4
    REASON_WORLD_LEVEL_LOWER_THAN_HOST = 5
    REASON_HOST_IN_MATCH = 6
    REASON_PLAYER_IN_BLACKLIST = 7
    REASON_PS_PLAYER_NOT_ACCEPT_OTHERS = 8
    REASON_HOST_IS_BLOCKED = 9
    REASON_OTHER_DATA_VERSION_NOT_LATEST = 10
    REASON_DATA_VERSION_NOT_LATEST = 11
    REASON_PLAYER_NOT_IN_PLAYER_WORLD = 12
    REASON_MAX_PLAYER = 13


class QueryPathRspPathStatusType(betterproto.Enum):
    PATH_STATUS_TYPE_FAIL = 0
    PATH_STATUS_TYPE_SUCC = 1
    PATH_STATUS_TYPE_PARTIAL = 2


class ServerBuffChangeNotifyServerBuffChangeType(betterproto.Enum):
    SERVER_BUFF_CHANGE_TYPE_ADD_SERVER_BUFF = 0
    SERVER_BUFF_CHANGE_TYPE_DEL_SERVER_BUFF = 1


class ToTheMoonObstacleInfoShapeType(betterproto.Enum):
    SHAPE_TYPE_OBSTACLE_SHAPE_CAPSULE = 0
    SHAPE_TYPE_OBSTACLE_SHAPE_BOX = 1


class TowerLevelEndNotifyContinueStateType(betterproto.Enum):
    CONTINUE_STATE_TYPE_CAN_NOT_CONTINUE = 0
    CONTINUE_STATE_TYPE_CAN_ENTER_NEXT_LEVEL = 1
    CONTINUE_STATE_TYPE_CAN_ENTER_NEXT_FLOOR = 2


@dataclass(eq=False, repr=False)
class PacketHead(betterproto.Message):
    packet_id: int = betterproto.uint32_field(1)
    rpc_id: int = betterproto.uint32_field(2)
    client_sequence_id: int = betterproto.uint32_field(3)
    enet_channel_id: int = betterproto.uint32_field(4)
    enet_is_reliable: int = betterproto.uint32_field(5)
    sent_ms: int = betterproto.uint64_field(6)
    user_id: int = betterproto.uint32_field(11)
    user_ip: int = betterproto.uint32_field(12)
    user_session_id: int = betterproto.uint32_field(13)
    recv_time_ms: int = betterproto.uint64_field(21)
    rpc_begin_time_ms: int = betterproto.uint32_field(22)
    ext_map: Dict[int, int] = betterproto.map_field(
        23, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    sender_app_id: int = betterproto.uint32_field(24)
    source_service: int = betterproto.uint32_field(31)
    target_service: int = betterproto.uint32_field(32)
    service_app_id_map: Dict[int, int] = betterproto.map_field(
        33, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_set_game_thread: bool = betterproto.bool_field(34)
    game_thread_index: int = betterproto.uint32_field(35)


@dataclass(eq=False, repr=False)
class RegionSimpleInfo(betterproto.Message):
    name: str = betterproto.string_field(1)
    title: str = betterproto.string_field(2)
    type: str = betterproto.string_field(3)
    dispatch_url: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class QueryRegionListHttpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    region_list: List["RegionSimpleInfo"] = betterproto.message_field(2)
    client_secret_key: bytes = betterproto.bytes_field(5)
    client_custom_config_encrypted: bytes = betterproto.bytes_field(6)
    enable_login_pc: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class Aaaolhakgio(betterproto.Message):
    lgcfopjlbmb: int = betterproto.int32_field(5)
    aeinmdecjbh: int = betterproto.uint32_field(6)
    kopcjfaeegb: int = betterproto.uint32_field(11)
    trigger_entity_id: int = betterproto.uint32_field(10)
    mfpmgbedfid: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class Aajaaokijhf(betterproto.Message):
    share_code: str = betterproto.string_field(1)
    owner_uid: int = betterproto.uint32_field(2)
    module_id: int = betterproto.uint32_field(3)
    scene_id: int = betterproto.uint32_field(4)
    block_id: int = betterproto.uint32_field(5)
    is_allow_copy: bool = betterproto.bool_field(6)
    create_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AbilityAppliedAbility(betterproto.Message):
    ability_name: "AbilityString" = betterproto.message_field(1)
    ability_override: "AbilityString" = betterproto.message_field(2)
    override_map: List["AbilityScalarValueEntry"] = betterproto.message_field(3)
    instanced_ability_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AbilityAppliedModifier(betterproto.Message):
    modifier_local_id: int = betterproto.int32_field(1)
    parent_ability_entity_id: int = betterproto.uint32_field(2)
    parent_ability_name: "AbilityString" = betterproto.message_field(3)
    parent_ability_override: "AbilityString" = betterproto.message_field(4)
    instanced_ability_id: int = betterproto.uint32_field(5)
    instanced_modifier_id: int = betterproto.uint32_field(6)
    exist_duration: float = betterproto.float_field(7)
    attached_instanced_modifier: "AbilityAttachedModifier" = betterproto.message_field(
        8
    )
    apply_entity_id: int = betterproto.uint32_field(9)
    is_attached_parent_ability: bool = betterproto.bool_field(10)
    modifier_durability: "ModifierDurability" = betterproto.message_field(11)
    sbuff_uid: int = betterproto.uint32_field(12)
    is_serverbuff_modifier: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class AbilityArgument(betterproto.Message):
    int_arg: int = betterproto.uint32_field(11, group="arg")
    float_arg: float = betterproto.float_field(2, group="arg")
    str_arg: str = betterproto.string_field(8, group="arg")


@dataclass(eq=False, repr=False)
class AbilityAttachedModifier(betterproto.Message):
    is_invalid: bool = betterproto.bool_field(1)
    owner_entity_id: int = betterproto.uint32_field(2)
    instanced_modifier_id: int = betterproto.uint32_field(3)
    is_serverbuff_modifier: bool = betterproto.bool_field(4)
    attach_name_hash: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class AbilityChangeNotify(betterproto.Message):
    ability_control_block: "AbilityControlBlock" = betterproto.message_field(10)
    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AbilityControlBlock(betterproto.Message):
    ability_embryo_list: List["AbilityEmbryo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AbilityEmbryo(betterproto.Message):
    ability_id: int = betterproto.uint32_field(1)
    ability_name_hash: int = betterproto.fixed32_field(2)
    ability_override_name_hash: int = betterproto.fixed32_field(3)


@dataclass(eq=False, repr=False)
class AbilityGadget(betterproto.Message):
    camp_id: int = betterproto.uint32_field(1)
    olefgkameoj: int = betterproto.uint32_field(2)
    target_entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AbilityGadgetInfo(betterproto.Message):
    camp_id: int = betterproto.uint32_field(1)
    camp_target_type: int = betterproto.uint32_field(2)
    target_entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AbilityIdentifier(betterproto.Message):
    modifier_owner_id: int = betterproto.uint32_field(3)
    ability_caster_id: int = betterproto.uint32_field(10)
    instanced_ability_id: int = betterproto.uint32_field(5)
    is_serverbuff_modifier: bool = betterproto.bool_field(4)
    local_id: int = betterproto.int32_field(8)
    instanced_modifier_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AbilityInvocationFailNotify(betterproto.Message):
    reason: str = betterproto.string_field(4)
    entity_id: int = betterproto.uint32_field(13)
    invoke: "AbilityInvokeEntry" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class AbilityInvocationFixedNotify(betterproto.Message):
    unk3300_ldiaomfibpl: "AbilityInvokeEntry" = betterproto.message_field(3)
    unk3300_ahdfhhfhefm: "AbilityInvokeEntry" = betterproto.message_field(6)
    unk3300_ongnohliibo: "AbilityInvokeEntry" = betterproto.message_field(8)
    unk3300_emgkkhklieg: "AbilityInvokeEntry" = betterproto.message_field(5)
    unk3300_kfmhllheccj: "AbilityInvokeEntry" = betterproto.message_field(15)
    unk3300_gaffbffkdic: "AbilityInvokeEntry" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AbilityInvocationsNotify(betterproto.Message):
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class AbilityInvokeEntry(betterproto.Message):
    head: "AbilityInvokeEntryHead" = betterproto.message_field(13)
    forward_type: "ForwardType" = betterproto.enum_field(15)
    argument_type: "AbilityInvokeArgument" = betterproto.enum_field(12)
    forward_peer: int = betterproto.uint32_field(10)
    ability_data: bytes = betterproto.bytes_field(4)
    event_id: int = betterproto.uint32_field(8)
    entity_id: int = betterproto.uint32_field(11)
    total_tick_time: float = betterproto.double_field(14)
    is_ignore_auth: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class AbilityInvokeEntryHead(betterproto.Message):
    local_id: int = betterproto.int32_field(7)
    server_buff_uid: int = betterproto.uint32_field(15)
    target_id: int = betterproto.uint32_field(5)
    instanced_ability_id: int = betterproto.uint32_field(2)
    instanced_modifier_id: int = betterproto.uint32_field(9)
    is_serverbuff_modifier: bool = betterproto.bool_field(10)
    modifier_config_local_id: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class AbilityMixinRecoverInfo(betterproto.Message):
    instanced_ability_id: int = betterproto.uint32_field(1, group="source")
    instanced_modifier_id: int = betterproto.uint32_field(2, group="source")
    local_id: int = betterproto.uint32_field(3)
    data_list: List[int] = betterproto.uint32_field(4)
    is_serverbuff_modifier: bool = betterproto.bool_field(5)
    massive_prop_list: List["MassivePropSyncInfo"] = betterproto.message_field(6)
    breakout_snap_shot: "BreakoutSnapShot" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawner(betterproto.Message):
    add_signal: "AbilityMixinWindSeedSpawnerAddSignal" = betterproto.message_field(
        13, group="EMKLHFDNJMA"
    )
    refresh_seed: "AbilityMixinWindSeedSpawnerRefreshSeed" = betterproto.message_field(
        3, group="EMKLHFDNJMA"
    )
    catch_seed: "AbilityMixinWindSeedSpawnerCatchSeed" = betterproto.message_field(
        4, group="EMKLHFDNJMA"
    )


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawnerAddSignal(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawnerRefreshSeed(betterproto.Message):
    lfglcalgdac: List["Vector"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawnerCatchSeed(betterproto.Message):
    entity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AbilityScalarValueEntry(betterproto.Message):
    key: "AbilityString" = betterproto.message_field(1)
    value_type: "AbilityScalarType" = betterproto.enum_field(2)
    float_value: float = betterproto.float_field(3, group="value")
    string_value: str = betterproto.string_field(4, group="value")
    int_value: int = betterproto.int32_field(5, group="value")
    uint_value: int = betterproto.uint32_field(6, group="value")


@dataclass(eq=False, repr=False)
class AbilityString(betterproto.Message):
    str: builtins.str = betterproto.string_field(1, group="type")
    hash: int = betterproto.uint32_field(2, group="type")


@dataclass(eq=False, repr=False)
class AbilitySyncStateInfo(betterproto.Message):
    is_inited: bool = betterproto.bool_field(1)
    dynamic_value_map: List["AbilityScalarValueEntry"] = betterproto.message_field(2)
    applied_abilities: List["AbilityAppliedAbility"] = betterproto.message_field(3)
    applied_modifiers: List["AbilityAppliedModifier"] = betterproto.message_field(4)
    mixin_recover_infos: List["AbilityMixinRecoverInfo"] = betterproto.message_field(5)
    sgv_dynamic_value_map: List["AbilityScalarValueEntry"] = betterproto.message_field(
        6
    )


@dataclass(eq=False, repr=False)
class Ablofndbmfd(betterproto.Message):
    brief_list: List["Aajaaokijhf"] = betterproto.message_field(1)
    mohcaffojgh: List[str] = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class Acbdkpgmcnh(betterproto.Message):
    aicefchaici: bool = betterproto.bool_field(33)
    jllpcjcimge: "Clmdhlaenej" = betterproto.enum_field(34)
    kcllbppiboo: List["Idoelhbancp"] = betterproto.message_field(999)


@dataclass(eq=False, repr=False)
class AcceptCityReputationRequestReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(2)
    request_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AcceptCityReputationRequestRsp(betterproto.Message):
    city_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(3)
    request_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class Achievement(betterproto.Message):
    cur_progress: int = betterproto.uint32_field(10)
    id: int = betterproto.uint32_field(13)
    total_progress: int = betterproto.uint32_field(14)
    status: "Status" = betterproto.enum_field(5)
    finish_timestamp: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AchievementAllDataNotify(betterproto.Message):
    reward_taken_goal_id_list: List[int] = betterproto.uint32_field(8)
    achievement_list: List["Achievement"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AchievementUpdateNotify(betterproto.Message):
    achievement_list: List["Achievement"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class Acnfcmojfab(betterproto.Message):
    ecpfngapbhc: List["Boiphjcflbk"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class ActivityAcceptAllGiveGiftReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ActivityAcceptAllGiveGiftRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(11)
    accept_gift_result_info_list: List[
        "ActivityAcceptGiftResultInfo"
    ] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class ActivityAcceptGiftResultInfo(betterproto.Message):
    unk3300_jfhleblofma: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    uid: int = betterproto.uint32_field(11)
    unk3300_cocfnbjcfgp: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ActivityAcceptGiveGiftReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(2)
    uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ActivityAcceptGiveGiftRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(4)
    accept_gift_result_info: "ActivityAcceptGiftResultInfo" = betterproto.message_field(
        9
    )
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class ActivityBannerClearReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(6)
    activity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ActivityBannerClearRsp(betterproto.Message):
    activity_id: int = betterproto.uint32_field(14)
    schedule_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class ActivityBannerNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(11)
    activity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ActivityCoinInfoNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(7)
    activity_coin_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    schedule_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ActivityCondStateChangeNotify(betterproto.Message):
    expire_cond_list: List[int] = betterproto.uint32_field(2)
    activated_sale_id_list: List[int] = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(15)
    activity_id: int = betterproto.uint32_field(3)
    disable_transfer_point_interaction_list: List[
        "Uint32Pair"
    ] = betterproto.message_field(8)
    meet_cond_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ActivityDisableTransferPointInteractionNotify(betterproto.Message):
    is_disable: bool = betterproto.bool_field(15)
    scene_point_pair: "Uint32Pair" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ActivityDungeonAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    is_trial: bool = betterproto.bool_field(2)
    costume_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ActivityFriendGiftWishData(betterproto.Message):
    uid: int = betterproto.uint32_field(4)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    remark_name: str = betterproto.string_field(2)
    nickname: str = betterproto.string_field(9)
    profile_picture: "ProfilePicture" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ActivityGetCanGiveFriendGiftReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ActivityGetCanGiveFriendGiftRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(10)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class ActivityGetFriendGiftWishListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ActivityGetFriendGiftWishListRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(8)
    friend_gift_wish_list: List[
        "ActivityFriendGiftWishData"
    ] = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class ActivityGetRecvGiftListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ActivityGetRecvGiftListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    recv_gift_list: List["ActivityRecvGiftData"] = betterproto.message_field(7)
    schedule_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ActivityGiveFriendGiftReq(betterproto.Message):
    uid: int = betterproto.uint32_field(15)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    schedule_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ActivityGiveFriendGiftRsp(betterproto.Message):
    limit_gift_list: List[int] = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(3)
    schedule_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ActivityHaveRecvGiftNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ActivityInfo(betterproto.Message):
    activity_coin_map: Dict[int, int] = betterproto.map_field(
        406, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    score_limit: int = betterproto.uint32_field(1497)
    taken_reward_list: List[int] = betterproto.uint32_field(644)
    unk3300_mdbdpibeggh: bool = betterproto.bool_field(7)
    unk3300_mjnpgeklocg: bool = betterproto.bool_field(754)
    end_time: int = betterproto.uint32_field(12)
    activity_type: int = betterproto.uint32_field(10)
    selected_avatar_reward_id: int = betterproto.uint32_field(519)
    meet_cond_list: List[int] = betterproto.uint32_field(2)
    activity_id: int = betterproto.uint32_field(15)
    unk3300_abjklalkldg: bool = betterproto.bool_field(537)
    is_finished: bool = betterproto.bool_field(3)
    activity_push_tips_data_list: List[
        "ActivityPushTipsData"
    ] = betterproto.message_field(336)
    watcher_info_list: List["ActivityWatcherInfo"] = betterproto.message_field(14)
    unk3300_cbcehljjogi: bool = betterproto.bool_field(1126)
    schedule_id: int = betterproto.uint32_field(6)
    expire_cond_list: List[int] = betterproto.uint32_field(9)
    fdjefldhela: List[int] = betterproto.uint32_field(2021)
    unk3300_icnjjkdhpch: bool = betterproto.bool_field(11)
    first_day_start_time: int = betterproto.uint32_field(598)
    cur_score: int = betterproto.uint32_field(396)
    wish_gift_num_map: Dict[int, int] = betterproto.map_field(
        1052, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    unk3300_nepkllbjfkk: bool = betterproto.bool_field(1637)
    begin_time: int = betterproto.uint32_field(5)
    sam_lamp_info: "SamLampInfo" = betterproto.message_field(4, group="detail")
    crucible_info: "CrucibleInfo" = betterproto.message_field(13, group="detail")
    salesman_info: "SalesmanInfo" = betterproto.message_field(1, group="detail")
    trial_avatar_info: "TrialAvatarInfo" = betterproto.message_field(8, group="detail")
    delivery_info: "DeliveryInfo" = betterproto.message_field(32, group="detail")
    aster_info: "AsterInfo" = betterproto.message_field(1808, group="detail")
    flight_info: "FlightInfo" = betterproto.message_field(1062, group="detail")
    dragon_spine_info: "DragonSpineInfo" = betterproto.message_field(
        378, group="detail"
    )
    effigy_info: "EffigyInfo" = betterproto.message_field(1991, group="detail")
    treasure_map_info: "TreasureMapInfo" = betterproto.message_field(
        546, group="detail"
    )
    blessing_info: "BlessingInfo" = betterproto.message_field(1198, group="detail")
    sea_lamp_info: "SeaLampInfo" = betterproto.message_field(578, group="detail")
    expedition_info: "ExpeditionInfo" = betterproto.message_field(930, group="detail")
    arena_challenge_info: "ArenaChallengeInfo" = betterproto.message_field(
        699, group="detail"
    )
    fleur_fair_info: "FleurFairInfo" = betterproto.message_field(1116, group="detail")
    water_spirit_info: "WaterSpiritInfo" = betterproto.message_field(
        1651, group="detail"
    )
    challneler_slab_info: "ChallnelerSlabInfo" = betterproto.message_field(
        1135, group="detail"
    )
    mist_trial_activity_info: "MistTrialActivityInfo" = betterproto.message_field(
        1320, group="detail"
    )
    hide_and_seek_info: "HideAndSeekInfo" = betterproto.message_field(
        1077, group="detail"
    )
    find_hilichurl_info: "FindHilichurlInfo" = betterproto.message_field(
        417, group="detail"
    )
    summer_time_info: "SummerTimeInfo" = betterproto.message_field(1477, group="detail")
    buoyant_combat_info: "BuoyantCombatInfo" = betterproto.message_field(
        1277, group="detail"
    )
    echo_shell_info: "EchoShellInfo" = betterproto.message_field(1172, group="detail")
    bounce_conjuring_info: "BounceConjuringInfo" = betterproto.message_field(
        278, group="detail"
    )
    blitz_rush_info: "BlitzRushInfo" = betterproto.message_field(192, group="detail")
    chess_info: "ChessInfo" = betterproto.message_field(1797, group="detail")
    sumo_info: "SumoInfo" = betterproto.message_field(1379, group="detail")
    moonfin_trial_info: "MoonfinTrialInfo" = betterproto.message_field(
        1122, group="detail"
    )
    luna_rite_info: "LunaRiteInfo" = betterproto.message_field(82, group="detail")
    plant_flower_info: "PlantFlowerInfo" = betterproto.message_field(
        1864, group="detail"
    )
    music_game_info: "MusicGameActivityDetailInfo" = betterproto.message_field(
        1220, group="detail"
    )
    roguelike_dungoen_info: "RoguelikeDungoenInfo" = betterproto.message_field(
        1817, group="detail"
    )
    dig_info: "DigInfo" = betterproto.message_field(168, group="detail")
    hachi_info: "HachiInfo" = betterproto.message_field(1663, group="detail")
    winter_camp_info: "WinterCampInfo" = betterproto.message_field(114, group="detail")
    potion_info: "PotionInfo" = betterproto.message_field(1552, group="detail")
    tanuki_travel_activity_info: "TanukiTravelActivityInfo" = betterproto.message_field(
        1453, group="detail"
    )
    lantern_rite_activity_info: "LanternRiteActivityInfo" = betterproto.message_field(
        1372, group="detail"
    )
    michiae_matsuri_info: "MichiaeMatsuriInfo" = betterproto.message_field(
        428, group="detail"
    )
    bartender_info: "BartenderInfo" = betterproto.message_field(35, group="detail")
    ugc_info: "UgcInfo" = betterproto.message_field(589, group="detail")
    crystal_link_info: "CrystalLinkInfo" = betterproto.message_field(
        1375, group="detail"
    )
    irodori_info: "IrodoriInfo" = betterproto.message_field(1014, group="detail")
    photo_info: "PhotoInfo" = betterproto.message_field(309, group="detail")
    spice_info: "SpiceInfo" = betterproto.message_field(1446, group="detail")
    gacha_info: "GachaInfo" = betterproto.message_field(1177, group="detail")
    luminance_stone_challenge_info: "LuminanceStoneChallengeInfo" = (
        betterproto.message_field(142, group="detail")
    )
    rogue_diary_info: "RogueDiaryInfo" = betterproto.message_field(397, group="detail")
    summer_time_v2_info: "SummerTimeV2Info" = betterproto.message_field(
        951, group="detail"
    )
    island_party_info: "IslandPartyInfo" = betterproto.message_field(
        1631, group="detail"
    )
    gear_info: "GearInfo" = betterproto.message_field(1801, group="detail")
    graven_innocence_info: "GravenInnocenceInfo" = betterproto.message_field(
        1173, group="detail"
    )
    instable_spray_info: "InstableSprayInfo" = betterproto.message_field(
        944, group="detail"
    )
    muqadas_potion_info: "MuqadasPotionInfo" = betterproto.message_field(
        1350, group="detail"
    )
    treasure_seelie_info: "TreasureSeelieInfo" = betterproto.message_field(
        1142, group="detail"
    )
    rock_board_explore_info: "RockBoardExploreInfo" = betterproto.message_field(
        1273, group="detail"
    )
    vintage_info: "VintageInfo" = betterproto.message_field(1316, group="detail")
    wind_field_info: "WindFieldInfo" = betterproto.message_field(2029, group="detail")
    fungus_fighter_info: "FungusFighterInfo" = betterproto.message_field(
        1543, group="detail"
    )
    char_amusement_info: "CharAmusementInfo" = betterproto.message_field(
        504, group="detail"
    )
    effigy_challenge_info: "EffigyChallengeInfo" = betterproto.message_field(
        1144, group="detail"
    )
    coin_collect_info: "CoinCollectInfo" = betterproto.message_field(
        559, group="detail"
    )
    brick_breaker_info: "BrickBreakerInfo" = betterproto.message_field(
        1275, group="detail"
    )
    duel_heart_info: "DuelHeartInfo" = betterproto.message_field(221, group="detail")
    sea_lamp_v3_info: "SeaLampV3Info" = betterproto.message_field(1080, group="detail")
    team_chain_info: "TeamChainInfo" = betterproto.message_field(144, group="detail")
    electrohercules_battle_info: "ElectroherculesBattleInfo" = (
        betterproto.message_field(172, group="detail")
    )
    gcg_festival_info: "GcgFestivalInfo" = betterproto.message_field(71, group="detail")


@dataclass(eq=False, repr=False)
class ActivityInfoNotify(betterproto.Message):
    activity_info: "ActivityInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ActivityPlayOpenAnimNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ActivityPushTipsData(betterproto.Message):
    state: "ActivityPushTipsState" = betterproto.enum_field(12)
    activity_push_tips_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ActivityPushTipsInfoNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(6)
    activity_push_tips_data_list: List[
        "ActivityPushTipsData"
    ] = betterproto.message_field(7)
    activity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ActivityReadPushTipsReq(betterproto.Message):
    activity_push_tips_id_list: List[int] = betterproto.uint32_field(11)
    activity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ActivityReadPushTipsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class ActivityRecvGiftData(betterproto.Message):
    remark_name: str = betterproto.string_field(15)
    nickname: str = betterproto.string_field(10)
    uid: int = betterproto.uint32_field(2)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    profile_picture: "ProfilePicture" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ActivitySaleChangeNotify(betterproto.Message):
    sale_id: int = betterproto.uint32_field(2)
    is_close: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class ActivityScheduleInfo(betterproto.Message):
    activity_id: int = betterproto.uint32_field(12)
    schedule_id: int = betterproto.uint32_field(13)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(9)
    is_open: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class ActivityScheduleInfoNotify(betterproto.Message):
    activity_schedule_list: List["ActivityScheduleInfo"] = betterproto.message_field(5)
    remain_fly_sea_lamp_num: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ActivitySelectAvatarCardReq(betterproto.Message):
    reward_id: int = betterproto.uint32_field(8)
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ActivitySelectAvatarCardRsp(betterproto.Message):
    reward_id: int = betterproto.uint32_field(14)
    activity_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class ActivitySetGiftWishReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(2)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ActivitySetGiftWishRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class ActivityShopSheetInfo(betterproto.Message):
    begin_time: int = betterproto.uint32_field(5)
    sheet_id: int = betterproto.uint32_field(14)
    end_time: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ActivityTakeAllScoreRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ActivityTakeAllScoreRewardRsp(betterproto.Message):
    activity_id: int = betterproto.uint32_field(13)
    reward_config_list: List[int] = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class ActivityTakeScoreRewardReq(betterproto.Message):
    reward_config_id: int = betterproto.uint32_field(14)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ActivityTakeScoreRewardRsp(betterproto.Message):
    reward_config_id: int = betterproto.uint32_field(13)
    activity_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class ActivityTakeWatcherRewardBatchReq(betterproto.Message):
    watcher_id_list: List[int] = betterproto.uint32_field(13)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ActivityTakeWatcherRewardBatchRsp(betterproto.Message):
    activity_id: int = betterproto.uint32_field(12)
    watcher_id_list: List[int] = betterproto.uint32_field(9)
    item_list: List["ItemParam"] = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class ActivityTakeWatcherRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(11)
    watcher_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ActivityTakeWatcherRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    watcher_id: int = betterproto.uint32_field(5)
    activity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ActivityUpdateWatcherNotify(betterproto.Message):
    watcher_info: "ActivityWatcherInfo" = betterproto.message_field(11)
    activity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ActivityWatcherInfo(betterproto.Message):
    cur_progress: int = betterproto.uint32_field(8)
    is_taken_reward: bool = betterproto.bool_field(12)
    total_progress: int = betterproto.uint32_field(1)
    watcher_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AddAranaraCollectionNotify(betterproto.Message):
    unk3300_afbiblnkcod: "AranaraCollectionState" = betterproto.enum_field(10)
    unk3300_njljbbmjlbk: "AranaraCollectionState" = betterproto.enum_field(15)
    collection_id: int = betterproto.uint32_field(1)
    collection_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AddBackupAvatarTeamReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AddBackupAvatarTeamRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class AddBlacklistReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class AddBlacklistRsp(betterproto.Message):
    target_friend_brief: "FriendBrief" = betterproto.message_field(2)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class AddCards(betterproto.Message):
    controller_id: int = betterproto.uint32_field(11)
    reason: "GcgReason" = betterproto.enum_field(1)
    pos: int = betterproto.uint32_field(6)
    zone: "GcgZoneType" = betterproto.enum_field(9)
    card_guid_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AddDice(betterproto.Message):
    unk3300_pcmpcclfeim: Dict[int, "GcgDiceSideType"] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_ENUM
    )
    unk3300_kfkogokpifn: Dict[int, "GcgDiceSideType"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_ENUM
    )
    controller_id: int = betterproto.uint32_field(3)
    reason: "GcgReason" = betterproto.enum_field(9)
    change_count: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class AddFriendNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(4)
    target_friend_brief: "FriendBrief" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class AddNoGachaAvatarCardNotify(betterproto.Message):
    item_id: int = betterproto.uint32_field(7)
    unk3300_mgaphpolkke: int = betterproto.uint32_field(3)
    is_transfer_to_item: bool = betterproto.bool_field(14)
    reason: int = betterproto.uint32_field(9)
    transfer_item_list: List[
        "AddNoGachaAvatarCardTransferItem"
    ] = betterproto.message_field(10)
    unk3300_gpbinalmfdf: int = betterproto.uint32_field(13)
    avatar_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AddNoGachaAvatarCardTransferItem(betterproto.Message):
    count: int = betterproto.uint32_field(10)
    is_new: bool = betterproto.bool_field(11)
    item_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AddQuestContentProgressReq(betterproto.Message):
    add_progress: int = betterproto.uint32_field(2)
    param: int = betterproto.uint32_field(9)
    content_type: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AddQuestContentProgressRsp(betterproto.Message):
    content_type: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class AddRandTaskInfoNotify(betterproto.Message):
    pos: "Vector" = betterproto.message_field(6)
    rand_task_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AddSeenMonsterNotify(betterproto.Message):
    monster_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AdjustTrackingInfo(betterproto.Message):
    unk3300_gamljpfkcgc: str = betterproto.string_field(5)
    unk3300_chcohlgbhlb: str = betterproto.string_field(8)
    unk3300_inaieomciem: str = betterproto.string_field(15)
    unk3300_onnmbnodpia: str = betterproto.string_field(3)
    unk3300_klkfliiofkk: str = betterproto.string_field(7)
    unk3300_mhdopamdmpl: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class AdjustWorldLevelReq(betterproto.Message):
    unk3300_dnlkimglblp: int = betterproto.uint32_field(3)
    unk3300_djbkbpdcbfh: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AdjustWorldLevelRsp(betterproto.Message):
    cd_over_time: int = betterproto.uint32_field(7)
    after_world_level: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class Aeienhdobgj(betterproto.Message):
    pos: "Vector" = betterproto.message_field(7)
    room_id: int = betterproto.uint32_field(6)
    rot: "Vector" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class Aflcchighfc(betterproto.Message):
    fekdaediiel: int = betterproto.int32_field(1)
    ocjodgafcna: int = betterproto.int32_field(2)
    paamjmeflfp: int = betterproto.int32_field(3)
    lolngckkkek: int = betterproto.int32_field(4)
    nkifjffiglb: List["Kiehigckoho"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class Ageeajginif(betterproto.Message):
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class Agnlmoppifh(betterproto.Message):
    nmfofegamme: str = betterproto.string_field(1)
    hfjgecdoafe: str = betterproto.string_field(8)
    elaipjlejji: bool = betterproto.bool_field(10)
    knilnhpcmgi: bool = betterproto.bool_field(20)
    lbkfdecnakj: bool = betterproto.bool_field(27)
    nnlmlfgoiii: "Gglaofmeggk" = betterproto.enum_field(9)
    hocldjnpeib: str = betterproto.string_field(11)
    cbinhdjifao: bool = betterproto.bool_field(16)
    dhdndgbmaee: bool = betterproto.bool_field(17)
    ipehnienipn: bool = betterproto.bool_field(18)
    ehppkpbjbbi: bool = betterproto.bool_field(42)
    aicefchaici: bool = betterproto.bool_field(23)
    odnagkoinfk: bool = betterproto.bool_field(31)
    jngoobcimbd: str = betterproto.string_field(36)
    ihmcfgapoin: str = betterproto.string_field(37)
    lmnfjldcfjn: str = betterproto.string_field(39)
    fkigjalgefl: str = betterproto.string_field(40)
    njpddpidinm: str = betterproto.string_field(41)
    kcllbppiboo: List["Idoelhbancp"] = betterproto.message_field(999)


@dataclass(eq=False, repr=False)
class Ahjaholpblk(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class Aihkoachdjh(betterproto.Message):
    score_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(14)
    duration: int = betterproto.uint32_field(10)
    begin_time: int = betterproto.uint32_field(11)
    stage_type: int = betterproto.uint32_field(5)
    ggihgakpekk: List[int] = betterproto.uint32_field(9)
    play_index: int = betterproto.uint32_field(12)
    mdpgfcplekf: bool = betterproto.bool_field(13)
    settle_info_list: List["Ielkgamfoln"] = betterproto.message_field(7)
    pdminbppnje: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class AiSkillCdInfo(betterproto.Message):
    skill_cd_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    skill_group_cd_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class AiSyncInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    has_path_to_target: bool = betterproto.bool_field(2)
    is_self_killing: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class AiThreatInfo(betterproto.Message):
    ai_threat_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class Ajdbljcegmm(betterproto.Message):
    embnkjlnook: List[str] = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class Ajfdjlkfkjm(betterproto.Message):
    cjiphccaobe: float = betterproto.float_field(9)


@dataclass(eq=False, repr=False)
class Alcdeaagblc(betterproto.Message):
    ckgefmkgkhh: int = betterproto.int64_field(1)
    cmhoaideaep: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class Alcgbnpjbhl(betterproto.Message):
    is_clear_all: bool = betterproto.bool_field(2)
    massive_prop_list: List["MassivePropSyncInfo"] = betterproto.message_field(11)
    amopeajfamd: List[int] = betterproto.int64_field(10)


@dataclass(eq=False, repr=False)
class AllCoopInfoNotify(betterproto.Message):
    main_coop_list: List["MainCoop"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class AllMarkPointNotify(betterproto.Message):
    mark_list: List["MapMarkPoint"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class AllSeenMonsterNotify(betterproto.Message):
    monster_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AllShareCdDataNotify(betterproto.Message):
    share_cd_info_map: Dict[int, "ShareCdInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AllWidgetBackgroundActiveStateNotify(betterproto.Message):
    background_active_widget_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AllWidgetDataNotify(betterproto.Message):
    sky_crystal_detector_data: "SkyCrystalDetectorData" = betterproto.message_field(2)
    normal_cool_down_data_list: List["WidgetCoolDownData"] = betterproto.message_field(
        4
    )
    slot_list: List["WidgetSlotData"] = betterproto.message_field(14)
    background_active_widget_list: List[int] = betterproto.uint32_field(5)
    anchor_point_list: List["AnchorPointData"] = betterproto.message_field(11)
    weather_wizard_data: "WeatherWizardData" = betterproto.message_field(13)
    next_anchor_point_usable_time: int = betterproto.uint32_field(15)
    client_collector_data_list: List["ClientCollectorData"] = betterproto.message_field(
        7
    )
    cool_down_group_data_list: List["WidgetCoolDownData"] = betterproto.message_field(6)
    oneoff_gather_point_detector_data_list: List[
        "DetectorData"
    ] = betterproto.message_field(8)
    lunch_box_data: "LunchBoxData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Amnjikmpmhn(betterproto.Message):
    henpegmkbie: "BreakoutAction" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class AnchorPointData(betterproto.Message):
    scene_id: int = betterproto.uint32_field(15)
    rot: "Vector" = betterproto.message_field(13)
    end_time: int = betterproto.uint32_field(10)
    pos: "Vector" = betterproto.message_field(12)
    anchor_point_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AnchorPointDataNotify(betterproto.Message):
    next_usable_time: int = betterproto.uint32_field(10)
    anchor_point_list: List["AnchorPointData"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class AnchorPointOpReq(betterproto.Message):
    anchor_point_id: int = betterproto.uint32_field(15)
    anchor_point_op_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AnchorPointOpRsp(betterproto.Message):
    anchor_point_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(4)
    anchor_point_op_type: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AnimatorForceSetAirMoveNotify(betterproto.Message):
    in_air_move: bool = betterproto.bool_field(1)
    forward_type: "ForwardType" = betterproto.enum_field(11)
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AnimatorParameterValueInfo(betterproto.Message):
    para_type: int = betterproto.uint32_field(1)
    int_val: int = betterproto.int32_field(2, group="para_val")
    float_val: float = betterproto.float_field(3, group="para_val")
    bool_val: bool = betterproto.bool_field(4, group="para_val")


@dataclass(eq=False, repr=False)
class AnimatorParameterValueInfoPair(betterproto.Message):
    name_id: int = betterproto.int32_field(1)
    animator_para: "AnimatorParameterValueInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AnnounceData(betterproto.Message):
    config_id: int = betterproto.uint32_field(9)
    center_system_frequency: int = betterproto.uint32_field(14)
    end_time: int = betterproto.uint32_field(5)
    begin_time: int = betterproto.uint32_field(4)
    count_down_text: str = betterproto.string_field(7)
    is_center_system_last_5_every_minutes: bool = betterproto.bool_field(12)
    dungeon_confirm_text: str = betterproto.string_field(2)
    count_down_frequency: int = betterproto.uint32_field(8)
    center_system_text: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class Anokfblcggm(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    hoogfkfbckk: bool = betterproto.bool_field(3)
    lpjicbgaldo: List["Pdopjigdnpf"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AntiAddictNotify(betterproto.Message):
    msg: str = betterproto.string_field(3)
    level: str = betterproto.string_field(14)
    msg_type: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class Aphnjhlaanl(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    pbahnigkopb: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AranaraCollectionDataNotify(betterproto.Message):
    collection_suite_list: List["AranaraCollectionSuite"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class AranaraCollectionSuite(betterproto.Message):
    collection_id_state_map: Dict[
        int, "AranaraCollectionState"
    ] = betterproto.map_field(8, betterproto.TYPE_UINT32, betterproto.TYPE_ENUM)
    collection_type: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AreaPlayInfoNotify(betterproto.Message):
    detail_play_type: int = betterproto.uint32_field(12)
    area_play_type: "AreaPlayType" = betterproto.enum_field(9)


@dataclass(eq=False, repr=False)
class ArenaChallengeActivityDetailInfo(betterproto.Message):
    level_open_time_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    world_level: int = betterproto.uint32_field(6)
    level_list: List["ArenaChallengeMonsterLevel"] = betterproto.message_field(7)
    is_finish_any_level: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ArenaChallengeChildChallengeInfo(betterproto.Message):
    is_success: bool = betterproto.bool_field(15)
    is_settled: bool = betterproto.bool_field(4)
    challenge_type: int = betterproto.uint32_field(5)
    challenge_index: int = betterproto.uint32_field(8)
    challenge_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ArenaChallengeFinishNotify(betterproto.Message):
    is_success: bool = betterproto.bool_field(7)
    child_challenge_list: List[
        "ArenaChallengeChildChallengeInfo"
    ] = betterproto.message_field(6)
    unk3300_dbhaghmmlai: int = betterproto.uint32_field(15)
    unk3300_fdfnflakong: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ArenaChallengeInfo(betterproto.Message):
    level_open_time_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    world_level: int = betterproto.uint32_field(6)
    level_list: List["ArenaChallengeMonsterLevel"] = betterproto.message_field(7)
    is_finish_any_level: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ArenaChallengeMonsterLevel(betterproto.Message):
    unk3300_fdfnflakong: int = betterproto.uint32_field(13)
    unk3300_dbhaghmmlai: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AskAddFriendNotify(betterproto.Message):
    target_friend_brief: "FriendBrief" = betterproto.message_field(7)
    target_uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AskAddFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AskAddFriendRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    param: int = betterproto.uint32_field(13)
    target_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AssociateInferenceWordReq(betterproto.Message):
    unk3300_epmghelecnh: int = betterproto.uint32_field(11)
    page_id: int = betterproto.uint32_field(3)
    unk3300_fdglbljokok: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AssociateInferenceWordRsp(betterproto.Message):
    unk3300_fdglbljokok: int = betterproto.uint32_field(14)
    unk3300_epmghelecnh: int = betterproto.uint32_field(5)
    page_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class AsterInfo(betterproto.Message):
    aster_large: "AsterLargeDetailInfo" = betterproto.message_field(2)
    unk3300_kfdgffpjgjc: int = betterproto.uint32_field(8)
    is_special_reward_taken: bool = betterproto.bool_field(9)
    aster_little: "AsterLittleDetailInfo" = betterproto.message_field(3)
    content_close_time: int = betterproto.uint32_field(14)
    unk3300_dchbfejnbhp: int = betterproto.uint32_field(10)
    aster_mid: "AsterMidDetailInfo" = betterproto.message_field(4)
    aster_progress: "AsterProgressDetailInfo" = betterproto.message_field(7)
    left_monsters: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class AsterLargeDetailInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(3)
    begin_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AsterLargeInfoNotify(betterproto.Message):
    info: "AsterLargeDetailInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class AsterLittleDetailInfo(betterproto.Message):
    stage_begin_time: int = betterproto.uint32_field(13)
    stage_state: "AsterLittleStageState" = betterproto.enum_field(9)
    stage_id: int = betterproto.uint32_field(6)
    begin_time: int = betterproto.uint32_field(11)
    is_open: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class AsterLittleInfoNotify(betterproto.Message):
    info: "AsterLittleDetailInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class AsterMidCampInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(10)
    camp_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AsterMidCampInfoNotify(betterproto.Message):
    camp_list: List["AsterMidCampInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AsterMidDetailInfo(betterproto.Message):
    camp_list: List["AsterMidCampInfo"] = betterproto.message_field(2)
    is_open: bool = betterproto.bool_field(10)
    begin_time: int = betterproto.uint32_field(13)
    collect_count: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AsterMidInfoNotify(betterproto.Message):
    info: "AsterMidDetailInfo" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class AsterMiscInfoNotify(betterproto.Message):
    unk3300_kfdgffpjgjc: int = betterproto.uint32_field(7)
    unk3300_dchbfejnbhp: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AsterProgressDetailInfo(betterproto.Message):
    last_auto_add_time: int = betterproto.uint32_field(14)
    count: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AsterProgressInfoNotify(betterproto.Message):
    info: "AsterProgressDetailInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class AttackHitEffectResult(betterproto.Message):
    unk3300_klngdammfif: int = betterproto.uint32_field(3)
    air_strength: float = betterproto.float_field(6)
    unk3300_lckecjckkjk: int = betterproto.uint32_field(13)
    hit_halt_time: float = betterproto.float_field(15)
    retreat_strength: float = betterproto.float_field(4)
    hit_halt_time_scale: float = betterproto.float_field(7)


@dataclass(eq=False, repr=False)
class AttackResult(betterproto.Message):
    endure_break: int = betterproto.uint32_field(6)
    unk3300_balcphmfibc: int = betterproto.uint32_field(1940)
    damage: float = betterproto.float_field(12)
    is_crit: bool = betterproto.bool_field(9)
    hit_eff_result: "AttackHitEffectResult" = betterproto.message_field(5)
    element_durability_attenuation: float = betterproto.float_field(1333)
    damage_shield: float = betterproto.float_field(198)
    unk3300_domaopgphmd: bool = betterproto.bool_field(1698)
    element_type: int = betterproto.uint32_field(1)
    target_type: int = betterproto.uint32_field(346)
    unk3300_mgimjgmipld: bool = betterproto.bool_field(531)
    critical_rand: int = betterproto.uint32_field(1576)
    ability_identifier: "AbilityIdentifier" = betterproto.message_field(2)
    hit_collision: "HitCollision" = betterproto.message_field(14)
    attack_timestamp_ms: int = betterproto.uint32_field(1829)
    attacker_id: int = betterproto.uint32_field(4)
    anim_event_id: str = betterproto.string_field(11)
    hit_retreat_angle_compat: int = betterproto.int32_field(15)
    unk3300_jmjhgjcaobh: int = betterproto.uint32_field(55)
    defense_id: int = betterproto.uint32_field(13)
    is_resist_text: bool = betterproto.bool_field(555)
    attack_count: int = betterproto.uint32_field(1593)
    resolved_dir: "Vector" = betterproto.message_field(8)
    hit_pos_type: int = betterproto.uint32_field(7)
    hashed_anim_event_id: int = betterproto.uint32_field(2009)
    unk3300_kpkaecbfabp: int = betterproto.uint32_field(1569)
    endure_delta: float = betterproto.float_field(1169)
    unk3300_gbpjceljkja: int = betterproto.uint32_field(701)
    element_amplify_rate: float = betterproto.float_field(1858)
    unk3300_abjjnnnkgbb: int = betterproto.uint32_field(888)


@dataclass(eq=False, repr=False)
class AuthorityChange(betterproto.Message):
    authority_peer_id: int = betterproto.uint32_field(2)
    entity_authority_info: "EntityAuthorityInfo" = betterproto.message_field(4)
    entity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class Avatar(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    peer_id: int = betterproto.uint32_field(4)
    equip_id_list: List[int] = betterproto.uint32_field(5)
    skill_depot_id: int = betterproto.uint32_field(6)
    talent_id_list: List[int] = betterproto.uint32_field(7)
    weapon: "SceneWeaponInfo" = betterproto.message_field(8)
    reliquary_list: List["SceneReliquaryInfo"] = betterproto.message_field(9)
    core_proud_skill_level: int = betterproto.uint32_field(11)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(12)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    server_buff_list: List["ServerBuff"] = betterproto.message_field(15)
    team_resonance_list: List[int] = betterproto.uint32_field(16)
    wearing_flycloak_id: int = betterproto.uint32_field(17)
    born_time: int = betterproto.uint32_field(18)
    costume_id: int = betterproto.uint32_field(19)
    cur_vehicle_info: "CurVehicleInfo" = betterproto.message_field(20)
    excel_info: "AvatarExcelInfo" = betterproto.message_field(21)
    anim_hash: int = betterproto.uint32_field(22)


@dataclass(eq=False, repr=False)
class AvatarAddNotify(betterproto.Message):
    avatar: "AvatarInfo" = betterproto.message_field(8)
    is_in_team: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class AvatarBuffAddNotify(betterproto.Message):
    buff_id: int = betterproto.uint32_field(15)
    avatar_guid: int = betterproto.uint64_field(7)


@dataclass(eq=False, repr=False)
class AvatarBuffDelNotify(betterproto.Message):
    buff_id: int = betterproto.uint32_field(15)
    avatar_guid: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class AvatarCardChangeReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(11)
    avatar_guid: int = betterproto.uint64_field(1)
    count: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AvatarCardChangeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class AvatarChangeAnimHashReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(2)
    anim_hash: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AvatarChangeAnimHashRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    anim_hash: int = betterproto.uint32_field(9)
    avatar_guid: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class AvatarChangeCostumeNotify(betterproto.Message):
    entity_info: "SceneEntityInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class AvatarChangeCostumeReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(4)
    costume_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AvatarChangeCostumeRsp(betterproto.Message):
    costume_id: int = betterproto.uint32_field(15)
    avatar_guid: int = betterproto.uint64_field(5)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class AvatarChangeElementTypeReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(8)
    area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarChangeElementTypeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class AvatarDataNotify(betterproto.Message):
    choose_avatar_guid: int = betterproto.uint64_field(4)
    owned_costume_list: List[int] = betterproto.uint32_field(15)
    avatar_list: List["AvatarInfo"] = betterproto.message_field(8)
    cur_avatar_team_id: int = betterproto.uint32_field(5)
    avatar_team_map: Dict[int, "AvatarTeam"] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    owned_flycloak_list: List[int] = betterproto.uint32_field(2)
    avatar_rename_list: List["AvatarRenameInfo"] = betterproto.message_field(7)
    backup_avatar_team_order_list: List[int] = betterproto.uint32_field(12)
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class AvatarDelNotify(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class AvatarDieAnimationEndReq(betterproto.Message):
    die_guid: int = betterproto.uint64_field(7)
    skill_id: int = betterproto.uint32_field(4)
    reborn_pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class AvatarDieAnimationEndRsp(betterproto.Message):
    die_guid: int = betterproto.uint64_field(3)
    skill_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class AvatarEnterElementViewNotify(betterproto.Message):
    is_triggered: bool = betterproto.bool_field(6)
    avatar_entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarEnterSceneInfo(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(8)
    weapon_entity_id: int = betterproto.uint32_field(13)
    avatar_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(1)
    buff_id_list: List[int] = betterproto.uint32_field(7)
    avatar_entity_id: int = betterproto.uint32_field(10)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(4)
    weapon_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(11)
    weapon_guid: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class AvatarEquipAffixInfo(betterproto.Message):
    equip_affix_id: int = betterproto.uint32_field(1)
    left_cd_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarEquipAffixStartNotify(betterproto.Message):
    equip_affix_info: "AvatarEquipAffixInfo" = betterproto.message_field(5)
    avatar_guid: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class AvatarEquipChangeNotify(betterproto.Message):
    item_id: int = betterproto.uint32_field(2)
    equip_guid: int = betterproto.uint64_field(11)
    equip_type: int = betterproto.uint32_field(12)
    reliquary: "SceneReliquaryInfo" = betterproto.message_field(13)
    avatar_guid: int = betterproto.uint64_field(15)
    weapon: "SceneWeaponInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class AvatarExcelInfo(betterproto.Message):
    prefab_path_hash: int = betterproto.uint64_field(1)
    prefab_path_remote_hash: int = betterproto.uint64_field(2)
    controller_path_hash: int = betterproto.uint64_field(3)
    controller_path_remote_hash: int = betterproto.uint64_field(4)
    combat_config_hash: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class AvatarExpeditionAllDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AvatarExpeditionAllDataRsp(betterproto.Message):
    expedition_count_limit: int = betterproto.uint32_field(12)
    open_expedition_list: List[int] = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(4)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        10, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionCallBackReq(betterproto.Message):
    avatar_guid: List[int] = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class AvatarExpeditionCallBackRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        7, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionDataNotify(betterproto.Message):
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        4, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionGetRewardReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class AvatarExpeditionGetRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    extra_item_list: List["ItemParam"] = betterproto.message_field(10)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        4, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )
    item_list: List["ItemParam"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class AvatarExpeditionInfo(betterproto.Message):
    state: "AvatarExpeditionState" = betterproto.enum_field(1)
    exp_id: int = betterproto.uint32_field(2)
    hour_time: int = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(4)
    shorten_ratio: float = betterproto.float_field(5)


@dataclass(eq=False, repr=False)
class AvatarExpeditionStartReq(betterproto.Message):
    hour_time: int = betterproto.uint32_field(12)
    avatar_guid: int = betterproto.uint64_field(8)
    exp_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AvatarExpeditionStartRsp(betterproto.Message):
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        7, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class AvatarFetterDataNotify(betterproto.Message):
    fetter_info_map: Dict[int, "AvatarFetterInfo"] = betterproto.map_field(
        11, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarFetterInfo(betterproto.Message):
    exp_number: int = betterproto.uint32_field(1)
    exp_level: int = betterproto.uint32_field(2)
    open_id_list: List[int] = betterproto.uint32_field(3)
    finish_id_list: List[int] = betterproto.uint32_field(4)
    rewarded_fetter_level_list: List[int] = betterproto.uint32_field(5)
    fetter_list: List["FetterData"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class AvatarFetterLevelRewardReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(13)
    fetter_level: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AvatarFetterLevelRewardRsp(betterproto.Message):
    reward_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(14)
    fetter_level: int = betterproto.uint32_field(2)
    avatar_guid: int = betterproto.uint64_field(6)


@dataclass(eq=False, repr=False)
class AvatarFightPropNotify(betterproto.Message):
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    avatar_guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class AvatarFightPropUpdateNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(8)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class AvatarFlycloakChangeNotify(betterproto.Message):
    flycloak_id: int = betterproto.uint32_field(4)
    avatar_guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class AvatarFollowRouteNotify(betterproto.Message):
    start_scene_time_ms: int = betterproto.uint32_field(6)
    template_id: int = betterproto.uint32_field(2)
    client_params: str = betterproto.string_field(10)
    route: "Route" = betterproto.message_field(4)
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarGainCostumeNotify(betterproto.Message):
    costume_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AvatarGainFlycloakNotify(betterproto.Message):
    flycloak_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class AvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    life_state: int = betterproto.uint32_field(4)
    equip_guid_list: List[int] = betterproto.uint64_field(5)
    talent_id_list: List[int] = betterproto.uint32_field(6)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    trial_avatar_info: "TrialAvatarInfo" = betterproto.message_field(9)
    skill_map: Dict[int, "AvatarSkillInfo"] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    skill_depot_id: int = betterproto.uint32_field(11)
    fetter_info: "AvatarFetterInfo" = betterproto.message_field(12)
    core_proud_skill_level: int = betterproto.uint32_field(13)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(14)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    expedition_state: "AvatarExpeditionState" = betterproto.enum_field(16)
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        17, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_focus: bool = betterproto.bool_field(18)
    avatar_type: int = betterproto.uint32_field(19)
    team_resonance_list: List[int] = betterproto.uint32_field(20)
    wearing_flycloak_id: int = betterproto.uint32_field(21)
    equip_affix_list: List["AvatarEquipAffixInfo"] = betterproto.message_field(22)
    born_time: int = betterproto.uint32_field(23)
    pending_promote_reward_list: List[int] = betterproto.uint32_field(24)
    costume_id: int = betterproto.uint32_field(25)
    excel_info: "AvatarExcelInfo" = betterproto.message_field(26)
    anim_hash: int = betterproto.uint32_field(27)
    lejhmjbbjcp: "Pidfkdhmhka" = betterproto.message_field(28)


@dataclass(eq=False, repr=False)
class AvatarLifeStateChangeNotify(betterproto.Message):
    life_state: int = betterproto.uint32_field(8)
    move_reliable_seq: int = betterproto.uint32_field(10)
    die_type: "PlayerDieType" = betterproto.enum_field(1)
    attack_tag: str = betterproto.string_field(6)
    avatar_guid: int = betterproto.uint64_field(3)
    source_entity_id: int = betterproto.uint32_field(5)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AvatarPromoteGetRewardReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(8)
    promote_level: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AvatarPromoteGetRewardRsp(betterproto.Message):
    reward_id: int = betterproto.uint32_field(8)
    promote_level: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(12)
    avatar_guid: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class AvatarPromoteReq(betterproto.Message):
    guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class AvatarPromoteRsp(betterproto.Message):
    guid: int = betterproto.uint64_field(13)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class AvatarPropChangeReasonNotify(betterproto.Message):
    cur_value: float = betterproto.float_field(2)
    prop_type: int = betterproto.uint32_field(10)
    old_value: float = betterproto.float_field(4)
    reason: "PropChangeReason" = betterproto.enum_field(5)
    avatar_guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class AvatarPropNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(15)
    prop_map: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_INT64
    )


@dataclass(eq=False, repr=False)
class AvatarRenameInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    avatar_name: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class AvatarRenameInfoNotify(betterproto.Message):
    avatar_rename_list: List["AvatarRenameInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class AvatarSatiationData(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(5)
    finish_time: float = betterproto.float_field(15)
    penalty_finish_time: float = betterproto.float_field(12)


@dataclass(eq=False, repr=False)
class AvatarSatiationDataNotify(betterproto.Message):
    satiation_data_list: List["AvatarSatiationData"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class AvatarSkillChangeNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(4)
    entity_id: int = betterproto.uint32_field(12)
    avatar_skill_id: int = betterproto.uint32_field(1)
    skill_depot_id: int = betterproto.uint32_field(5)
    old_level: int = betterproto.uint32_field(6)
    cur_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarSkillDepotChangeNotify(betterproto.Message):
    talent_id_list: List[int] = betterproto.uint32_field(14)
    proud_skill_list: List[int] = betterproto.uint32_field(11)
    skill_depot_id: int = betterproto.uint32_field(8)
    entity_id: int = betterproto.uint32_field(3)
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    core_proud_skill_level: int = betterproto.uint32_field(10)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    avatar_guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class AvatarSkillInfo(betterproto.Message):
    pass_cd_time: int = betterproto.uint32_field(1)
    full_cd_time_list: List[int] = betterproto.uint32_field(2)
    max_charge_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarSkillInfoNotify(betterproto.Message):
    skill_map: Dict[int, "AvatarSkillInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class AvatarSkillMaxChargeCountNotify(betterproto.Message):
    skill_id: int = betterproto.uint32_field(3)
    avatar_guid: int = betterproto.uint64_field(7)
    max_charge_count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarSkillUpgradeReq(betterproto.Message):
    avatar_skill_id: int = betterproto.uint32_field(10)
    avatar_guid: int = betterproto.uint64_field(2)
    old_level: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AvatarSkillUpgradeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    cur_level: int = betterproto.uint32_field(2)
    avatar_skill_id: int = betterproto.uint32_field(15)
    avatar_guid: int = betterproto.uint64_field(7)
    old_level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarTeam(betterproto.Message):
    team_name: str = betterproto.string_field(11)
    avatar_guid_list: List[int] = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class AvatarTeamAllDataNotify(betterproto.Message):
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(15)
    backup_avatar_team_order_list: List[int] = betterproto.uint32_field(14)
    avatar_team_map: Dict[int, "AvatarTeam"] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarTeamResonanceInfo(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(10)
    del_team_resonance_id_list: List[int] = betterproto.uint32_field(8)
    entity_id: int = betterproto.uint32_field(15)
    add_team_resonance_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarTeamUpdateNotify(betterproto.Message):
    avatar_team_map: Dict[int, "AvatarTeam"] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class AvatarUnlockTalentNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(12)
    talent_id: int = betterproto.uint32_field(10)
    skill_depot_id: int = betterproto.uint32_field(15)
    entity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AvatarUpgradeReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(9)
    avatar_guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class AvatarUpgradeRsp(betterproto.Message):
    cur_fight_prop_map: Dict[int, float] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    avatar_guid: int = betterproto.uint64_field(8)
    old_fight_prop_map: Dict[int, float] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    old_level: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(13)
    cur_level: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AvatarWearFlycloakReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(13)
    flycloak_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AvatarWearFlycloakRsp(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(3)
    flycloak_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class BackMyWorldReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BackMyWorldRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class BackPlayCustomDungeonOfficialReq(betterproto.Message):
    room_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BackPlayCustomDungeonOfficialRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class BackRebornGalleryReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class BackRebornGalleryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    gallery_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BalloonGalleryInfo(betterproto.Message):
    record_list: List["HomeBalloonGalleryRecord"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class BalloonGallerySettleInfo(betterproto.Message):
    owner_uid: int = betterproto.uint32_field(5)
    hit_count: int = betterproto.uint32_field(3)
    reason: "GalleryStopReason" = betterproto.enum_field(15)
    score: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BalloonInfo(betterproto.Message):
    scene_player_balloon_info_map: Dict[
        int, "BalloonPlayerInfo"
    ] = betterproto.map_field(13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    end_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class BalloonPlayerInfo(betterproto.Message):
    combo_disable_time: int = betterproto.uint32_field(8)
    cur_score: int = betterproto.uint32_field(13)
    uid: int = betterproto.uint32_field(10)
    combo: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BalloonSettleInfo(betterproto.Message):
    shoot_count: int = betterproto.uint32_field(3)
    max_combo: int = betterproto.uint32_field(14)
    final_score: int = betterproto.uint32_field(1)
    uid: int = betterproto.uint32_field(11)
    player_info: "OnlinePlayerInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class BargainOfferPriceReq(betterproto.Message):
    bargain_id: int = betterproto.uint32_field(12)
    price: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class BargainOfferPriceRsp(betterproto.Message):
    bargain_result: "BargainResultType" = betterproto.enum_field(2)
    retcode: int = betterproto.int32_field(13)
    cur_mood: int = betterproto.int32_field(7)
    result_param: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class BargainSnapshot(betterproto.Message):
    unk3300_mhfdebobfne: int = betterproto.uint32_field(10)
    bargain_id: int = betterproto.uint32_field(7)
    cur_mood: int = betterproto.int32_field(13)
    unk3300_kocjelacjlm: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BargainStartNotify(betterproto.Message):
    bargain_id: int = betterproto.uint32_field(12)
    snapshot: "BargainSnapshot" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BargainTerminateNotify(betterproto.Message):
    bargain_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class BartenderActivityDetailInfo(betterproto.Message):
    unlock_task_list: List["BartenderTaskInfo"] = betterproto.message_field(15)
    is_develop_module_open: bool = betterproto.bool_field(10)
    unlock_item_list: List[int] = betterproto.uint32_field(8)
    unlock_formula_list: List[int] = betterproto.uint32_field(14)
    left_monsters: bool = betterproto.bool_field(2)
    unlock_level_list: List["BartenderLevelInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class BartenderCancelLevelReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BartenderCancelLevelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    level_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class BartenderCancelOrderReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class BartenderCancelOrderRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    quest_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class BartenderCompleteOrderReq(betterproto.Message):
    is_view_formula: bool = betterproto.bool_field(10)
    unk3300_nkmhhhhghif: int = betterproto.uint32_field(6)
    item_list: List["ItemParam"] = betterproto.message_field(8)
    unk3300_poegpfjlngb: int = betterproto.uint32_field(12)
    quest_id: int = betterproto.uint32_field(9)
    unk3300_lonhkjfdond: int = betterproto.uint32_field(15)
    optional_order_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class BartenderCompleteOrderRsp(betterproto.Message):
    affix_list: List[int] = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(15)
    quest_id: int = betterproto.uint32_field(6)
    finish_order_id: int = betterproto.uint32_field(7)
    is_new: bool = betterproto.bool_field(14)
    formula_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BartenderFinishLevelReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class BartenderFinishLevelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    level_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BartenderGetFormulaReq(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(4)
    quest_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BartenderGetFormulaRsp(betterproto.Message):
    is_new: bool = betterproto.bool_field(12)
    formula_id: int = betterproto.uint32_field(15)
    affix_list: List[int] = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class BartenderInfo(betterproto.Message):
    unlock_task_list: List["BartenderTaskInfo"] = betterproto.message_field(15)
    is_develop_module_open: bool = betterproto.bool_field(10)
    unlock_item_list: List[int] = betterproto.uint32_field(8)
    unlock_formula_list: List[int] = betterproto.uint32_field(14)
    left_monsters: bool = betterproto.bool_field(2)
    unlock_level_list: List["BartenderLevelInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class BartenderLevelInfo(betterproto.Message):
    is_finish: bool = betterproto.bool_field(13)
    max_score: int = betterproto.uint32_field(12)
    id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class BartenderLevelProgressNotify(betterproto.Message):
    level_id: int = betterproto.uint32_field(13)
    score: int = betterproto.uint32_field(3)
    is_new_record: bool = betterproto.bool_field(10)
    is_finish: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class BartenderStartLevelReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BartenderStartLevelRsp(betterproto.Message):
    order_list: List[int] = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(4)
    level_id: int = betterproto.uint32_field(14)
    time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BartenderTaskInfo(betterproto.Message):
    is_finish: bool = betterproto.bool_field(7)
    id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BatchBuyGoodsReq(betterproto.Message):
    buy_goods_list: List["BuyGoodsParam"] = betterproto.message_field(5)
    shop_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BatchBuyGoodsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    goods_list: List["ShopGoods"] = betterproto.message_field(11)
    shop_type: int = betterproto.uint32_field(14)
    buy_goods_list: List["BuyGoodsParam"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BattlePassAllDataNotify(betterproto.Message):
    have_cur_schedule: bool = betterproto.bool_field(6)
    cur_schedule: "BattlePassSchedule" = betterproto.message_field(15)
    mission_list: List["BattlePassMission"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BattlePassBuySuccNotify(betterproto.Message):
    unk3300_ijoikkdnkde: int = betterproto.uint32_field(11)
    unk3300_pjodfjkaflg: int = betterproto.uint32_field(6)
    schedule_id: int = betterproto.uint32_field(14)
    item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BattlePassCurScheduleUpdateNotify(betterproto.Message):
    have_cur_schedule: bool = betterproto.bool_field(5)
    cur_schedule: "BattlePassSchedule" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class BattlePassCycle(betterproto.Message):
    cycle_idx: int = betterproto.uint32_field(8)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class BattlePassMission(betterproto.Message):
    mission_id: int = betterproto.uint32_field(6)
    mission_type: int = betterproto.uint32_field(14)
    mission_status: "BattlePassMissionMissionStatus" = betterproto.enum_field(9)
    cur_progress: int = betterproto.uint32_field(11)
    reward_battle_pass_point: int = betterproto.uint32_field(10)
    total_progress: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BattlePassMissionDelNotify(betterproto.Message):
    del_mission_id_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class BattlePassMissionUpdateNotify(betterproto.Message):
    mission_list: List["BattlePassMission"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class BattlePassProduct(betterproto.Message):
    normal_product_id: str = betterproto.string_field(4)
    extra_product_id: str = betterproto.string_field(14)
    upgrade_product_id: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class BattlePassRewardTag(betterproto.Message):
    level: int = betterproto.uint32_field(8)
    unlock_status: "BattlePassUnlockStatus" = betterproto.enum_field(13)
    reward_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class BattlePassRewardTakeOption(betterproto.Message):
    tag: "BattlePassRewardTag" = betterproto.message_field(15)
    option_idx: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class BattlePassSchedule(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(11)
    level: int = betterproto.uint32_field(10)
    point: int = betterproto.uint32_field(7)
    cur_cycle: "BattlePassCycle" = betterproto.message_field(5)
    begin_time: int = betterproto.uint32_field(8)
    paid_platform_flags: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(14)
    is_extra_paid_reward_taken: bool = betterproto.bool_field(12)
    reward_taken_list: List["BattlePassRewardTag"] = betterproto.message_field(3)
    cur_cycle_points: int = betterproto.uint32_field(9)
    is_viewed: bool = betterproto.bool_field(4)
    unlock_status: "BattlePassUnlockStatus" = betterproto.enum_field(6)
    product_info: "BattlePassProduct" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class Bbkcglakcpm(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    daehjagbjbl: int = betterproto.int32_field(3)
    plkbejkcfai: "Noabgcfidld" = betterproto.enum_field(4)
    type: "Nhmkamgokdk" = betterproto.enum_field(5)
    nkgnchooned: str = betterproto.string_field(6)
    ggmggbnbpga: str = betterproto.string_field(2)
    kppiclokhkf: str = betterproto.string_field(7)
    eemaljenfdh: int = betterproto.int32_field(9)
    npaoooeccdm: str = betterproto.string_field(10)
    jkfdibhoggm: "Pohlfognpii" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class Bdfnlklgibi(betterproto.Message):
    value: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class Bdkpjamlncl(betterproto.Message):
    level_info_list: List["Mlbfndkniem"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class BeginCameraSceneLookNotify(betterproto.Message):
    unk3300_onbdmchfpdl: bool = betterproto.bool_field(2)
    unk3300_pieflaeggbi: bool = betterproto.bool_field(8)
    unk3300_njlbimjdfhj: bool = betterproto.bool_field(1)
    duration: float = betterproto.float_field(10)
    keep_rot_type: "KeepRotType" = betterproto.enum_field(14)
    unk3300_fjdfglnlmbn: "Vector" = betterproto.message_field(13)
    unk3300_fiolgcikflh: float = betterproto.float_field(5)
    unk3300_hfpchfnfjkp: float = betterproto.float_field(11)
    other_params: List[str] = betterproto.string_field(12)
    entity_id: int = betterproto.uint32_field(167)
    unk3300_odadmbbfpap: bool = betterproto.bool_field(4)
    unk3300_eelnoaichoj: bool = betterproto.bool_field(3)
    unk3300_kchkkbodncj: int = betterproto.uint32_field(1965)
    unk3300_dfpcmofonnk: bool = betterproto.bool_field(15)
    unk3300_hkkchcemjie: float = betterproto.float_field(2004)
    unk3300_ajeeneocfon: int = betterproto.uint32_field(106)
    unk3300_ppcidicmien: "Vector" = betterproto.message_field(7)
    unk3300_aaogbccnjaf: bool = betterproto.bool_field(644)
    unk3300_hclpggaoiac: float = betterproto.float_field(6)
    unk3300_ilmhdlhlkgj: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class BeginCameraSceneLookWithTemplateNotify(betterproto.Message):
    template_id: int = betterproto.uint32_field(9)
    unk3300_fjdfglnlmbn: "Vector" = betterproto.message_field(4)
    follow_type: "FollowType" = betterproto.enum_field(3)
    other_params: List[str] = betterproto.string_field(8)
    entity_id: int = betterproto.uint32_field(14)
    unk3300_ppcidicmien: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class Bfieojnajca(betterproto.Message):
    uid: int = betterproto.uint32_field(10)
    oiibnieamib: str = betterproto.string_field(4)
    token: str = betterproto.string_field(2)
    fecoacjadfm: str = betterproto.string_field(14)
    kcmpcninooj: "Dmiogbogieg" = betterproto.message_field(11)
    gkpgobnbfce: "Anokfblcggm" = betterproto.message_field(7)
    lang: "Pkgiaobkfdc" = betterproto.enum_field(1)
    timestamp: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class Bgadcceegao(betterproto.Message):
    fhkoemgadhe: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class Bgaompjljdp(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(1)
    challenge_type: int = betterproto.uint32_field(2)
    param_list: List[int] = betterproto.uint32_field(3)
    progress: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class Bgpgpmljnlp(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    daehjagbjbl: int = betterproto.int32_field(2)
    jkfdibhoggm: List["Pldkichaheb"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BigTalentPointConvertReq(betterproto.Message):
    item_guid_list: List[int] = betterproto.uint64_field(5)
    avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class BigTalentPointConvertRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    avatar_guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class Birthday(betterproto.Message):
    month: int = betterproto.uint32_field(1)
    day: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Bjdomlgailm(betterproto.Message):
    mlonppbojpp: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class Bjgdbmmednk(betterproto.Message):
    face_dir: "Vector" = betterproto.message_field(3)
    velocity: "Vector" = betterproto.message_field(7)
    entity_id: int = betterproto.uint32_field(6)
    pos: "Vector" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class Bkjpmfgndae(betterproto.Message):
    eiemljpbfin: "AbilityAppliedAbility" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class BlessingAcceptAllGivePicReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BlessingAcceptAllGivePicRsp(betterproto.Message):
    accept_pic_num_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    accept_index_list: List[int] = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class BlessingAcceptGivePicReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BlessingAcceptGivePicRsp(betterproto.Message):
    pic_id: int = betterproto.uint32_field(12)
    index: int = betterproto.uint32_field(13)
    uid: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class BlessingActivityDetailInfo(betterproto.Message):
    left_monsters: bool = betterproto.bool_field(5)
    content_close_time: int = betterproto.uint32_field(11)
    cur_day_scan_num: int = betterproto.uint32_field(12)
    unk3300_inohlelboam: int = betterproto.uint32_field(15)
    unk3300_jladhekjpbp: int = betterproto.uint32_field(9)
    pic_num_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    next_refresh_time: int = betterproto.uint32_field(14)
    is_activated: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class BlessingFriendPicData(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(2)
    profile_picture: "ProfilePicture" = betterproto.message_field(4)
    nickname: str = betterproto.string_field(5)
    signature: str = betterproto.string_field(6)
    pic_num_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    remark_name: str = betterproto.string_field(3)
    uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class BlessingGetAllRecvPicRecordListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BlessingGetAllRecvPicRecordListRsp(betterproto.Message):
    recv_pic_record_list: List["BlessingRecvPicRecord"] = betterproto.message_field(9)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class BlessingGetFriendPicListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BlessingGetFriendPicListRsp(betterproto.Message):
    friend_pic_data_list: List["BlessingFriendPicData"] = betterproto.message_field(12)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class BlessingGiveFriendPicReq(betterproto.Message):
    uid: int = betterproto.uint32_field(9)
    pic_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class BlessingGiveFriendPicRsp(betterproto.Message):
    uid: int = betterproto.uint32_field(5)
    pic_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class BlessingInfo(betterproto.Message):
    left_monsters: bool = betterproto.bool_field(5)
    content_close_time: int = betterproto.uint32_field(11)
    cur_day_scan_num: int = betterproto.uint32_field(12)
    unk3300_inohlelboam: int = betterproto.uint32_field(15)
    unk3300_jladhekjpbp: int = betterproto.uint32_field(9)
    pic_num_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    next_refresh_time: int = betterproto.uint32_field(14)
    is_activated: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class BlessingRecvFriendPicNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(15)
    pic_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class BlessingRecvPicRecord(betterproto.Message):
    profile_picture: "ProfilePicture" = betterproto.message_field(11)
    signature: str = betterproto.string_field(10)
    avatar_id: int = betterproto.uint32_field(8)
    uid: int = betterproto.uint32_field(5)
    index: int = betterproto.uint32_field(1)
    remark_name: str = betterproto.string_field(14)
    pic_id: int = betterproto.uint32_field(2)
    nickname: str = betterproto.string_field(12)
    is_recv: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class BlessingRedeemRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BlessingRedeemRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    pic_num_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class BlessingScanReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BlessingScanRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    cur_day_scan_num: int = betterproto.uint32_field(4)
    scan_pic_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class BlitzRushInfo(betterproto.Message):
    stage_list: List["BlitzRushStage"] = betterproto.message_field(11)
    content_close_time: int = betterproto.uint32_field(1)
    parkour_level_info_list: List["ParkourLevelInfo"] = betterproto.message_field(6)
    left_monsters: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class BlitzRushParkourRestartReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(10)
    schedule_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class BlitzRushParkourRestartRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(2)
    group_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class BlitzRushStage(betterproto.Message):
    open_time: int = betterproto.uint32_field(14)
    is_open: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class BlockInfo(betterproto.Message):
    block_id: int = betterproto.uint32_field(1)
    data_version: int = betterproto.uint32_field(2)
    bin_data: bytes = betterproto.bytes_field(3)
    is_dirty: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class BlossomBriefInfo(betterproto.Message):
    is_guide_opened: bool = betterproto.bool_field(6)
    resin: int = betterproto.uint32_field(3)
    pos: "Vector" = betterproto.message_field(9)
    scene_id: int = betterproto.uint32_field(13)
    state: int = betterproto.uint32_field(10)
    city_id: int = betterproto.uint32_field(8)
    reward_id: int = betterproto.uint32_field(11)
    circle_camp_id: int = betterproto.uint32_field(2)
    monster_level: int = betterproto.uint32_field(15)
    refresh_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class BlossomBriefInfoNotify(betterproto.Message):
    brief_info_list: List["BlossomBriefInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class BlossomChestCreateNotify(betterproto.Message):
    circle_camp_id: int = betterproto.uint32_field(9)
    refresh_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BlossomChestInfo(betterproto.Message):
    resin: int = betterproto.uint32_field(1)
    qualify_uid_list: List[int] = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    dead_time: int = betterproto.uint32_field(4)
    blossom_refresh_type: int = betterproto.uint32_field(5)
    refresh_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BlossomChestInfoNotify(betterproto.Message):
    blossom_chest_info: "BlossomChestInfo" = betterproto.message_field(5)
    entity_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BlossomScheduleInfo(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(6)
    state: int = betterproto.uint32_field(9)
    circle_camp_id: int = betterproto.uint32_field(1)
    finish_progress: int = betterproto.uint32_field(12)
    round: int = betterproto.uint32_field(14)
    progress: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class Bmapkbnnagd(betterproto.Message):
    mpfmoiobaad: "Vector" = betterproto.message_field(2)
    eknhofiihcl: "Vector" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class Bmipnmkjmhn(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BoatMultiInfo(betterproto.Message):
    player_data: List["Iplhknlpphd"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class Boiphjcflbk(betterproto.Message):
    impfndpedoa: float = betterproto.float_field(11)
    attack_target_id: int = betterproto.uint32_field(15)
    gjnmmadghcn: float = betterproto.float_field(6)
    hdbonehdhll: List["Nfhbhhjajda"] = betterproto.message_field(1)
    dladdidhjbc: float = betterproto.float_field(3)
    ogigbahpfog: float = betterproto.float_field(14)
    dlhfjjbaggg: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    nnlkpdinema: int = betterproto.uint32_field(7)
    kldlcmkpnaa: int = betterproto.uint32_field(4)
    akgfenlfekh: int = betterproto.uint32_field(9)
    egfkffbealf: int = betterproto.uint32_field(5)
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BonusActivityInfo(betterproto.Message):
    bonus_activity_id: int = betterproto.uint32_field(5)
    state: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BonusActivityInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BonusActivityInfoRsp(betterproto.Message):
    bonus_activity_info_list: List["BonusActivityInfo"] = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class BonusActivityUpdateNotify(betterproto.Message):
    bonus_activity_info_list: List["BonusActivityInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class BonusInfo(betterproto.Message):
    left_bonus_count: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BossChest(betterproto.Message):
    monster_config_id: int = betterproto.uint32_field(1)
    resin: int = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    qualify_uid_list: List[int] = betterproto.uint32_field(4)
    uid_discount_map: Dict[int, "WeeklyBossResinDiscountInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class BossChestActivateNotify(betterproto.Message):
    qualify_uid_list: List[int] = betterproto.uint32_field(6)
    entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BossChestInfo(betterproto.Message):
    monster_config_id: int = betterproto.uint32_field(1)
    resin: int = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    qualify_uid_list: List[int] = betterproto.uint32_field(4)
    uid_discount_map: Dict[int, "WeeklyBossResinDiscountInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class BossSettleInfo(betterproto.Message):
    stat_info_list: List["FleurFairPlayerStatInfo"] = betterproto.message_field(3)
    reward_token_num: int = betterproto.uint32_field(4)
    energy: int = betterproto.uint32_field(8)
    cost_time: int = betterproto.uint32_field(2)
    is_success: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class BounceConjuringActivityDetailInfo(betterproto.Message):
    content_close_time: int = betterproto.uint32_field(1)
    left_monsters: bool = betterproto.bool_field(6)
    chapter_info_list: List["BounceConjuringChapterInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class BounceConjuringChapterInfo(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(2)
    best_score: int = betterproto.uint32_field(3)
    open_time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class BounceConjuringGallerySettleInfo(betterproto.Message):
    unk3300_nkgfklgdfac: int = betterproto.uint32_field(8)
    damage: float = betterproto.float_field(5)
    unk3300_pelhbjdmkae: int = betterproto.uint32_field(9)
    score: int = betterproto.uint32_field(7)
    player_info: "OnlinePlayerInfo" = betterproto.message_field(11)
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(15)
    unk3300_cngobofdeoe: int = betterproto.uint32_field(2)
    gadget_count_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    unk3300_bjhcdknfdfn: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BounceConjuringInfo(betterproto.Message):
    total_destroyed_machine_count: int = betterproto.uint32_field(5)
    total_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BounceConjuringSettleNotify(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(6)
    settle_info_map: Dict[
        int, "BounceConjuringGallerySettleInfo"
    ] = betterproto.map_field(7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    chapter_id: int = betterproto.uint32_field(11)
    total_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BoxInfo(betterproto.Message):
    id: int = betterproto.int32_field(1)
    config_id: int = betterproto.uint32_field(2)
    center: "Vector" = betterproto.message_field(3)
    extents: "Vector" = betterproto.message_field(4)
    up: "Vector" = betterproto.message_field(5)
    forward: "Vector" = betterproto.message_field(6)
    right: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class BreakoutAction(betterproto.Message):
    action_type: "BreakoutActionType" = betterproto.enum_field(1)
    client_game_time: int = betterproto.uint64_field(2)
    server_game_time: int = betterproto.uint64_field(3)
    mbfjjacbmck: bool = betterproto.bool_field(4)
    gddolpoemjk: int = betterproto.uint32_field(5)
    joandihiadc: int = betterproto.uint32_field(6)
    pos: "BreakoutVector2" = betterproto.message_field(7)
    mjehpphliia: "BreakoutVector2" = betterproto.message_field(8)
    speed: int = betterproto.int32_field(9)
    peer_id: int = betterproto.uint32_field(10)
    element_type: int = betterproto.uint32_field(11)
    inhflokdoal: int = betterproto.uint32_field(12)
    apiembahlab: int = betterproto.uint32_field(13)
    mhkdmdjeaan: bool = betterproto.bool_field(14)
    cjegmomlbck: "BreakoutVector2" = betterproto.message_field(15)
    idngdpalicj: int = betterproto.uint32_field(16)
    offset: int = betterproto.int32_field(17)
    lccmdkibdpf: int = betterproto.uint64_field(18)


@dataclass(eq=False, repr=False)
class BreakoutBrickInfo(betterproto.Message):
    cpoenmafigh: int = betterproto.uint32_field(1)
    element_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BreakoutElementReactionCounter(betterproto.Message):
    aknhdghiblg: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BreakoutPhysicalObject(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    index: int = betterproto.uint32_field(2)
    is_active: bool = betterproto.bool_field(3)
    pos: "BreakoutVector2" = betterproto.message_field(4)
    mjehpphliia: "BreakoutVector2" = betterproto.message_field(5)
    speed: int = betterproto.int32_field(6)
    dlgpedplibk: int = betterproto.uint32_field(7)
    state: int = betterproto.uint32_field(8)
    element_type: int = betterproto.uint32_field(9)
    inhflokdoal: int = betterproto.uint32_field(10)
    dlijmbkhdif: List["BreakoutPhysicalObjectModifier"] = betterproto.message_field(11)
    abolecjpbhb: int = betterproto.int32_field(12)
    info_list: List["BreakoutBrickInfo"] = betterproto.message_field(13)
    hmgmjglmbpl: int = betterproto.uint32_field(14)
    apiembahlab: int = betterproto.uint32_field(15)
    offset: int = betterproto.int32_field(16)


@dataclass(eq=False, repr=False)
class BreakoutPhysicalObjectModifier(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    id: int = betterproto.uint32_field(2)
    param1: int = betterproto.int32_field(3)
    param2: int = betterproto.int32_field(4)
    param3: int = betterproto.int32_field(5)
    ondeciihanm: int = betterproto.int32_field(6)
    bcobaoidmmc: int = betterproto.int32_field(7)
    bcmmggaidek: int = betterproto.int32_field(8)
    dgbbbnffmlb: bool = betterproto.bool_field(9)
    duration: int = betterproto.int32_field(10)
    end_time: int = betterproto.int32_field(11)
    combo: int = betterproto.uint32_field(12)
    peer_id: int = betterproto.uint32_field(13)
    hichllhajdp: int = betterproto.uint32_field(14)
    level: int = betterproto.uint32_field(15)
    nfheenapfmf: int = betterproto.uint32_field(16)


@dataclass(eq=False, repr=False)
class BreakoutSnapShot(betterproto.Message):
    client_game_time: int = betterproto.uint64_field(1)
    server_game_time: int = betterproto.uint64_field(2)
    ball_list: List["BreakoutPhysicalObject"] = betterproto.message_field(3)
    physical_object_list: List["BreakoutPhysicalObject"] = betterproto.message_field(4)
    action_list: List["BreakoutAction"] = betterproto.message_field(5)
    wave_index: int = betterproto.uint32_field(6)
    is_finish: bool = betterproto.bool_field(7)
    score: int = betterproto.uint32_field(8)
    combo: int = betterproto.uint32_field(9)
    max_combo: int = betterproto.uint32_field(10)
    life_count: int = betterproto.uint32_field(11)
    wave_suite_index: int = betterproto.uint32_field(12)
    spawn_point_list: List["BreakoutSpawnPoint"] = betterproto.message_field(13)
    remaining_boss_hp: int = betterproto.uint32_field(14)
    brick_element_reaction_list: List[
        "BreakoutElementReactionCounter"
    ] = betterproto.message_field(15)
    ball_element_reaction_list: List[
        "BreakoutElementReactionCounter"
    ] = betterproto.message_field(16)
    uid_info_list: List["BreakoutSyncConnectUidInfo"] = betterproto.message_field(17)
    dynamic_object_list: List["BreakoutPhysicalObject"] = betterproto.message_field(18)
    id_index_list: List[int] = betterproto.uint32_field(19)
    raw_client_game_time: int = betterproto.int32_field(20)


@dataclass(eq=False, repr=False)
class BreakoutSpawnPoint(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    jkjacakbdch: int = betterproto.uint32_field(2)
    clnllfklpjc: List["BreakoutPhysicalObject"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BreakoutSyncConnectUidInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    skill_id_list: List[int] = betterproto.uint32_field(2)
    namghchjljl: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BreakoutVector2(betterproto.Message):
    x: int = betterproto.int32_field(1)
    y: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class BrickBreakerActivityStageInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    unk3300_ffkiedngngk: bool = betterproto.bool_field(12)
    unk3300_alogiknheim: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class BrickBreakerInfo(betterproto.Message):
    dungeon_level_info_list: List["BrickBreakerLevelInfo"] = betterproto.message_field(
        7
    )
    stage_info_list: List["BrickBreakerActivityStageInfo"] = betterproto.message_field(
        9
    )
    world_level_info_list: List["BrickBreakerLevelInfo"] = betterproto.message_field(3)
    skill_info_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class BrickBreakerLevelInfo(betterproto.Message):
    chosen_skill_list: List[int] = betterproto.uint32_field(12)
    level_id: int = betterproto.uint32_field(2)
    is_finish: bool = betterproto.bool_field(11)
    is_can_start: bool = betterproto.bool_field(1)
    max_score: int = betterproto.uint32_field(6)
    chosen_avatar_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BrickBreakerPlayerBattleInfo(betterproto.Message):
    skill_list: List[int] = betterproto.uint32_field(9)
    is_ready: bool = betterproto.bool_field(6)
    nickname: str = betterproto.string_field(15)
    is_changing: bool = betterproto.bool_field(14)
    costume_id: List[int] = betterproto.uint32_field(12)
    avatar_id: List[int] = betterproto.uint32_field(5)
    uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BrickBreakerPlayerReadyNotify(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class BrickBreakerPlayerSetAvatarNotify(betterproto.Message):
    costume_id_list: List[int] = betterproto.uint32_field(6)
    uid: int = betterproto.uint32_field(3)
    avatar_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BrickBreakerPlayerSetChangingNotify(betterproto.Message):
    is_changing: bool = betterproto.bool_field(1)
    uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class BrickBreakerPlayerSetSkillNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(12)
    skill_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class BrickBreakerQuitReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BrickBreakerQuitRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class BrickBreakerSelectAvatarReq(betterproto.Message):
    avatar_id: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BrickBreakerSelectAvatarRsp(betterproto.Message):
    avatar_id: List[int] = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class BrickBreakerSelectSkillReq(betterproto.Message):
    skill_id: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class BrickBreakerSelectSkillRsp(betterproto.Message):
    skill_id: List[int] = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class BrickBreakerSetChangingReq(betterproto.Message):
    is_changing: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class BrickBreakerSetChangingRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class BrickBreakerSetReadyReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BrickBreakerSetReadyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class BrickBreakerSettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(11)
    combo: int = betterproto.uint32_field(13)
    time: int = betterproto.uint32_field(3)
    update_skill_list: List["Uint32Pair"] = betterproto.message_field(8)
    score: int = betterproto.uint32_field(1)
    is_dungeon: bool = betterproto.bool_field(4)
    level_id: int = betterproto.uint32_field(5)
    reason: "SettleReason" = betterproto.enum_field(10)
    is_single_mode: bool = betterproto.bool_field(14)
    is_new_record: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class BrickBreakerStageInfo(betterproto.Message):
    level_id: int = betterproto.uint32_field(12)
    stage_type: "BrickBreakerStageType" = betterproto.enum_field(7)
    battle_info_list: List["BrickBreakerPlayerBattleInfo"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class BrickBreakerTwiceStartReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BrickBreakerTwiceStartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class BrokenFloorInfo(betterproto.Message):
    fall_count_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    end_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class BuildingInfo(betterproto.Message):
    building_id: int = betterproto.uint32_field(1)
    point_config_id: int = betterproto.uint32_field(2)
    cost: int = betterproto.uint32_field(3)
    refund: int = betterproto.uint32_field(5)
    owner_uid: int = betterproto.uint32_field(6)
    current_num: int = betterproto.uint32_field(7)
    max_num: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class BulletInfo(betterproto.Message):
    end_time: int = betterproto.uint32_field(8)
    hit_count_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class BundleInfo(betterproto.Message):
    famklmmklpj: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class BuoyantCombatDailyInfo(betterproto.Message):
    best_score: int = betterproto.uint32_field(12)
    start_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BuoyantCombatGallerySettleInfo(betterproto.Message):
    kill_special_monster_count: int = betterproto.uint32_field(4)
    gallery_id: int = betterproto.uint32_field(14)
    kill_monster_count: int = betterproto.uint32_field(10)
    unk3300_hlfhlpekoml: int = betterproto.uint32_field(9)
    gallery_level: int = betterproto.uint32_field(8)
    final_score: int = betterproto.uint32_field(6)
    unk3300_kpcjboogemg: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BuoyantCombatInfo(betterproto.Message):
    kill_monster_count: int = betterproto.uint32_field(3)
    kill_special_monster_count: int = betterproto.uint32_field(15)
    score: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class BuoyantCombatSettleInfo(betterproto.Message):
    settle_info: "BuoyantCombatGallerySettleInfo" = betterproto.message_field(9)
    is_new_record: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class BuoyantCombatSettleNotify(betterproto.Message):
    settle_info: "BuoyantCombatSettleInfo" = betterproto.message_field(5)
    gallery_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class BuyBattlePassLevelReq(betterproto.Message):
    buy_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BuyBattlePassLevelRsp(betterproto.Message):
    buy_level: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class BuyGoodsParam(betterproto.Message):
    goods: "ShopGoods" = betterproto.message_field(8)
    buy_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BuyGoodsReq(betterproto.Message):
    buy_count: int = betterproto.uint32_field(14)
    shop_type: int = betterproto.uint32_field(5)
    goods: "ShopGoods" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BuyGoodsRsp(betterproto.Message):
    buy_count: int = betterproto.uint32_field(2)
    goods: "ShopGoods" = betterproto.message_field(1)
    goods_list: List["ShopGoods"] = betterproto.message_field(7)
    retcode: int = betterproto.int32_field(5)
    shop_type: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class BuyResinReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BuyResinRsp(betterproto.Message):
    cur_value: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class Bytes(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class Cafapmpmbpo(betterproto.Message):
    chfncchhlii: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class CalcWeaponUpgradeReturnItemsReq(betterproto.Message):
    food_weapon_guid_list: List[int] = betterproto.uint64_field(8)
    item_param_list: List["ItemParam"] = betterproto.message_field(4)
    target_weapon_guid: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class CalcWeaponUpgradeReturnItemsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    target_weapon_guid: int = betterproto.uint64_field(9)
    item_param_list: List["ItemParam"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class CameraInfo(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class CancelCityReputationRequestReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(4)
    request_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CancelCityReputationRequestRsp(betterproto.Message):
    request_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(12)
    city_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CancelCoopTaskReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CancelCoopTaskRsp(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class CancelFinishParentQuestNotify(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CanUseSkillNotify(betterproto.Message):
    is_can_use_skill: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class CardProductRewardNotify(betterproto.Message):
    product_id: str = betterproto.string_field(9)
    hcoin: int = betterproto.uint32_field(6)
    remain_days: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CardUpdate(betterproto.Message):
    card: "GcgCard" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class CataLogFinishedGlobalWatcherAllDataNotify(betterproto.Message):
    finished_global_watcher_data_list: List[
        "CataLogGlobalWatcherFinishedData"
    ] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class CataLogGlobalWatcherFinishedData(betterproto.Message):
    catalog_type: int = betterproto.uint32_field(5)
    finished_global_watcher_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CataLogNewFinishedGlobalWatcherNotify(betterproto.Message):
    new_finished_global_watcher_data_list: List[
        "CataLogGlobalWatcherFinishedData"
    ] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class Cbniffcnoec(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    min_cost_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Cbppjaieokc(betterproto.Message):
    value: "AnimatorParameterValueInfoPair" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Cfbejccbial(betterproto.Message):
    jomaminoocj: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class Cgeeokkpkla(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChallengeBrief(betterproto.Message):
    cur_progress: int = betterproto.uint32_field(9)
    is_success: bool = betterproto.bool_field(5)
    challenge_index: int = betterproto.uint32_field(15)
    challenge_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChallengeDataNotify(betterproto.Message):
    param_index: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(11)
    challenge_index: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChallengeRecord(betterproto.Message):
    best_value: int = betterproto.uint32_field(2)
    challenge_index: int = betterproto.uint32_field(15)
    challenge_id: int = betterproto.uint32_field(3)
    challenge_record_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChallengeRecordNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(3)
    challenge_record_list: List["ChallengeRecord"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ChallnelerSlabInfo(betterproto.Message):
    buff_info: "ChannelerSlabBuffInfo" = betterproto.message_field(13)
    play_end_time: int = betterproto.uint32_field(7)
    loop_dungeon_stage_info: "ChannelerSlabLoopDungeonStageInfo" = (
        betterproto.message_field(4)
    )
    stage_list: List["ChannelerSlabChallengeStage"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ChangeAvatarReq(betterproto.Message):
    guid: int = betterproto.uint64_field(12)
    is_move: bool = betterproto.bool_field(10)
    move_pos: "Vector" = betterproto.message_field(3)
    skill_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChangeAvatarRsp(betterproto.Message):
    cur_guid: int = betterproto.uint64_field(14)
    skill_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class ChangeCustomDungeonRoomReq(betterproto.Message):
    room_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChangeCustomDungeonRoomRsp(betterproto.Message):
    room_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class ChangeGameTimeReq(betterproto.Message):
    extra_days: int = betterproto.uint32_field(7)
    is_force_set: bool = betterproto.bool_field(6)
    game_time: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ChangeGameTimeRsp(betterproto.Message):
    cur_game_time: int = betterproto.uint32_field(15)
    extra_days: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class ChangeMailStarNotify(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(11)
    is_star: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class ChangeMpTeamAvatarReq(betterproto.Message):
    cur_avatar_guid: int = betterproto.uint64_field(8)
    avatar_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ChangeMpTeamAvatarRsp(betterproto.Message):
    cur_avatar_guid: int = betterproto.uint64_field(12)
    avatar_guid_list: List[int] = betterproto.uint64_field(10)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ChangeServerGlobalValueNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChangeTeamNameReq(betterproto.Message):
    team_name: str = betterproto.string_field(8)
    team_id: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ChangeTeamNameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    team_name: str = betterproto.string_field(2)
    team_id: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class ChangeWidgetBackgroundActiveStateReq(betterproto.Message):
    material_id: int = betterproto.uint32_field(8)
    is_active: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class ChangeWidgetBackgroundActiveStateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    material_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ChangeWorldToSingleModeNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChangeWorldToSingleModeReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChangeWorldToSingleModeRsp(betterproto.Message):
    quit_mp_valid_time: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class ChannelerSlabActivityDetailInfo(betterproto.Message):
    buff_info: "ChannelerSlabBuffInfo" = betterproto.message_field(13)
    play_end_time: int = betterproto.uint32_field(7)
    loop_dungeon_stage_info: "ChannelerSlabLoopDungeonStageInfo" = (
        betterproto.message_field(4)
    )
    stage_list: List["ChannelerSlabChallengeStage"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ChannelerSlabAssistInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(11)
    avatar_id: int = betterproto.uint32_field(15)
    avatar_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChannelerSlabBuffInfo(betterproto.Message):
    unk3300_anenhmaadln: "ChannelerSlabBuffSchemeInfo" = betterproto.message_field(6)
    buff_id_list: List[int] = betterproto.uint32_field(10)
    unk3300_cdfliongkch: "ChannelerSlabBuffSchemeInfo" = betterproto.message_field(9)
    assist_info_list: List["ChannelerSlabAssistInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class ChannelerSlabBuffSchemeInfo(betterproto.Message):
    slot_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    unk3300_ncmddafneno: int = betterproto.uint32_field(1)
    unk3300_ckmnfocnmgl: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ChannelerSlabCamp(betterproto.Message):
    pos: "Vector" = betterproto.message_field(14)
    reward_id: int = betterproto.uint32_field(11)
    group_id: int = betterproto.uint32_field(5)
    bfgophiannc: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ChannelerSlabChallenge(betterproto.Message):
    camp_list: List["ChannelerSlabCamp"] = betterproto.message_field(15)
    active_camp_index: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ChannelerSlabChallengeStage(betterproto.Message):
    open_time: int = betterproto.uint32_field(10)
    challenge_list: List["ChannelerSlabChallenge"] = betterproto.message_field(12)
    dungeon_info: "ChannelerSlabOneoffDungeon" = betterproto.message_field(5)
    stage_id: int = betterproto.uint32_field(13)
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class ChannelerSlabLoopDungeonInfo(betterproto.Message):
    dungeon_index: int = betterproto.uint32_field(7)
    score: int = betterproto.uint32_field(4)
    is_open: bool = betterproto.bool_field(2)
    is_first_pass_reward_taken: bool = betterproto.bool_field(11)
    open_time: int = betterproto.uint32_field(3)
    last_condition_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChannelerSlabLoopDungeonResultInfo(betterproto.Message):
    challenge_max_score: int = betterproto.uint32_field(5)
    is_success: bool = betterproto.bool_field(13)
    is_in_time_limit: bool = betterproto.bool_field(6)
    challenge_score: int = betterproto.uint32_field(1)
    dungeon_index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChannelerSlabLoopDungeonStageInfo(betterproto.Message):
    dungeon_info_list: List["ChannelerSlabLoopDungeonInfo"] = betterproto.message_field(
        10
    )
    open_time: int = betterproto.uint32_field(12)
    last_difficulty_id: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(8)
    taken_reward_index_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ChannelerSlabOneoffDungeon(betterproto.Message):
    is_done: bool = betterproto.bool_field(13)
    reward_id: int = betterproto.uint32_field(12)
    dungeon_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ChannelerSlabStageActiveChallengeIndexNotify(betterproto.Message):
    active_camp_index: int = betterproto.uint32_field(6)
    challenge_index: int = betterproto.uint32_field(8)
    stage_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ChannelerSlabStageOneoffDungeonNotify(betterproto.Message):
    is_done: bool = betterproto.bool_field(4)
    stage_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ChannellerSlabCheckEnterLoopDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChannellerSlabCheckEnterLoopDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class ChannellerSlabEnterLoopDungeonReq(betterproto.Message):
    difficulty_id: int = betterproto.uint32_field(14)
    dungeon_index: int = betterproto.uint32_field(10)
    point_id: int = betterproto.uint32_field(3)
    condition_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChannellerSlabEnterLoopDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    dungeon_index: int = betterproto.uint32_field(6)
    condition_id_list: List[int] = betterproto.uint32_field(11)
    point_id: int = betterproto.uint32_field(2)
    difficulty_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonChallengeInfoNotify(betterproto.Message):
    difficulty_id: int = betterproto.uint32_field(9)
    challenge_score: int = betterproto.uint32_field(1)
    condition_id_list: List[int] = betterproto.uint32_field(10)
    dungeon_index: int = betterproto.uint32_field(3)
    gihlcdadndf: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonResultInfo(betterproto.Message):
    challenge_max_score: int = betterproto.uint32_field(5)
    is_success: bool = betterproto.bool_field(13)
    is_in_time_limit: bool = betterproto.bool_field(6)
    challenge_score: int = betterproto.uint32_field(1)
    dungeon_index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonSelectConditionReq(betterproto.Message):
    dungeon_index: int = betterproto.uint32_field(4)
    difficulty_id: int = betterproto.uint32_field(2)
    condition_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonSelectConditionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    condition_id_list: List[int] = betterproto.uint32_field(10)
    dungeon_index: int = betterproto.uint32_field(15)
    difficulty_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonTakeFirstPassRewardReq(betterproto.Message):
    dungeon_index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonTakeFirstPassRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    dungeon_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonTakeScoreRewardReq(betterproto.Message):
    reward_index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonTakeScoreRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    reward_index: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ChannellerSlabOneOffDungeonInfoNotify(betterproto.Message):
    gihlcdadndf: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ChannellerSlabOneOffDungeonInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChannellerSlabOneOffDungeonInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    gihlcdadndf: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ChannellerSlabSaveAssistInfoReq(betterproto.Message):
    assist_info_list: List["ChannelerSlabAssistInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class ChannellerSlabSaveAssistInfoRsp(betterproto.Message):
    assist_info_list: List["ChannelerSlabAssistInfo"] = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class ChannellerSlabTakeoffBuffReq(betterproto.Message):
    fhableimdgl: bool = betterproto.bool_field(8)
    buff_id: int = betterproto.uint32_field(10)
    slot_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ChannellerSlabTakeoffBuffRsp(betterproto.Message):
    slot_id: int = betterproto.uint32_field(2)
    fhableimdgl: bool = betterproto.bool_field(6)
    buff_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class ChannellerSlabWearBuffReq(betterproto.Message):
    fhableimdgl: bool = betterproto.bool_field(8)
    slot_id: int = betterproto.uint32_field(11)
    buff_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ChannellerSlabWearBuffRsp(betterproto.Message):
    buff_id: int = betterproto.uint32_field(4)
    slot_id: int = betterproto.uint32_field(5)
    fhableimdgl: bool = betterproto.bool_field(9)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class ChapterStateNotify(betterproto.Message):
    need_player_level: "ChapterStateNotifyNeedPlayerLevel" = betterproto.message_field(
        2
    )
    need_begin_time: "ChapterStateNotifyNeedBeginTime" = betterproto.message_field(9)
    chapter_state: "ChapterState" = betterproto.enum_field(13)
    chapter_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ChapterStateNotifyNeedPlayerLevel(betterproto.Message):
    config_need_player_level: int = betterproto.uint32_field(4)
    is_limit: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class ChapterStateNotifyNeedBeginTime(betterproto.Message):
    config_need_begin_time: int = betterproto.uint32_field(5)
    is_limit: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class CharAmusementAvatarInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(3)
    avatar_id_list: List[int] = betterproto.uint32_field(11)
    pmahgkplcgi: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CharAmusementDetailInfo(betterproto.Message):
    stage_data_list: List["CharAmusementStageData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CharAmusementInfo(betterproto.Message):
    avatar_info_list: List["CharAmusementAvatarInfo"] = betterproto.message_field(11)
    emdkpmhihmp: int = betterproto.uint32_field(3)
    level_id: int = betterproto.uint32_field(6)
    stage_id: int = betterproto.uint32_field(8)
    inllhgjoaco: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CharAmusementSettleNotify(betterproto.Message):
    finish_time: int = betterproto.uint32_field(9)
    is_new_record: bool = betterproto.bool_field(11)
    is_succ: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class CharAmusementStageData(betterproto.Message):
    finish_time: int = betterproto.uint32_field(11)
    stage_id: int = betterproto.uint32_field(12)
    is_open: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class CharDie(betterproto.Message):
    card_guid: int = betterproto.uint32_field(10)
    controller_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ChatChannelDataNotify(betterproto.Message):
    channel_list: List[int] = betterproto.uint32_field(12)
    channel_info_list: List["ChatChannelInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class ChatChannelInfo(betterproto.Message):
    channel_id: int = betterproto.uint32_field(4)
    is_shield: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ChatChannelInfoNotify(betterproto.Message):
    channel_info: "ChatChannelInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class ChatChannelShieldNotify(betterproto.Message):
    channel_id: int = betterproto.uint32_field(8)
    is_shield: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class ChatChannelUpdateNotify(betterproto.Message):
    is_create: bool = betterproto.bool_field(13)
    channel_info: "ChatChannelInfo" = betterproto.message_field(6)
    channel_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ChatEmojiCollectionData(betterproto.Message):
    emoji_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatHistoryNotify(betterproto.Message):
    channel_id: int = betterproto.uint32_field(14)
    chat_info: List["ChatInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class ChatInfo(betterproto.Message):
    is_read: bool = betterproto.bool_field(6)
    uid: int = betterproto.uint32_field(15)
    to_uid: int = betterproto.uint32_field(3)
    text: str = betterproto.string_field(1809, group="content")
    icon: int = betterproto.uint32_field(1168, group="content")
    system_hint: "ChatInfoSystemHint" = betterproto.message_field(523, group="content")
    sequence: int = betterproto.uint32_field(2)
    time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ChatInfoSystemHint(betterproto.Message):
    type: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CheckAddItemExceedLimitNotify(betterproto.Message):
    finished_challenge_id_list: List[int] = betterproto.uint32_field(15)
    exceeded_item_list: List[int] = betterproto.uint32_field(5)
    reason: int = betterproto.uint32_field(2)
    msg_type: "ItemExceedLimitMsgType" = betterproto.enum_field(7)
    is_drop: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class CheckGroupReplacedReq(betterproto.Message):
    group_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CheckGroupReplacedRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    replaced_group_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class CheckSegmentCrcNotify(betterproto.Message):
    info_list: List["SegmentInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class CheckSegmentCrcReq(betterproto.Message):
    info_list: List["SegmentCrcInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CheckUgcStateReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CheckUgcStateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class CheckUgcUpdateReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class CheckUgcUpdateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    ugc_type: "UgcType" = betterproto.enum_field(6)
    update_ugc_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ChessActivityDetailInfo(betterproto.Message):
    punish_over_time: int = betterproto.uint32_field(4)
    content_close_time: int = betterproto.uint32_field(10)
    player_info_map: int = betterproto.uint32_field(5)
    exp: int = betterproto.uint32_field(11)
    escaped_monsters: bool = betterproto.bool_field(6)
    selected_card_info_list: int = betterproto.uint32_field(8)
    level: int = betterproto.uint32_field(14)
    total_round: List[int] = betterproto.uint32_field(7)
    left_monsters: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class ChessCardInfo(betterproto.Message):
    card_id: int = betterproto.uint32_field(11)
    effect_stack: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ChessEntranceDetailInfo(betterproto.Message):
    info_list: List["ChessEntranceInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class ChessEntranceInfo(betterproto.Message):
    lhjhgbpjpkl: List["ChessMonsterInfo"] = betterproto.message_field(7)
    dfpedbghhma: int = betterproto.uint32_field(6)
    lfemigkpkdd: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ChessEscapedMonstersNotify(betterproto.Message):
    escaped_monsters: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ChessInfo(betterproto.Message):
    punish_over_time: int = betterproto.uint32_field(4)
    content_close_time: int = betterproto.uint32_field(10)
    player_info_map: int = betterproto.uint32_field(5)
    exp: int = betterproto.uint32_field(11)
    escaped_monsters: bool = betterproto.bool_field(6)
    selected_card_info_list: int = betterproto.uint32_field(8)
    level: int = betterproto.uint32_field(14)
    total_round: List[int] = betterproto.uint32_field(7)
    left_monsters: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class ChessLeftMonstersNotify(betterproto.Message):
    left_monsters: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChessManualRefreshCardsReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChessManualRefreshCardsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ChessMonsterInfo(betterproto.Message):
    monster_id: int = betterproto.uint32_field(9)
    level: int = betterproto.uint32_field(2)
    affix_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChessMysteryInfo(betterproto.Message):
    mdilcblhnao: List[int] = betterproto.uint32_field(2)
    lneiknbbcdd: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    fhmdalcaomp: Dict[int, "ChessEntranceDetailInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ChessNormalCardInfo(betterproto.Message):
    card_id: int = betterproto.uint32_field(6)
    is_attach_curse: bool = betterproto.bool_field(9)
    cost_points: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChessPickCardNotify(betterproto.Message):
    normal_card_info: "ChessNormalCardInfo" = betterproto.message_field(7)
    curse_card_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChessPickCardReq(betterproto.Message):
    card_index: int = betterproto.uint32_field(9)
    card_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChessPickCardRsp(betterproto.Message):
    card_index: int = betterproto.uint32_field(10)
    card_id: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class ChessPlayerInfo(betterproto.Message):
    building_points: int = betterproto.uint32_field(13)
    unk3300_ppfpeagbhlp: int = betterproto.uint32_field(12)
    unk3300_aocjhokcddm: int = betterproto.uint32_field(2)
    candidate_card_info_list: List["ChessNormalCardInfo"] = betterproto.message_field(6)
    uid: int = betterproto.uint32_field(11)
    unk3300_ppfbgidkcdj: int = betterproto.uint32_field(8)
    unk3300_gpndncclhke: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChessPlayerInfoNotify(betterproto.Message):
    player_info: "ChessPlayerInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class ChessSelectedCardsNotify(betterproto.Message):
    selected_card_info_list: List["ChessCardInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ChessSettleInfo(betterproto.Message):
    unk3300_nkhdfhapncn: int = betterproto.uint32_field(9)
    scene_time_ms: int = betterproto.uint64_field(11)
    unk3300_lpanfebfjoj: int = betterproto.uint32_field(15)
    is_success: bool = betterproto.bool_field(2)
    score_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(1)
    unk3300_ipgiljcbabk: int = betterproto.uint32_field(3)
    unk3300_emnlldjhmei: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ChildQuest(betterproto.Message):
    quest_id: int = betterproto.uint32_field(5)
    quest_config_id: int = betterproto.uint32_field(10)
    state: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ChooseCurAvatarTeamReq(betterproto.Message):
    team_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChooseCurAvatarTeamRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    cur_team_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CityInfo(betterproto.Message):
    crystal_num: int = betterproto.uint32_field(15)
    city_id: int = betterproto.uint32_field(6)
    level: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class CityReputationDataNotify(betterproto.Message):
    simple_info_list: List["CityReputationSimpleInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class CityReputationExploreInfo(betterproto.Message):
    taken_explore_reward_list: List[int] = betterproto.uint32_field(9)
    is_open: bool = betterproto.bool_field(1)
    explore_percent: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class CityReputationHuntInfo(betterproto.Message):
    cur_week_finish_num: int = betterproto.uint32_field(1)
    has_reward: bool = betterproto.bool_field(4)
    is_open: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class CityReputationInfo(betterproto.Message):
    total_accept_request_num: int = betterproto.uint32_field(11)
    hunt_info: "CityReputationHuntInfo" = betterproto.message_field(9)
    exp: int = betterproto.uint32_field(8)
    explore_info: "CityReputationExploreInfo" = betterproto.message_field(5)
    level: int = betterproto.uint32_field(13)
    taken_level_reward_list: List[int] = betterproto.uint32_field(4)
    quest_info: "CityReputationQuestInfo" = betterproto.message_field(7)
    request_info: "CityReputationRequestInfo" = betterproto.message_field(2)
    next_refresh_time: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CityReputationLevelupNotify(betterproto.Message):
    city_id: int = betterproto.uint32_field(10)
    level: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class CityReputationQuestInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(14)
    unk3300_omgmgdihdoh: List[int] = betterproto.uint32_field(4)
    unk3300_imldpdmhjbj: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CityReputationRequestInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)
    request_info_list: List[
        "CityReputationRequestInfoRequestInfo"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CityReputationRequestInfoRequestInfo(betterproto.Message):
    request_id: int = betterproto.uint32_field(11)
    quest_id: int = betterproto.uint32_field(14)
    is_taken_reward: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class CityReputationSimpleInfo(betterproto.Message):
    level: int = betterproto.uint32_field(10)
    city_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class Ckgbcmjejhh(betterproto.Message):
    kcllbppiboo: List["Idoelhbancp"] = betterproto.message_field(999)


@dataclass(eq=False, repr=False)
class ClearRoguelikeCurseNotify(betterproto.Message):
    is_curse_all_clear: bool = betterproto.bool_field(14)
    is_clear_all: bool = betterproto.bool_field(9)
    clear_curse_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    card_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ClientAbilitiesInitFinishCombineNotify(betterproto.Message):
    entity_invoke_list: List["EntityAbilityInvokeEntry"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ClientAbilityChangeNotify(betterproto.Message):
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(10)
    is_init_hash: bool = betterproto.bool_field(4)
    entity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ClientAbilityInitBeginNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ClientAbilityInitFinishNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class ClientAiStateNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(6)
    cur_tactic: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ClientBulletCreateNotify(betterproto.Message):
    param: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ClientCollectorData(betterproto.Message):
    max_points: int = betterproto.uint32_field(8)
    curr_points: int = betterproto.uint32_field(2)
    material_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ClientCollectorDataNotify(betterproto.Message):
    client_collector_data_list: List["ClientCollectorData"] = betterproto.message_field(
        9
    )


@dataclass(eq=False, repr=False)
class ClientGadgetInfo(betterproto.Message):
    camp_id: int = betterproto.uint32_field(1)
    camp_type: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    owner_entity_id: int = betterproto.uint32_field(4)
    target_entity_id: int = betterproto.uint32_field(5)
    async_load: bool = betterproto.bool_field(6)
    is_peer_id_from_player: bool = betterproto.bool_field(7)
    target_entity_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ClientHashDebugNotify(betterproto.Message):
    job_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ClientLoadingCostumeVerificationNotify(betterproto.Message):
    prefab_hash: int = betterproto.uint64_field(15)
    costume_id: int = betterproto.uint32_field(8)
    guid: int = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class ClientLockGameTimeNotify(betterproto.Message):
    is_lock: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class ClientMassiveEntity(betterproto.Message):
    entity_type: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(2)
    obj_id: int = betterproto.int64_field(3)
    water_info: "WaterInfo" = betterproto.message_field(4, group="entity_info")
    grass_info: "GrassInfo" = betterproto.message_field(5, group="entity_info")
    box_info: "BoxInfo" = betterproto.message_field(6, group="entity_info")


@dataclass(eq=False, repr=False)
class ClientNewMailNotify(betterproto.Message):
    not_read_num: int = betterproto.uint32_field(3)
    not_got_attachment_num: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ClientPauseNotify(betterproto.Message):
    is_open: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class ClientPerform(betterproto.Message):
    perform_type: "GcgClientPerformType" = betterproto.enum_field(2)
    param_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ClientReconnectNotify(betterproto.Message):
    reason: "ClientReconnectReason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ClientRemoveCombatEndModifierNotify(betterproto.Message):
    combat_end_type_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ClientReportNotify(betterproto.Message):
    report_value: str = betterproto.string_field(7)
    report_type: str = betterproto.string_field(12)


@dataclass(eq=False, repr=False)
class ClientScriptEventNotify(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(8)
    param_list: List[int] = betterproto.int32_field(1)
    source_entity_id: int = betterproto.uint32_field(4)
    event_type: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ClientTransmitReq(betterproto.Message):
    rot: "Vector" = betterproto.message_field(9)
    reason: "TransmitReason" = betterproto.enum_field(13)
    pos: "Vector" = betterproto.message_field(12)
    scene_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ClientTransmitRsp(betterproto.Message):
    reason: "TransmitReason" = betterproto.enum_field(12)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class ClientTriggerEventNotify(betterproto.Message):
    force_id: int = betterproto.uint32_field(5)
    event_type: "EventTriggerType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CloseCommonTipsNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ClosedItemNotify(betterproto.Message):
    item_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class CodexDataFullNotify(betterproto.Message):
    recent_viewed_pushtips_list: List[int] = betterproto.uint32_field(1)
    last_read_pushtips_codex_id: int = betterproto.uint32_field(11)
    last_read_pushtips_type_id: int = betterproto.uint32_field(10)
    type_data_list: List["CodexTypeData"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class CodexDataUpdateNotify(betterproto.Message):
    type: "CodexType" = betterproto.enum_field(15)
    id: int = betterproto.uint32_field(6)
    weapon_max_promote_level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CodexTypeData(betterproto.Message):
    codex_id_list: List[int] = betterproto.uint32_field(4)
    have_viewed_list: List[bool] = betterproto.bool_field(8)
    type: "CodexType" = betterproto.enum_field(14)
    weapon_max_promote_level_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class CoinCollectCheckDoubleStartPlayReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class CoinCollectCheckDoubleStartPlayRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    level_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CoinCollectChooseSkillReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(10)
    choose_skill_no: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CoinCollectChooseSkillRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(7)
    choose_skill_no: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CoinCollectGallerySettleNotify(betterproto.Message):
    unk3300_cpldpcmbhoe: int = betterproto.uint32_field(6)
    is_new_record: bool = betterproto.bool_field(8)
    unk3300_kdhdmogjdnl: int = betterproto.uint32_field(15)
    multistage_play_index: int = betterproto.uint32_field(10)
    level_id: int = betterproto.uint32_field(1)
    unk3300_dkbjmljglib: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CoinCollectInfo(betterproto.Message):
    unk3300_cpldpcmbhoe: int = betterproto.uint32_field(11)
    unk3300_dkbjmljglib: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class CoinCollectInterruptPlayReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class CoinCollectInterruptPlayRsp(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class CoinCollectLevelData(betterproto.Message):
    mffbbcobifb: bool = betterproto.bool_field(15)
    mdjfnblbncn: List["CoinCollectTeamInfoData"] = betterproto.message_field(6)
    jkglemblhjj: "CoinCollectTeamInfoData" = betterproto.message_field(5)
    dmgfjomildi: int = betterproto.uint32_field(13)
    oahobildeen: bool = betterproto.bool_field(9)
    ocbgniehaae: bool = betterproto.bool_field(2)
    mipkplghgdb: int = betterproto.uint32_field(10)
    gcgfggieage: int = betterproto.uint32_field(8)
    oepemecbhfp: int = betterproto.uint32_field(14)
    fcedmbblknb: int = betterproto.uint32_field(3)
    level_id: int = betterproto.uint32_field(7)
    caepnfpolia: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class CoinCollectOperatorInfo(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CoinCollectPlayerInfo(betterproto.Message):
    avatar_info_list: List["CoinCollectTeamAvatarInfo"] = betterproto.message_field(14)
    ddbhiknpgnp: bool = betterproto.bool_field(8)
    choose_skill_no: int = betterproto.uint32_field(10)
    player_name: str = betterproto.string_field(4)
    player_uid: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CoinCollectPrepareReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CoinCollectPrepareRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class CoinCollectPrepareStageNotify(betterproto.Message):
    locpgggjmdl: "CoinCollectInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class CoinCollectStageInfo(betterproto.Message):
    level_id: int = betterproto.uint32_field(6)
    play_index: int = betterproto.uint32_field(12)
    player_info_list: List["CoinCollectPlayerInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class CoinCollectTeamAvatarInfo(betterproto.Message):
    costume_id: int = betterproto.uint32_field(15)
    avatar_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CoinCollectTeamInfoData(betterproto.Message):
    kmdmpiojlbd: List[int] = betterproto.uint32_field(5)
    player_uid: int = betterproto.uint32_field(7)
    hiidcboahjm: bool = betterproto.bool_field(15)
    choose_skill_no: int = betterproto.uint32_field(3)
    eodeindkpal: List[int] = betterproto.uint32_field(6)
    avatar_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CombatInvocationsNotify(betterproto.Message):
    invoke_list: List["CombatInvokeEntry"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class CombatInvokeEntry(betterproto.Message):
    combat_data: bytes = betterproto.bytes_field(7)
    argument_type: "CombatTypeArgument" = betterproto.enum_field(8)
    forward_type: "ForwardType" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class CombineDataNotify(betterproto.Message):
    combine_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CombineFormulaDataNotify(betterproto.Message):
    is_locked: bool = betterproto.bool_field(7)
    combine_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CombineReq(betterproto.Message):
    combine_count: int = betterproto.uint32_field(10)
    combine_id: int = betterproto.uint32_field(8)
    avatar_guid: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class CombineRsp(betterproto.Message):
    combine_count: int = betterproto.uint32_field(10)
    result_item_list: List["ItemParam"] = betterproto.message_field(13)
    avatar_guid: int = betterproto.uint64_field(7)
    total_extra_item_list: List["ItemParam"] = betterproto.message_field(1)
    retcode: int = betterproto.int32_field(12)
    total_random_item_list: List["ItemParam"] = betterproto.message_field(3)
    combine_id: int = betterproto.uint32_field(5)
    cost_item_list: List["ItemParam"] = betterproto.message_field(2)
    total_return_item_list: List["ItemParam"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CommonPlayerTipsNotify(betterproto.Message):
    notify_type: int = betterproto.uint32_field(11)
    text_map_id_list: List[str] = betterproto.string_field(14)


@dataclass(eq=False, repr=False)
class CompoundDataNotify(betterproto.Message):
    compound_queue_data_list: List["CompoundQueueData"] = betterproto.message_field(14)
    unlock_compound_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CompoundQueueData(betterproto.Message):
    output_count: int = betterproto.uint32_field(12)
    compound_id: int = betterproto.uint32_field(9)
    wait_count: int = betterproto.uint32_field(8)
    output_time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class CompoundUnlockNotify(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(8)
    skill_request: "SkillRequest" = betterproto.message_field(1689, group="detail")
    reliquary_request: "ReliquaryRequest" = betterproto.message_field(
        118, group="detail"
    )
    element_reliquary_request: "ElementReliquaryRequest" = betterproto.message_field(
        1105, group="detail"
    )


@dataclass(eq=False, repr=False)
class ContentAuditInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)
    content: str = betterproto.string_field(2)
    submit_count: int = betterproto.uint32_field(3)
    audit_state: "AuditState" = betterproto.enum_field(4)
    submit_limit: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CookDataNotify(betterproto.Message):
    recipe_data_list: List["CookRecipeData"] = betterproto.message_field(9)
    grade: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CookGradeDataNotify(betterproto.Message):
    grade: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CookRecipeData(betterproto.Message):
    proficiency: int = betterproto.uint32_field(1)
    recipe_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class CookRecipeDataNotify(betterproto.Message):
    recipe_data: "CookRecipeData" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class CoopCg(betterproto.Message):
    is_unlock: bool = betterproto.bool_field(15)
    id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CoopCgShowNotify(betterproto.Message):
    cg_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CoopCgUpdateNotify(betterproto.Message):
    cg_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CoopChapter(betterproto.Message):
    seen_ending_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    finish_dialog_list: List[int] = betterproto.uint32_field(5)
    coop_cg_list: List["CoopCg"] = betterproto.message_field(11)
    coop_reward_list: List["CoopReward"] = betterproto.message_field(9)
    lock_reason_list: List[int] = betterproto.uint32_field(4)
    finished_end_count: int = betterproto.uint32_field(8)
    coop_point_list: List["CoopPoint"] = betterproto.message_field(7)
    state: "State" = betterproto.enum_field(15)
    id: int = betterproto.uint32_field(6)
    total_end_count: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CoopChapterUpdateNotify(betterproto.Message):
    chapter_list: List["CoopChapter"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class CoopDataNotify(betterproto.Message):
    viewed_chapter_list: List[int] = betterproto.uint32_field(8)
    is_have_progress: bool = betterproto.bool_field(14)
    chapter_list: List["CoopChapter"] = betterproto.message_field(12)
    cur_coop_point: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CoopPoint(betterproto.Message):
    id: int = betterproto.uint32_field(10)
    state: "State" = betterproto.enum_field(5)
    self_confidence: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class CoopPointUpdateNotify(betterproto.Message):
    coop_point: "CoopPoint" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class CoopProgressUpdateNotify(betterproto.Message):
    cur_coop_point: int = betterproto.uint32_field(5)
    is_have_progress: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class CoopReward(betterproto.Message):
    state: "State" = betterproto.enum_field(8)
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CoopRewardUpdateNotify(betterproto.Message):
    reward_list: List["CoopReward"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class CostDice(betterproto.Message):
    reason: "GcgReason" = betterproto.enum_field(7)
    controller_id: int = betterproto.uint32_field(9)
    select_dice_index_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CostRevise(betterproto.Message):
    controller_id: int = betterproto.uint32_field(15)
    cost_revise: "GcgCostReviseInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class Cpincmhjeib(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    hjaeginkldk: List["Hghpbljeajj"] = betterproto.message_field(2)
    lkcfpnkfoma: bytes = betterproto.bytes_field(5)
    jhbailmlkio: bytes = betterproto.bytes_field(6)
    odnjldgmjkg: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class Cpnnkglffop(betterproto.Message):
    bfpknggpgbp: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CreateEntityInfo(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1, group="entity")
    npc_id: int = betterproto.uint32_field(2, group="entity")
    gadget_id: int = betterproto.uint32_field(3, group="entity")
    item_id: int = betterproto.uint32_field(4, group="entity")
    level: int = betterproto.uint32_field(5)
    pos: "Vector" = betterproto.message_field(6)
    rot: "Vector" = betterproto.message_field(7)
    scene_id: int = betterproto.uint32_field(10)
    room_id: int = betterproto.uint32_field(11)
    client_unique_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class CreateGadgetInfo(betterproto.Message):
    born_type: "GadgetBornType" = betterproto.enum_field(1)
    chest: "CreateGadgetInfoChest" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CreateGadgetInfoChest(betterproto.Message):
    chest_drop_id: int = betterproto.uint32_field(1)
    is_show_cutscene: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class CreateMassiveEntityNotify(betterproto.Message):
    massive_entity_list: List["ServerMassiveEntity"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class CreateMassiveEntityReq(betterproto.Message):
    massive_entity_list: List["ClientMassiveEntity"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class CreateMassiveEntityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class CreateVehicleReq(betterproto.Message):
    pos: "Vector" = betterproto.message_field(2)
    rot: "Vector" = betterproto.message_field(10)
    vehicle_id: int = betterproto.uint32_field(1)
    scene_point_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class CreateVehicleRsp(betterproto.Message):
    vehicle_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(3)
    entity_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class CreatorInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(9)
    location_info: "LocationInfo" = betterproto.message_field(12)
    op_type: "WidgetCreatorOpType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class CrucibleBattleUidInfo(betterproto.Message):
    nickname: str = betterproto.string_field(4)
    icon: int = betterproto.uint32_field(5)
    uid: int = betterproto.uint32_field(2)
    profile_picture: "ProfilePicture" = betterproto.message_field(11)
    online_id: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class CrucibleInfo(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(1)
    prepare_end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CrystalLinkAvatarInfo(betterproto.Message):
    is_trial: bool = betterproto.bool_field(9)
    avatar_id: int = betterproto.uint64_field(7)


@dataclass(eq=False, repr=False)
class CrystalLinkBuffInfo(betterproto.Message):
    unk3300_bgklafcbnoa: int = betterproto.uint32_field(8)
    unk3300_pflaocmefil: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CrystalLinkDungeonAvatarInfo(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(2)
    is_trial: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class CrystalLinkDungeonInfoNotify(betterproto.Message):
    init_gallery_progress: int = betterproto.uint32_field(7)
    difficulty_id: int = betterproto.uint32_field(9)
    dungeon_avatar_info_list: List[
        "CrystalLinkDungeonAvatarInfo"
    ] = betterproto.message_field(10)
    is_upper_part: bool = betterproto.bool_field(15)
    level_id: int = betterproto.uint32_field(6)
    buff_info_list: List["CrystalLinkBuffInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CrystalLinkEnterDungeonReq(betterproto.Message):
    team_info_list: List["CrystalLinkTeamInfo"] = betterproto.message_field(7)
    level_id: int = betterproto.uint32_field(8)
    difficulty_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CrystalLinkEnterDungeonRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(11)
    difficulty_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(3)
    team_info_list: List["CrystalLinkTeamInfo"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class CrystalLinkInfo(betterproto.Message):
    score: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class CrystalLinkLevelInfo(betterproto.Message):
    level_id: int = betterproto.uint32_field(3)
    best_score: int = betterproto.uint32_field(6)
    is_open: bool = betterproto.bool_field(7)
    team_info_list: List["CrystalLinkTeamInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class CrystalLinkRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CrystalLinkRestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class CrystalLinkSettleInfo(betterproto.Message):
    kill_normal_monster_num: int = betterproto.uint32_field(11)
    is_new_record: bool = betterproto.bool_field(6)
    final_score: int = betterproto.uint32_field(13)
    kill_elite_monster_num: int = betterproto.uint32_field(15)
    difficulty_id: int = betterproto.uint32_field(3)
    level_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CrystalLinkTeamInfo(betterproto.Message):
    avatar_info_list: List["CrystalLinkAvatarInfo"] = betterproto.message_field(13)
    buff_info_list: List["CrystalLinkBuffInfo"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class CurVehicleInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    pos: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CustomCommonNodeInfo(betterproto.Message):
    parent_index: int = betterproto.int32_field(1)
    config_id: int = betterproto.uint32_field(2)
    slot_identifier: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class CustomDungeon(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(8)
    room_list: List["CustomDungeonRoom"] = betterproto.message_field(3)
    setting: "CustomDungeonSetting" = betterproto.message_field(1)
    dungeon_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CustomDungeonAbstract(betterproto.Message):
    unk3300_ejgbhghlfpi: int = betterproto.uint32_field(10)
    unk3300_jpfihkeclmf: int = betterproto.uint32_field(2)
    first_publish_time: int = betterproto.uint32_field(1)
    last_publish_time: int = betterproto.uint32_field(4)
    brick_statistics_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class CustomDungeonBanInfo(betterproto.Message):
    expire_time: int = betterproto.uint32_field(12)
    ban_type: "CustomDungeonBanType" = betterproto.enum_field(6)
    dungeon_guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class CustomDungeonBattleRecordNotify(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(13)
    min_cost_time: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class CustomDungeonBlock(betterproto.Message):
    block_id: int = betterproto.uint32_field(15)
    rot: "Vector" = betterproto.message_field(2)
    pos: "Vector" = betterproto.message_field(11)
    guid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CustomDungeonBrief(betterproto.Message):
    setting: "CustomDungeonSetting" = betterproto.message_field(7)
    is_psn_platform: bool = betterproto.bool_field(4)
    abstract: "CustomDungeonAbstract" = betterproto.message_field(13)
    state: "CustomDungeonState" = betterproto.enum_field(9)
    dungeon_guid: int = betterproto.uint64_field(5)
    tag_list: List[int] = betterproto.uint32_field(15)
    last_save_time: int = betterproto.uint32_field(10)
    social: "CustomDungeonSocial" = betterproto.message_field(8)
    battle_min_cost_time: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class CustomDungeonOfficialNotify(betterproto.Message):
    try_type: "TryCustomDungeonType" = betterproto.enum_field(7)
    official_black_coin_list: List[int] = betterproto.uint32_field(12)
    enter_type: "EnterCustomDungeonType" = betterproto.enum_field(11)


@dataclass(eq=False, repr=False)
class CustomDungeonRecoverNotify(betterproto.Message):
    try_type: "TryCustomDungeonType" = betterproto.enum_field(5)
    enter_type: "EnterCustomDungeonType" = betterproto.enum_field(10)
    official_black_coin_list: List[int] = betterproto.uint32_field(14)
    custom_dungeon: "CustomDungeon" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CustomDungeonResultInfo(betterproto.Message):
    finish_type: "CustomDungeonFinishType" = betterproto.enum_field(2)
    is_stored: bool = betterproto.bool_field(8)
    dungeon_guid: int = betterproto.uint64_field(9)
    is_liked: bool = betterproto.bool_field(14)
    is_arrive_finish: bool = betterproto.bool_field(15)
    got_coin_num: int = betterproto.uint32_field(11)
    child_challenge_list: List["ChallengeBrief"] = betterproto.message_field(3)
    time_cost: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CustomDungeonRoom(betterproto.Message):
    block_list: List["CustomDungeonBlock"] = betterproto.message_field(7)
    room_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CustomDungeonSetting(betterproto.Message):
    open_room_list: List[int] = betterproto.uint32_field(13)
    life_num: int = betterproto.uint32_field(9)
    coin_limit: int = betterproto.uint32_field(4)
    start_room_id: int = betterproto.uint32_field(10)
    is_forbid_skill: bool = betterproto.bool_field(11)
    time_limit: int = betterproto.uint32_field(2)
    is_arrive_finish: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class CustomDungeonSocial(betterproto.Message):
    store_num: int = betterproto.uint32_field(7)
    win_num: int = betterproto.uint32_field(11)
    like_num: int = betterproto.uint32_field(6)
    play_num: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class CustomDungeonUpdateNotify(betterproto.Message):
    dungeon_brief: "CustomDungeonBrief" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class CustomGadgetTreeInfo(betterproto.Message):
    node_list: List["CustomCommonNodeInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CutSceneBeginNotify(betterproto.Message):
    is_wait_others: bool = betterproto.bool_field(3)
    extra_param_list: List["CutSceneExtraParam"] = betterproto.message_field(14)
    cutscene_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CutSceneEndNotify(betterproto.Message):
    cutscene_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class CutSceneExtraParam(betterproto.Message):
    detail_param_list: List[float] = betterproto.double_field(3)


@dataclass(eq=False, repr=False)
class CutSceneFinishNotify(betterproto.Message):
    cutscene_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CylinderRegionSize(betterproto.Message):
    height: float = betterproto.float_field(4)
    radius: float = betterproto.float_field(14)


@dataclass(eq=False, repr=False)
class CylinderSize(betterproto.Message):
    height: float = betterproto.float_field(4)
    radius: float = betterproto.float_field(14)


@dataclass(eq=False, repr=False)
class DailyDungeonEntryInfo(betterproto.Message):
    recommend_dungeon_id: int = betterproto.uint32_field(13)
    dungeon_entry_id: int = betterproto.uint32_field(8)
    dungeon_entry_config_id: int = betterproto.uint32_field(2)
    recommend_dungeon_entry_info: "DungeonEntryInfo" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class DailyTaskDataNotify(betterproto.Message):
    is_taken_score_reward: bool = betterproto.bool_field(13)
    finished_num: int = betterproto.uint32_field(11)
    score_reward_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DailyTaskFilterCityReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class DailyTaskFilterCityRsp(betterproto.Message):
    cikenonelim: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class DailyTaskInfo(betterproto.Message):
    finish_progress: int = betterproto.uint32_field(9)
    is_finished: bool = betterproto.bool_field(3)
    progress: int = betterproto.uint32_field(7)
    daily_task_id: int = betterproto.uint32_field(5)
    reward_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DailyTaskProgressNotify(betterproto.Message):
    info: "DailyTaskInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class DailyTaskScoreRewardNotify(betterproto.Message):
    reward_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DailyTaskUnlockedCitiesNotify(betterproto.Message):
    unlocked_city_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class Dalldmaanfe(betterproto.Message):
    entity_id: int = betterproto.uint32_field(7)
    skill_anchor_position: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class DataResVersionNotify(betterproto.Message):
    client_silence_md5: str = betterproto.string_field(12)
    client_md5: str = betterproto.string_field(1)
    client_data_version: int = betterproto.uint32_field(3)
    client_silence_version_suffix: str = betterproto.string_field(15)
    res_version_config: "ResVersionConfig" = betterproto.message_field(7)
    is_data_need_relogin: bool = betterproto.bool_field(6)
    client_silence_data_version: int = betterproto.uint32_field(5)
    op_type: "DataResVersionOpType" = betterproto.enum_field(14)
    client_version_suffix: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class Dbibejbeoee(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    daehjagbjbl: int = betterproto.int32_field(2)
    jkfdibhoggm: "Eiebdojcdbh" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class DealAddFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    deal_add_friend_result: "DealAddFriendResultType" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class DealAddFriendRsp(betterproto.Message):
    deal_add_friend_result: "DealAddFriendResultType" = betterproto.enum_field(2)
    retcode: int = betterproto.int32_field(3)
    target_uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DeathZoneInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(15)
    id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DeathZoneInfoNotify(betterproto.Message):
    death_zone_info_list: List["DeathZoneInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class DeathZoneObserveNotify(betterproto.Message):
    source_entity_id: int = betterproto.uint32_field(5)
    target_entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DebugNotify(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    retcode: "CmdId" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class DelBackupAvatarTeamReq(betterproto.Message):
    backup_avatar_team_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DelBackupAvatarTeamRsp(betterproto.Message):
    backup_avatar_team_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class DeleteFriendNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DeleteFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DeleteFriendRsp(betterproto.Message):
    target_uid: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class DeliveryInfo(betterproto.Message):
    day_index: int = betterproto.uint32_field(6)
    finished_delivery_quest_index: List[int] = betterproto.uint32_field(7)
    is_taken_reward: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class DelMailReq(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class DelMailRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    mail_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DelScenePlayTeamEntityNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(9)
    del_entity_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DelTeamEntityNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(15)
    del_entity_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Denjllkhomj(betterproto.Message):
    eknhofiihcl: "Vector" = betterproto.message_field(7)
    entity_id: int = betterproto.uint32_field(13)
    boedpkfedkp: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class Deofbfhgcbd(betterproto.Message):
    gkdhighenkl: bool = betterproto.bool_field(9)
    bomgjkinedc: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class DeshretObeliskChestInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(4)
    config_id: int = betterproto.uint32_field(13)
    group_id: int = betterproto.uint32_field(11)
    pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class DeshretObeliskChestInfoNotify(betterproto.Message):
    chest_info_list: List["DeshretObeliskChestInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class DeshretObeliskGadgetInfo(betterproto.Message):
    argument_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DestroyMassiveEntityNotify(betterproto.Message):
    massive_entity_list: List["ClientMassiveEntity"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class DestroyMaterialReq(betterproto.Message):
    material_list: List["MaterialInfo"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class DestroyMaterialRsp(betterproto.Message):
    item_id_list: List[int] = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(12)
    item_count_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class DetectorData(betterproto.Message):
    is_hint_valid: bool = betterproto.bool_field(2)
    config_id: int = betterproto.uint32_field(9)
    hint_center_pos: "Vector" = betterproto.message_field(3)
    material_id: int = betterproto.uint32_field(10)
    is_all_collected: bool = betterproto.bool_field(13)
    group_id: int = betterproto.uint32_field(14)
    hint_radius: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class Dfaipjmkbcc(betterproto.Message):
    op: "GcgOperation" = betterproto.message_field(15)
    controller_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class Dfoimmliceg(betterproto.Message):
    pos: "Vector" = betterproto.message_field(7)
    mjehpphliia: "Vector" = betterproto.message_field(12)
    rot: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class Dhoadhacdha(betterproto.Message):
    id: int = betterproto.uint32_field(7)
    num: int = betterproto.uint32_field(6)
    type: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DiceReroll(betterproto.Message):
    controller_id: int = betterproto.uint32_field(8)
    dice_side_list: List["GcgDiceSideType"] = betterproto.enum_field(7)
    select_dice_index_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class DiceRoll(betterproto.Message):
    controller_id: int = betterproto.uint32_field(8)
    dice_num: int = betterproto.uint32_field(11)
    dice_side_list: List["GcgDiceSideType"] = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class DigActivityChangeGadgetStateReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DigActivityChangeGadgetStateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    entity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DigActivityMarkPointChangeNotify(betterproto.Message):
    dig_mark_point_list: List["DigMarkPoint"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class DigInfo(betterproto.Message):
    stage_id_list: List[int] = betterproto.uint32_field(14)
    dig_mark_point_list: List["DigMarkPoint"] = betterproto.message_field(2)
    stage_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DigMarkPoint(betterproto.Message):
    rot: "Vector" = betterproto.message_field(14)
    pos: "Vector" = betterproto.message_field(2)
    bundle_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DisableRoguelikeTrapNotify(betterproto.Message):
    card_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class Djooipgjpfc(betterproto.Message):
    value: float = betterproto.float_field(14)
    key: "AbilityString" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class Dkcaehhpagd(betterproto.Message):
    blnaldeiekj: List["Efjnigdjclh"] = betterproto.message_field(1)
    create_time: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class Dkmdneaegdf(betterproto.Message):
    client_game_time: int = betterproto.uint32_field(14)
    game_time: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class Dkobfhfonlm(betterproto.Message):
    level_id: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(7)
    min_finish_time: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class Dmiogbogieg(betterproto.Message):
    scene_id: int = betterproto.uint32_field(11)
    hoogfkfbckk: int = betterproto.uint32_field(15)
    idgelpihkph: List["Namohgafbjp"] = betterproto.message_field(5)
    module_id: int = betterproto.uint32_field(13)
    version: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class Dmmagieopdg(betterproto.Message):
    stage_id: int = betterproto.uint32_field(5)
    level_info_list: List["Dkobfhfonlm"] = betterproto.message_field(4)
    is_open: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class Dnefmccifdh(betterproto.Message):
    aicefchaici: bool = betterproto.bool_field(33)
    kcllbppiboo: List["Idoelhbancp"] = betterproto.message_field(999)


@dataclass(eq=False, repr=False)
class DoGachaReq(betterproto.Message):
    gacha_random: int = betterproto.uint32_field(12)
    gacha_type: int = betterproto.uint32_field(2)
    gacha_schedule_id: int = betterproto.uint32_field(3)
    gacha_tag: str = betterproto.string_field(15)
    gacha_times: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DoGachaRsp(betterproto.Message):
    left_gacha_times: int = betterproto.uint32_field(7)
    new_gacha_random: int = betterproto.uint32_field(9)
    gacha_type: int = betterproto.uint32_field(13)
    gacha_times_limit: int = betterproto.uint32_field(4)
    cost_item_num: int = betterproto.uint32_field(8)
    gacha_item_list: List["GachaItem"] = betterproto.message_field(3)
    wish_progress: int = betterproto.uint32_field(12)
    daily_gacha_times: int = betterproto.uint32_field(112)
    ten_cost_item_id: int = betterproto.uint32_field(5)
    wish_item_id: int = betterproto.uint32_field(10)
    cur_schedule_daily_gacha_times: int = betterproto.uint32_field(475)
    ten_cost_item_num: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(14)
    gacha_times: int = betterproto.uint32_field(15)
    unk3300_hbiliaeihnk: bool = betterproto.bool_field(1849)
    unk3300_ohfmhihjhpj: bool = betterproto.bool_field(397)
    gacha_schedule_id: int = betterproto.uint32_field(2)
    wish_max_progress: int = betterproto.uint32_field(1)
    cost_item_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DoRoguelikeDungeonCardGachaReq(betterproto.Message):
    cell_id: int = betterproto.uint32_field(13)
    dungeon_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DoRoguelikeDungeonCardGachaRsp(betterproto.Message):
    is_can_refresh: bool = betterproto.bool_field(7)
    retcode: int = betterproto.int32_field(15)
    card_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DoSetPlayerBornDataNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class Dpbliebakgi(betterproto.Message):
    oahpenjnboe: bool = betterproto.bool_field(1)
    gimhlmfcojd: bool = betterproto.bool_field(2)
    aicefchaici: bool = betterproto.bool_field(3)
    docgilpleod: bool = betterproto.bool_field(7)
    kcllbppiboo: List["Idoelhbancp"] = betterproto.message_field(999)


@dataclass(eq=False, repr=False)
class Dplpllggjjc(betterproto.Message):
    race_info: "Bdkpjamlncl" = betterproto.message_field(4)
    camp_info: "Meidianhedd" = betterproto.message_field(11)
    jpegcngalgi: "Fkjcfglhnpm" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class DraftGuestReplyInviteNotify(betterproto.Message):
    guest_uid: int = betterproto.uint32_field(13)
    draft_id: int = betterproto.uint32_field(15)
    is_agree: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class DraftGuestReplyInviteReq(betterproto.Message):
    is_agree: bool = betterproto.bool_field(13)
    draft_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DraftGuestReplyInviteRsp(betterproto.Message):
    draft_id: int = betterproto.uint32_field(4)
    is_agree: bool = betterproto.bool_field(7)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class DraftGuestReplyTwiceConfirmNotify(betterproto.Message):
    is_agree: bool = betterproto.bool_field(5)
    draft_id: int = betterproto.uint32_field(6)
    guest_uid: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class DraftGuestReplyTwiceConfirmReq(betterproto.Message):
    is_agree: bool = betterproto.bool_field(10)
    draft_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class DraftGuestReplyTwiceConfirmRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    is_agree: bool = betterproto.bool_field(5)
    draft_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class DraftInviteFailInfo(betterproto.Message):
    reason: "DraftInviteFailReason" = betterproto.enum_field(9)
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DraftInviteResultNotify(betterproto.Message):
    is_all_agree: bool = betterproto.bool_field(1)
    draft_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DraftOwnerInviteNotify(betterproto.Message):
    draft_id: int = betterproto.uint32_field(9)
    invite_deadline_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DraftOwnerStartInviteReq(betterproto.Message):
    draft_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DraftOwnerStartInviteRsp(betterproto.Message):
    invite_fail_info_list: List["DraftInviteFailInfo"] = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(11)
    draft_id: int = betterproto.uint32_field(9)
    wrong_uid: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class DraftOwnerTwiceConfirmNotify(betterproto.Message):
    draft_id: int = betterproto.uint32_field(15)
    twice_confirm_deadline_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DraftTwiceConfirmResultNotify(betterproto.Message):
    is_all_agree: bool = betterproto.bool_field(15)
    draft_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DragonSpineChapterFinishNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(5)
    weapon_enhance_level: int = betterproto.uint32_field(2)
    chapter_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DragonSpineChapterInfo(betterproto.Message):
    finished_mission_num: int = betterproto.uint32_field(7)
    chapter_id: int = betterproto.uint32_field(4)
    is_open: bool = betterproto.bool_field(6)
    progress: int = betterproto.uint32_field(8)
    open_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DragonSpineChapterOpenNotify(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(10)
    schedule_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DragonSpineChapterProgressChangeNotify(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(8)
    cur_progress: int = betterproto.uint32_field(5)
    schedule_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class DragonSpineCoinChangeNotify(betterproto.Message):
    unk3300_fohjdgcakek: int = betterproto.uint32_field(7)
    schedule_id: int = betterproto.uint32_field(14)
    unk3300_imlkijaoadf: int = betterproto.uint32_field(1)
    unk3300_neocmgjceoj: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DragonSpineInfo(betterproto.Message):
    unk3300_ppabofmignm: int = betterproto.uint32_field(14)
    unk3300_imlkijaoadf: int = betterproto.uint32_field(5)
    unk3300_fohjdgcakek: int = betterproto.uint32_field(1)
    unk3300_neocmgjceoj: int = betterproto.uint32_field(7)
    left_monsters: bool = betterproto.bool_field(2)
    chapter_info_list: List["DragonSpineChapterInfo"] = betterproto.message_field(9)
    weapon_enhance_level: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class DropHintNotify(betterproto.Message):
    position: "Vector" = betterproto.message_field(9)
    item_id_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DropItemReq(betterproto.Message):
    guid: int = betterproto.uint64_field(10)
    count: int = betterproto.uint32_field(3)
    store_type: "StoreType" = betterproto.enum_field(12)
    pos: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class DropItemRsp(betterproto.Message):
    store_type: "StoreType" = betterproto.enum_field(14)
    guid: int = betterproto.uint64_field(9)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class Duel(betterproto.Message):
    card_list: List["GcgCard"] = betterproto.message_field(1)
    unk3300_jhddnkfpina: int = betterproto.uint32_field(5)
    forbid_finish_challenge_list: List[int] = betterproto.uint32_field(1985)
    history_card_list: List["GcgCard"] = betterproto.message_field(1326)
    history_msg_pack_list: List["GcgMessagePack"] = betterproto.message_field(1636)
    unk3300_bianmopdeho: int = betterproto.uint32_field(14)
    show_info_list: List["GcgControllerShowInfo"] = betterproto.message_field(10)
    unk3300_cdcmbokblak: List["Unk3300Adhencifkni"] = betterproto.message_field(1950)
    intention_list: List["GcgpveIntention"] = betterproto.message_field(15)
    cost_revise: "GcgCostReviseInfo" = betterproto.message_field(6)
    controller_id: int = betterproto.uint32_field(2)
    field_list: List["GcgPlayerField"] = betterproto.message_field(3)
    business_type: "GcgGameBusinessType" = betterproto.enum_field(7)
    phase: "GcgPhase" = betterproto.message_field(8)
    challenge_list: List["GcgDuelChallenge"] = betterproto.message_field(37)
    card_id_list: List[int] = betterproto.uint32_field(12)
    server_seq: int = betterproto.uint32_field(11)
    round: int = betterproto.uint32_field(4)
    game_id: int = betterproto.uint32_field(9)
    unk3300_jbbmbkgoono: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class DuelDataChange(betterproto.Message):
    round: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DuelHeartCgEndNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DuelHeartEnterDungeonReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class DuelHeartEnterDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class DuelHeartInfo(betterproto.Message):
    difficulty: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DuelHeartRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DuelHeartRestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class DuelHeartSelectDifficultyReq(betterproto.Message):
    difficulty: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DuelHeartSelectDifficultyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class DuelHeartSettleNotify(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(4)
    is_succ: bool = betterproto.bool_field(5)
    cost_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamAvatar(betterproto.Message):
    player_uid: int = betterproto.uint32_field(5)
    avatar_info: "AvatarInfo" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamChangeAvatarReq(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamChangeAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamCreateReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(8)
    point_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamCreateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamDismissNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(3)
    reason: "DungeonCandidateTeamPlayerDismissReason" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInfoNotify(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(9)
    avatar_list: List["DungeonCandidateTeamAvatar"] = betterproto.message_field(8)
    ready_player_uid: List[int] = betterproto.uint32_field(11)
    match_type: int = betterproto.uint32_field(2)
    player_state_map: Dict[
        int, "DungeonCandidateTeamPlayerState"
    ] = betterproto.map_field(15, betterproto.TYPE_UINT32, betterproto.TYPE_ENUM)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInviteNotify(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(15)
    player_uid: int = betterproto.uint32_field(9)
    valid_deadline_time_sec: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInviteReq(betterproto.Message):
    player_uids: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInviteRsp(betterproto.Message):
    invalid_player_uids: List[int] = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamKickReq(betterproto.Message):
    player_uid: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamKickRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamLeaveReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamLeaveRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamPlayerLeaveNotify(betterproto.Message):
    reason: "DungeonCandidateTeamPlayerLeaveReason" = betterproto.enum_field(2)
    player_uid: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamRefuseNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamReplyInviteReq(betterproto.Message):
    is_accept: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamReplyInviteRsp(betterproto.Message):
    is_trans_point: bool = betterproto.bool_field(2)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamSetChangingAvatarReq(betterproto.Message):
    is_changing_avatar: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamSetChangingAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamSetReadyReq(betterproto.Message):
    is_ready: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamSetReadyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class DungeonChallengeBeginNotify(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(3)
    challenge_index: int = betterproto.uint32_field(2)
    group_id: int = betterproto.uint32_field(6)
    father_index: int = betterproto.uint32_field(7)
    uid_list: List[int] = betterproto.uint32_field(12)
    param_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DungeonChallengeFinishNotify(betterproto.Message):
    challenge_index: int = betterproto.uint32_field(8)
    finish_type: "ChallengeFinishType" = betterproto.enum_field(13)
    is_success: bool = betterproto.bool_field(6)
    challenge_record_type: int = betterproto.uint32_field(5)
    is_new_record: bool = betterproto.bool_field(3)
    current_value: int = betterproto.uint32_field(9)
    time_cost: int = betterproto.uint32_field(11)
    strengthen_point_data_map: Dict[int, "StrengthenPointData"] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    channeller_slab_loop_dungeon_result_info: "ChannellerSlabLoopDungeonResultInfo" = (
        betterproto.message_field(1867, group="detail")
    )
    effigy_challenge_dungeon_result_info: "EffigyChallengeDungeonResultInfo" = (
        betterproto.message_field(942, group="detail")
    )
    potion_dungeon_result_info: "PotionDungeonResultInfo" = betterproto.message_field(
        709, group="detail"
    )
    custom_dungeon_result_info: "CustomDungeonResultInfo" = betterproto.message_field(
        41, group="detail"
    )


@dataclass(eq=False, repr=False)
class DungeonDataNotify(betterproto.Message):
    dungeon_data_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class DungeonDieOptionReq(betterproto.Message):
    die_option: "PlayerDieOption" = betterproto.enum_field(3)
    is_quit_immediately: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class DungeonDieOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    die_option: "PlayerDieOption" = betterproto.enum_field(4)
    revive_count: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DungeonEnterPosInfo(betterproto.Message):
    quest_id: int = betterproto.uint32_field(15)
    point_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DungeonEntryCond(betterproto.Message):
    cond_reason: "DungeonEntryBlockReason" = betterproto.enum_field(14)
    param1: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class DungeonEntryInfo(betterproto.Message):
    max_boss_chest_num: int = betterproto.uint32_field(10)
    start_time: int = betterproto.uint32_field(1)
    left_times: int = betterproto.uint32_field(6)
    end_time: int = betterproto.uint32_field(14)
    weekly_boss_resin_discount_info: "WeeklyBossResinDiscountInfo" = (
        betterproto.message_field(13)
    )
    dungeon_id: int = betterproto.uint32_field(3)
    next_boss_chest_refresh_time: int = betterproto.uint32_field(5)
    is_passed: bool = betterproto.bool_field(2)
    next_refresh_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DungeonEntryInfoReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(14)
    scene_point_id_list: List["Uint32Pair"] = betterproto.message_field(12)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DungeonEntryInfoRsp(betterproto.Message):
    dungeon_entry_point_list: List["DungeonEntryPointInfo"] = betterproto.message_field(
        5
    )
    recommend_dungeon_id: int = betterproto.uint32_field(4)
    point_id: int = betterproto.uint32_field(7)
    dungeon_entry_list: List["DungeonEntryInfo"] = betterproto.message_field(1)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class DungeonEntryPointInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    point_id: int = betterproto.uint32_field(15)
    dungeon_entry_list: List["DungeonEntryInfo"] = betterproto.message_field(5)
    recommend_dungeon_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DungeonEntryToBeExploreNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(9)
    dungeon_entry_scene_point_id: int = betterproto.uint32_field(6)
    dungeon_entry_config_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DungeonFollowNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DungeonGetStatueDropReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DungeonGetStatueDropRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class DungeonInterruptChallengeReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(13)
    challenge_id: int = betterproto.uint32_field(1)
    challenge_index: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class DungeonInterruptChallengeRsp(betterproto.Message):
    group_id: int = betterproto.uint32_field(7)
    challenge_id: int = betterproto.uint32_field(10)
    challenge_index: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class DungeonPlayerDieNotify(betterproto.Message):
    die_type: "PlayerDieType" = betterproto.enum_field(15)
    murderer_entity_id: int = betterproto.uint32_field(5)
    wait_time: int = betterproto.uint32_field(3)
    strengthen_point_data_map: Dict[int, "StrengthenPointData"] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    revive_count: int = betterproto.uint32_field(8)
    monster_id: int = betterproto.uint32_field(10, group="entity")
    gadget_id: int = betterproto.uint32_field(7, group="entity")
    dungeon_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DungeonPlayerDieReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(14)
    die_type: "PlayerDieType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class DungeonPlayerDieRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class DungeonRestartInviteNotify(betterproto.Message):
    cd: int = betterproto.uint32_field(11)
    player_uid: int = betterproto.uint32_field(1)
    dungeon_id: int = betterproto.uint32_field(7)
    point_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DungeonRestartInviteReplyNotify(betterproto.Message):
    is_accept: bool = betterproto.bool_field(8)
    player_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DungeonRestartInviteReplyReq(betterproto.Message):
    is_accept: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class DungeonRestartInviteReplyRsp(betterproto.Message):
    is_trans_point: bool = betterproto.bool_field(14)
    is_accept: bool = betterproto.bool_field(9)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class DungeonRestartReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DungeonRestartResultNotify(betterproto.Message):
    is_add_accept: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class DungeonRestartRsp(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(4)
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DungeonReviseLevelNotify(betterproto.Message):
    revise_level: int = betterproto.uint32_field(11)
    scene_level: int = betterproto.uint32_field(13)
    dungeon_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class DungeonSettleExhibitionInfo(betterproto.Message):
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(2)
    player_info: "OnlinePlayerInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class DungeonSettleNotify(betterproto.Message):
    exhibition_info_list: List[
        "DungeonSettleExhibitionInfo"
    ] = betterproto.message_field(12)
    settle_show: Dict[int, "ParamList"] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    strengthen_point_data_map: Dict[int, "StrengthenPointData"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    result: int = betterproto.uint32_field(15)
    use_time: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(7)
    fail_cond_list: List[int] = betterproto.uint32_field(8)
    create_player_uid: int = betterproto.uint32_field(9)
    is_success: bool = betterproto.bool_field(4)
    close_time: int = betterproto.uint32_field(6)
    tower_level_end_notify: "TowerLevelEndNotify" = betterproto.message_field(
        281, group="detail"
    )
    trial_avatar_first_pass_dungeon_notify: "TrialAvatarFirstPassDungeonNotify" = (
        betterproto.message_field(1737, group="detail")
    )
    channeller_slab_loop_dungeon_result_info: "ChannellerSlabLoopDungeonResultInfo" = (
        betterproto.message_field(1045, group="detail")
    )
    effigy_challenge_dungeon_result_info: "EffigyChallengeDungeonResultInfo" = (
        betterproto.message_field(955, group="detail")
    )
    roguelike_dungeon_settle_info: "RoguelikeDungeonSettleInfo" = (
        betterproto.message_field(799, group="detail")
    )
    crystal_link_settle_info: "CrystalLinkSettleInfo" = betterproto.message_field(
        628, group="detail"
    )
    summer_time_v2_dungeon_settle_info: "SummerTimeV2DungeonSettleInfo" = (
        betterproto.message_field(96, group="detail")
    )
    instable_spray_settle_info: "InstableSpraySettleInfo" = betterproto.message_field(
        1797, group="detail"
    )
    wind_field_dungeon_settle_info: "WindFieldDungeonSettleInfo" = (
        betterproto.message_field(1009, group="detail")
    )
    effigy_challenge_v2_settle_info: "EffigyChallengeV2SettleInfo" = (
        betterproto.message_field(1839, group="detail")
    )
    team_chain_settle_info: "TeamChainSettleInfo" = betterproto.message_field(
        1320, group="detail"
    )


@dataclass(eq=False, repr=False)
class DungeonShowReminderNotify(betterproto.Message):
    reminder_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DungeonSlipRevivePointActivateReq(betterproto.Message):
    slip_revive_point_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DungeonSlipRevivePointActivateRsp(betterproto.Message):
    slip_revive_point_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class DungeonWayPointActivateReq(betterproto.Message):
    way_point_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class DungeonWayPointActivateRsp(betterproto.Message):
    way_point_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class DungeonWayPointNotify(betterproto.Message):
    active_way_point_list: List[int] = betterproto.uint32_field(15)
    is_add: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class DynamicLayerNodes(betterproto.Message):
    nodes: List["DynamicSvoNode"] = betterproto.message_field(8)
    level: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class DynamicNodes(betterproto.Message):
    nodes: List["DynamicLayerNodes"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class DynamicSvoNode(betterproto.Message):
    area: int = betterproto.int32_field(13)
    index: int = betterproto.int64_field(11)
    refer_pos: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class Ebbehkpkpfk(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    gallery_id: int = betterproto.uint32_field(7)
    difficulty: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EchoNotify(betterproto.Message):
    content: str = betterproto.string_field(4)
    seq_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EchoShellInfo(betterproto.Message):
    unk3300_nefbjpkbehf: List[int] = betterproto.uint32_field(10)
    unk3300_oocdfanffdg: List[int] = betterproto.uint32_field(5)
    taken_reward_list: List[int] = betterproto.uint32_field(14)
    summer_time_dungeon_list: List["SummerTimeDungeonInfo"] = betterproto.message_field(
        13
    )


@dataclass(eq=False, repr=False)
class EchoShellTakeRewardReq(betterproto.Message):
    reward_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EchoShellTakeRewardRsp(betterproto.Message):
    reward_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EchoShellUpdateNotify(betterproto.Message):
    shell_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class Ecldfpkcope(betterproto.Message):
    attack_result: "AttackResult" = betterproto.message_field(13)
    peer_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class Edcgbljechi(betterproto.Message):
    entity_id: int = betterproto.uint32_field(12)
    aemmidgkohc: int = betterproto.uint32_field(7)
    pos: "Vector" = betterproto.message_field(2)
    face_angle_compact: int = betterproto.int32_field(3)
    normalized_time_compact: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Eefbmlfkdfg(betterproto.Message):
    is_cg_viewed: bool = betterproto.bool_field(1)
    level_id: int = betterproto.uint32_field(11)
    ggfnmmfjggi: List["Emfjmdelojn"] = betterproto.message_field(8)
    is_open: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class EffigyChallengeDungeonResultInfo(betterproto.Message):
    challenge_max_score: int = betterproto.uint32_field(6)
    is_in_time_limit: bool = betterproto.bool_field(1)
    challenge_score: int = betterproto.uint32_field(14)
    is_success: bool = betterproto.bool_field(2)
    challenge_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EffigyChallengeInfo(betterproto.Message):
    unk3300_mbhbnipepnj: int = betterproto.uint32_field(5)
    unk3300_eogapbofhop: int = betterproto.uint32_field(12)
    unk3300_bmpckgjagpe: int = betterproto.uint32_field(8)
    unk3300_aieegibmofh: int = betterproto.uint32_field(13)
    unk3300_micpckioeja: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class EffigyChallengeInfoNotify(betterproto.Message):
    challenge_score: int = betterproto.uint32_field(12)
    condition_id_list: List[int] = betterproto.uint32_field(2)
    difficulty_id: int = betterproto.uint32_field(7)
    challenge_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EffigyChallengeResultNotify(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(14)
    challenge_max_score: int = betterproto.uint32_field(1)
    challenge_score: int = betterproto.uint32_field(5)
    is_success: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2ChooseSkillReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(15)
    challenge_mode_skill_no: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2ChooseSkillRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    level_id: int = betterproto.uint32_field(14)
    challenge_mode_skill_no: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2DungeonInfoNotify(betterproto.Message):
    level_id: int = betterproto.uint32_field(6)
    challenge_mode_difficulty: int = betterproto.uint32_field(4)
    skill_no: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2EnterDungeonReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(10)
    challenge_mode_skill_no: int = betterproto.uint32_field(12)
    challenge_mode_difficulty: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2EnterDungeonRsp(betterproto.Message):
    challenge_mode_skill_no: int = betterproto.uint32_field(3)
    level_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(15)
    challenge_mode_difficulty: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2LevelData(betterproto.Message):
    caepnfpolia: bool = betterproto.bool_field(13)
    ondofpcjekh: int = betterproto.uint32_field(14)
    level_id: int = betterproto.uint32_field(15)
    nbnfhjjkbam: int = betterproto.uint32_field(5)
    acjpagacphl: int = betterproto.uint32_field(7)
    lhhbbgpaiin: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2RestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class EffigyChallengeV2RestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2SettleInfo(betterproto.Message):
    unk3300_mhoiipjkamn: int = betterproto.uint32_field(14)
    unk3300_akmpcdikbjd: bool = betterproto.bool_field(5)
    unk3300_onkpgfoldfl: int = betterproto.uint32_field(15)
    unk3300_pheimlokijg: int = betterproto.uint32_field(10)
    challenge_mode_difficulty: int = betterproto.uint32_field(13)
    unk3300_ngbkndhjpcp: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class EffigyDailyInfo(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(15)
    is_first_pass_reward_taken: bool = betterproto.bool_field(2)
    unk3300_nebcdalefec: int = betterproto.uint32_field(10)
    day_index: int = betterproto.uint32_field(14)
    challenge_max_score: int = betterproto.uint32_field(6)
    begin_time: int = betterproto.uint32_field(7)
    unk3300_nnhiccgelhp: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class EffigyInfo(betterproto.Message):
    taken_reward_index_list: List[int] = betterproto.uint32_field(7)
    daily_info_list: List["EffigyDailyInfo"] = betterproto.message_field(9)
    cur_score: int = betterproto.uint32_field(5)
    last_difficulty_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class Efjnigdjclh(betterproto.Message):
    type: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)
    iofedkimpfp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class Eibbnbebhgd(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(13)
    ljppmbgmjpk: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class Eicafcbbjmg(betterproto.Message):
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class Eiebdojcdbh(betterproto.Message):
    aicefchaici: bool = betterproto.bool_field(1)
    kcllbppiboo: List["Idoelhbancp"] = betterproto.message_field(999)


@dataclass(eq=False, repr=False)
class Ekldjgjblnf(betterproto.Message):
    dmkljglcbij: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ElectroherculesBattleInfo(betterproto.Message):
    stage_info_list: List["Kjjkcdhjmgd"] = betterproto.message_field(7)
    pdpfimhpajd: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class ElectroherculesBattleSelectDifficultyReq(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class ElectroherculesBattleSelectDifficultyRsp(betterproto.Message):
    meclfjmmlmh: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ElectroherculesBattleSettleNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class ElectroherculesStartParam(betterproto.Message):
    difficulty: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ElementReliquaryRequest(betterproto.Message):
    element_type: int = betterproto.uint32_field(12)
    equip_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ElementReliquaryResponse(betterproto.Message):
    element_type: int = betterproto.uint32_field(4)
    nbbpegfkpac: List[
        "GameplayRecommendationReliquaryMainPropData"
    ] = betterproto.message_field(3)
    equip_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class Elfndeiadmp(betterproto.Message):
    rot: "Vector" = betterproto.message_field(10)
    pos: "Vector" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class Emfjmdelojn(betterproto.Message):
    difficulty: int = betterproto.uint32_field(7)
    is_open: bool = betterproto.bool_field(1)
    cost_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class Enahefogjae(betterproto.Message):
    reason: "GalleryStopReason" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class EndCameraSceneLookNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class EndCoinCollectPlaySingleModeReq(betterproto.Message):
    multistage_play_index: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EndCoinCollectPlaySingleModeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class Enhficgokee(betterproto.Message):
    reg_platform: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EnterChessDungeonReq(betterproto.Message):
    map_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EnterChessDungeonRsp(betterproto.Message):
    map_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class EnterCustomDungeonReq(betterproto.Message):
    enter_type: "EnterCustomDungeonType" = betterproto.enum_field(2)
    dungeon_id: int = betterproto.uint32_field(13)
    dungeon_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class EnterCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    enter_type: "EnterCustomDungeonType" = betterproto.enum_field(4)
    room_cost_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    custom_dungeon: "CustomDungeon" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class EnterFishingReq(betterproto.Message):
    fish_pool_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EnterFishingRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    fish_pool_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EnterFungusFighterPlotDungeonReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(11)
    fungus_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class EnterFungusFighterPlotDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    fungus_id_list: List[int] = betterproto.uint32_field(13)
    dungeon_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EnterFungusFighterTrainingDungeonReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EnterFungusFighterTrainingDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    dungeon_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class EnterIrodoriChessDungeonReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    is_hard_map: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class EnterIrodoriChessDungeonRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(4)
    is_hard_map: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class EnterMechanicusDungeonReq(betterproto.Message):
    difficult_level: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EnterMechanicusDungeonRsp(betterproto.Message):
    difficult_level: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(8)
    dungeon_id: int = betterproto.uint32_field(9)
    wrong_uid: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class EnterRogueDiaryDungeonReq(betterproto.Message):
    chosen_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(5)
    chosen_card_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EnterRogueDiaryDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class EnterRoguelikeDungeonNotify(betterproto.Message):
    onstage_avatar_guid_list: List[int] = betterproto.uint64_field(11)
    cell_info_map: Dict[int, "RogueCellInfo"] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    dungeon_id: int = betterproto.uint32_field(2)
    unk3300_pkdlojadipa: int = betterproto.uint32_field(15)
    unk3300_klfdkocgahn: int = betterproto.uint32_field(917)
    unk3300_dbdabniinel: int = betterproto.uint32_field(3)
    bonus_resource_prop: float = betterproto.float_field(1)
    revise_monster_level: int = betterproto.uint32_field(1665)
    stage_id: int = betterproto.uint32_field(8)
    explored_cell_list: List[int] = betterproto.uint32_field(5)
    backstage_avatar_guid_list: List[int] = betterproto.uint64_field(7)
    cur_level: int = betterproto.uint32_field(12)
    unk3300_gbhhledagam: bool = betterproto.bool_field(6)
    rune_record_list: List["RoguelikeRuneRecord"] = betterproto.message_field(4)
    unk3300_iiijddnjebb: int = betterproto.uint32_field(13)
    unk3300_pkpokoaaokf: bool = betterproto.bool_field(379)


@dataclass(eq=False, repr=False)
class EnterSceneDoneReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class EnterSceneDoneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    enter_scene_token: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EnterScenePeerNotify(betterproto.Message):
    host_peer_id: int = betterproto.uint32_field(10)
    dest_scene_id: int = betterproto.uint32_field(8)
    enter_scene_token: int = betterproto.uint32_field(9)
    peer_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class EnterSceneReadyReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EnterSceneReadyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    enter_scene_token: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EnterSceneWeatherAreaNotify(betterproto.Message):
    weather_gadget_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class EnterTransPointRegionNotify(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EnterTrialAvatarActivityDungeonReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(3)
    enter_point_id: int = betterproto.uint32_field(13)
    trial_avatar_index_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EnterTrialAvatarActivityDungeonRsp(betterproto.Message):
    trial_avatar_index_id: int = betterproto.uint32_field(8)
    activity_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class EnterWorldAreaReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    area_type: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class EnterWorldAreaRsp(betterproto.Message):
    area_type: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(12)
    area_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class EntityAbilityInvokeEntry(betterproto.Message):
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(4)
    entity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EntityAiKillSelfNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class EntityAiSyncNotify(betterproto.Message):
    local_avatar_alerted_monster_list: List[int] = betterproto.uint32_field(8)
    info_list: List["AiSyncInfo"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class EntityAuthorityChangeNotify(betterproto.Message):
    authority_change_list: List["AuthorityChange"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EntityAuthorityInfo(betterproto.Message):
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(1)
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(2)
    ai_info: "SceneEntityAiInfo" = betterproto.message_field(3)
    born_pos: "Vector" = betterproto.message_field(4)
    pose_para_list: List["AnimatorParameterValueInfoPair"] = betterproto.message_field(
        5
    )
    client_extra_info: "EntityClientExtraInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class EntityClientData(betterproto.Message):
    wind_change_scene_time: int = betterproto.uint32_field(1)
    windmill_sync_angle: float = betterproto.float_field(2)
    wind_change_target_level: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class EntityClientExtraInfo(betterproto.Message):
    skill_anchor_position: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EntityConfigHashEntry(betterproto.Message):
    entity_id: int = betterproto.uint32_field(3)
    job_id: int = betterproto.uint32_field(12)
    hash_value: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class EntityConfigHashNotify(betterproto.Message):
    avatar_entry_list: List["EntityConfigHashEntry"] = betterproto.message_field(12)
    ability_entry_list: List["EntityConfigHashEntry"] = betterproto.message_field(7)
    combat_entry_list: List["EntityConfigHashEntry"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EntityEnvironmentInfo(betterproto.Message):
    json_climate_type: int = betterproto.uint32_field(1)
    climate_area_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EntityFightPropChangeReasonNotify(betterproto.Message):
    prop_delta: float = betterproto.float_field(4)
    reason: "PropChangeReason" = betterproto.enum_field(13)
    entity_id: int = betterproto.uint32_field(12)
    param_list: List[int] = betterproto.uint32_field(1)
    change_hp_reason: "ChangeHpReason" = betterproto.enum_field(6)
    change_energy_reason: "ChangeEnergyReason" = betterproto.enum_field(3)
    prop_type: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class EntityFightPropNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(7)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class EntityFightPropUpdateNotify(betterproto.Message):
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EntityForceSyncReq(betterproto.Message):
    motion_info: "MotionInfo" = betterproto.message_field(13)
    scene_time: int = betterproto.uint32_field(11)
    entity_id: int = betterproto.uint32_field(8)
    room_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EntityForceSyncRsp(betterproto.Message):
    fail_motion: "MotionInfo" = betterproto.message_field(1)
    retcode: int = betterproto.int32_field(3)
    entity_id: int = betterproto.uint32_field(6)
    scene_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EntityJumpNotify(betterproto.Message):
    rot: "Vector" = betterproto.message_field(8)
    pos: "Vector" = betterproto.message_field(5)
    entity_id: int = betterproto.uint32_field(11)
    jump_type: "Type" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class EntityMoveFailInfo(betterproto.Message):
    fail_motion: "MotionInfo" = betterproto.message_field(2)
    scene_time: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(3)
    entity_id: int = betterproto.uint32_field(6)
    reliable_seq: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EntityMoveInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    motion_info: "MotionInfo" = betterproto.message_field(2)
    scene_time: int = betterproto.uint32_field(3)
    reliable_seq: int = betterproto.uint32_field(4)
    is_reliable: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class EntityMoveRoomNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)
    dest_room_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class EntityPropNotify(betterproto.Message):
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    entity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EntityRendererChangedInfo(betterproto.Message):
    changed_renderers: Dict[str, int] = betterproto.map_field(
        1, betterproto.TYPE_STRING, betterproto.TYPE_UINT32
    )
    visibility_count: int = betterproto.uint32_field(2)
    is_cached: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class EntityTagChangeNotify(betterproto.Message):
    tag: str = betterproto.string_field(14)
    entity_id: int = betterproto.uint32_field(11)
    is_add: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class Equip(betterproto.Message):
    reliquary: "Reliquary" = betterproto.message_field(1, group="detail")
    weapon: "Weapon" = betterproto.message_field(2, group="detail")
    is_locked: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class EquipParam(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_num: int = betterproto.uint32_field(2)
    item_level: int = betterproto.uint32_field(3)
    promote_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EquipRoguelikeRuneReq(betterproto.Message):
    rune_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class EquipRoguelikeRuneRsp(betterproto.Message):
    rune_list: List[int] = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class EvtAiSyncCombatThreatInfoNotify(betterproto.Message):
    combat_threat_info_map: Dict[int, "AiThreatInfo"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class EvtAiSyncSkillCdNotify(betterproto.Message):
    ai_cd_map: Dict[int, "AiSkillCdInfo"] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class EvtAnimatorParameterInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(14)
    name_id: int = betterproto.int32_field(2)
    value: "AnimatorParameterValueInfo" = betterproto.message_field(12)
    is_server_cache: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class EvtAnimatorParameterNotify(betterproto.Message):
    animator_param_info: "EvtAnimatorParameterInfo" = betterproto.message_field(10)
    forward_type: "ForwardType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class EvtAnimatorStateChangedInfo(betterproto.Message):
    normalized_time_compact: int = betterproto.uint32_field(9)
    fade_duration: float = betterproto.float_field(8)
    entity_id: int = betterproto.uint32_field(11)
    unk3300_klmekmgfgpd: bool = betterproto.bool_field(13)
    unk3300_meopkedjcin: bool = betterproto.bool_field(12)
    face_angle_compact: int = betterproto.int32_field(3)
    to_state_hash: int = betterproto.uint32_field(4)
    layer: int = betterproto.uint32_field(5)
    pos: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class EvtAnimatorStateChangedNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(6)
    evt_animator_state_changed_info: "EvtAnimatorStateChangedInfo" = (
        betterproto.message_field(8)
    )


@dataclass(eq=False, repr=False)
class EvtAvatarEnterFocusNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(14)
    unk3300_nalgjblgnji: bool = betterproto.bool_field(5)
    unk3300_gghcegjehnd: bool = betterproto.bool_field(13)
    unk3300_npbldgpcdoc: bool = betterproto.bool_field(6)
    unk3300_ijhhdfdijma: bool = betterproto.bool_field(10)
    unk3300_kmafbmkjdak: bool = betterproto.bool_field(4)
    unk3300_fhhddnenedd: bool = betterproto.bool_field(12)
    unk3300_lnlookdhjgf: bool = betterproto.bool_field(11)
    unk3300_cdajjhipikh: bool = betterproto.bool_field(9)
    unk3300_nlnibjafadg: bool = betterproto.bool_field(15)
    focus_forward: "Vector" = betterproto.message_field(8)
    entity_id: int = betterproto.uint32_field(2)
    unk3300_ooopphejkdi: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class EvtAvatarExitFocusNotify(betterproto.Message):
    finish_forward: "Vector" = betterproto.message_field(7)
    entity_id: int = betterproto.uint32_field(13)
    forward_type: "ForwardType" = betterproto.enum_field(14)


@dataclass(eq=False, repr=False)
class EvtAvatarLockChairReq(betterproto.Message):
    chair_id: int = betterproto.uint64_field(3)
    position: "Vector" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class EvtAvatarLockChairRsp(betterproto.Message):
    position: "Vector" = betterproto.message_field(3)
    chair_id: int = betterproto.uint64_field(15)
    retcode: int = betterproto.int32_field(12)
    entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EvtAvatarSitDownNotify(betterproto.Message):
    position: "Vector" = betterproto.message_field(2)
    entity_id: int = betterproto.uint32_field(4)
    chair_id: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class EvtAvatarStandUpNotify(betterproto.Message):
    chair_id: int = betterproto.uint64_field(11)
    perform_id: int = betterproto.int32_field(14)
    direction: int = betterproto.int32_field(5)
    entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EvtAvatarUpdateFocusNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(5)
    forward_type: "ForwardType" = betterproto.enum_field(15)
    focus_forward: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EvtBeingHealedNotify(betterproto.Message):
    source_id: int = betterproto.uint32_field(13)
    real_heal_amount: float = betterproto.float_field(12)
    heal_amount: float = betterproto.float_field(11)
    target_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EvtBeingHitInfo(betterproto.Message):
    attack_result: "AttackResult" = betterproto.message_field(5)
    peer_id: int = betterproto.uint32_field(7)
    frame_num: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EvtBeingHitNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(4)
    being_hit_info: "EvtBeingHitInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class EvtBeingHitsCombineNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(3)
    evt_being_hit_info_list: List["EvtBeingHitInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class EvtBulletDeactiveNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(4)
    disappear_pos: "Vector" = betterproto.message_field(5)
    forward_type: "ForwardType" = betterproto.enum_field(12)


@dataclass(eq=False, repr=False)
class EvtBulletHitNotify(betterproto.Message):
    hit_normal: "Vector" = betterproto.message_field(4)
    hit_entity_id: int = betterproto.uint32_field(14)
    hit_box_index: int = betterproto.int32_field(15)
    forward_type: "ForwardType" = betterproto.enum_field(6)
    entity_id: int = betterproto.uint32_field(10)
    forward_peer: int = betterproto.uint32_field(13)
    single_bullet_id: int = betterproto.uint32_field(12)
    hit_collider_type: "HitColliderType" = betterproto.enum_field(8)
    hit_point: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EvtBulletMoveNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(11)
    cur_pos: "Vector" = betterproto.message_field(13)
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EvtCostStaminaNotify(betterproto.Message):
    cost_stamina: float = betterproto.float_field(8)
    skill_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class EvtCreateGadgetNotify(betterproto.Message):
    target_lock_point_index: int = betterproto.uint32_field(6)
    is_async_load: bool = betterproto.bool_field(137)
    owner_entity_id: int = betterproto.uint32_field(3)
    init_euler_angles: "Vector" = betterproto.message_field(11)
    prop_owner_entity_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(15)
    forward_type: "ForwardType" = betterproto.enum_field(7)
    camp_id: int = betterproto.uint32_field(14)
    config_id: int = betterproto.uint32_field(13)
    target_entity_id: int = betterproto.uint32_field(10)
    guid: int = betterproto.uint64_field(5)
    unk3300_dlbijfoonba: bool = betterproto.bool_field(2)
    init_pos: "Vector" = betterproto.message_field(9)
    entity_id: int = betterproto.uint32_field(4)
    is_peer_id_from_player: bool = betterproto.bool_field(771)
    target_lock_point_index_list: List[int] = betterproto.uint32_field(1252)
    unk3300_ejnbiglgmii: bool = betterproto.bool_field(8)
    camp_type: int = betterproto.uint32_field(12)
    target_entity_id_list: List[int] = betterproto.uint32_field(1591)


@dataclass(eq=False, repr=False)
class EvtDestroyGadgetNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(11)
    entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EvtDestroyServerGadgetNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class EvtDoSkillSuccNotify(betterproto.Message):
    skill_id: int = betterproto.uint32_field(13)
    forward_type: "ForwardType" = betterproto.enum_field(5)
    caster_id: int = betterproto.uint32_field(2)
    forward: "Vector" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class EvtEntityRenderersChangedNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(10)
    entity_id: int = betterproto.uint32_field(4)
    is_server_cache: bool = betterproto.bool_field(8)
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class EvtEntityStartDieEndNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(11)
    immediately: bool = betterproto.bool_field(9)
    forward_type: "ForwardType" = betterproto.enum_field(15)
    die_state_flag: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EvtFaceToDirInfo(betterproto.Message):
    face_dir: "Vector" = betterproto.message_field(2)
    entity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class EvtFaceToDirNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(14)
    evt_face_to_dir_info: "EvtFaceToDirInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EvtFaceToEntityNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(8)
    face_entity_id: int = betterproto.uint32_field(4)
    forward_type: "ForwardType" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class EvtLocalGadgetOwnerLeaveSceneNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class EvtRushMoveInfo(betterproto.Message):
    velocity: "Vector" = betterproto.message_field(13)
    entity_id: int = betterproto.uint32_field(5)
    unk3300_fgapbjipjfg: "Vector" = betterproto.message_field(6)
    time_range: float = betterproto.float_field(10)
    face_angle_compact: int = betterproto.int32_field(9)
    pos: "Vector" = betterproto.message_field(14)
    unk3300_nebmddgpbon: "Vector" = betterproto.message_field(8)
    state_name_hash: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class EvtRushMoveNotify(betterproto.Message):
    evt_rush_move_info: "EvtRushMoveInfo" = betterproto.message_field(13)
    forward_type: "ForwardType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class EvtSetAttackTargetInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(14)
    attack_target_id: int = betterproto.uint32_field(8)
    select_point_index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EvtSetAttackTargetNotify(betterproto.Message):
    evt_set_attack_target_info: "EvtSetAttackTargetInfo" = betterproto.message_field(1)
    forward_type: "ForwardType" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class ExclusiveRuleNotify(betterproto.Message):
    compound_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ExecuteGadgetLuaReq(betterproto.Message):
    param2: int = betterproto.int32_field(15)
    param3: int = betterproto.int32_field(8)
    source_entity_id: int = betterproto.uint32_field(6)
    param1: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class ExecuteGadgetLuaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class ExecuteGroupTriggerReq(betterproto.Message):
    param3: int = betterproto.int32_field(2)
    param1: int = betterproto.int32_field(7)
    source_entity_id: int = betterproto.uint32_field(8)
    param2: int = betterproto.int32_field(4)
    target_entity_id: int = betterproto.uint32_field(3)
    source_name: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class ExecuteGroupTriggerRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class ExhibitionDisplayInfo(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    param: int = betterproto.uint32_field(2)
    detail_param: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ExitCustomDungeonTryReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ExitCustomDungeonTryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class ExitFishingReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ExitFishingRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class ExitSceneWeatherAreaNotify(betterproto.Message):
    weather_gadget_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ExitTransPointRegionNotify(betterproto.Message):
    point_id: int = betterproto.uint32_field(2)
    scene_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ExpeditionAssistInfo(betterproto.Message):
    assist_time: int = betterproto.uint32_field(4)
    avatar_id: int = betterproto.uint32_field(11)
    target_nick_name: str = betterproto.string_field(9)
    costume_id: int = betterproto.uint32_field(15)
    online_id: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class ExpeditionChallengeEnterRegionNotify(betterproto.Message):
    id: int = betterproto.uint32_field(7)
    is_puzzle_finished: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class ExpeditionChallengeFinishedNotify(betterproto.Message):
    id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ExpeditionChallengeInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(11)
    id: int = betterproto.uint32_field(13)
    is_finished: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class ExpeditionInfo(betterproto.Message):
    exceeded_item_type_list: List[
        "ExpeditionChallengeInfo"
    ] = betterproto.message_field(2)
    left_monsters: bool = betterproto.bool_field(12)
    unk3300_mnpbcnedkaj: int = betterproto.uint32_field(3)
    content_close_time: int = betterproto.uint32_field(9)
    unk3300_gjlcajofckl: int = betterproto.uint32_field(4)
    path_info_list: List["ExpeditionPathInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ExpeditionPathInfo(betterproto.Message):
    start_time: int = betterproto.uint32_field(15)
    unk3300_lfifdgagfdc: int = betterproto.uint32_field(7)
    path_id: int = betterproto.uint32_field(11)
    avatar_id_list: List[int] = betterproto.uint32_field(2)
    challenge_id: int = betterproto.uint32_field(3)
    state: "ExpeditionState" = betterproto.enum_field(9)
    unk3300_aiejkadflkg: int = betterproto.uint32_field(10)
    unk3300_lkahoebnbbi: int = betterproto.uint32_field(1)
    unk3300_afgpgiigaka: int = betterproto.uint32_field(14)
    bonus_probability: float = betterproto.float_field(8)


@dataclass(eq=False, repr=False)
class ExpeditionRecallReq(betterproto.Message):
    path_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ExpeditionRecallRsp(betterproto.Message):
    path_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class ExpeditionStartReq(betterproto.Message):
    unk3300_aiejkadflkg: int = betterproto.uint32_field(4)
    path_id: int = betterproto.uint32_field(10)
    avatar_id_list: List[int] = betterproto.uint32_field(8)
    unk3300_afgpgiigaka: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ExpeditionStartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    unk3300_afgpgiigaka: int = betterproto.uint32_field(7)
    unk3300_aiejkadflkg: int = betterproto.uint32_field(9)
    path_id: int = betterproto.uint32_field(4)
    avatar_id_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ExpeditionTakeRewardReq(betterproto.Message):
    path_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExpeditionTakeRewardRsp(betterproto.Message):
    path_id: int = betterproto.uint32_field(14)
    reward_level: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(8)
    is_bonus: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class Fadihkcgedf(betterproto.Message):
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class FallInfo(betterproto.Message):
    end_time: int = betterproto.uint32_field(6)
    scene_player_fall_info_map: Dict[int, "FallPlayerInfo"] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class FallPlayerBrief(betterproto.Message):
    uid: int = betterproto.uint32_field(12)
    is_ground: bool = betterproto.bool_field(8)
    score: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class FallPlayerInfo(betterproto.Message):
    time_cost: int = betterproto.uint32_field(10)
    uid: int = betterproto.uint32_field(4)
    ball_catch_count_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cur_score: int = betterproto.uint32_field(11)
    is_ground: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class FallSettleInfo(betterproto.Message):
    player_info: "OnlinePlayerInfo" = betterproto.message_field(7)
    remain_time: int = betterproto.uint32_field(14)
    uid: int = betterproto.uint32_field(3)
    catch_count: int = betterproto.uint32_field(10)
    flower_ring_catch_count_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    final_score: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class Fbcaakcbpmh(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class Fbkjenfaakn(betterproto.Message):
    ehbfihcdoli: List[int] = betterproto.uint32_field(12)
    avatar_info_list: List["Eibbnbebhgd"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class FeatureBlockInfo(betterproto.Message):
    feature_type: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Fekjjacpmji(betterproto.Message):
    mgljfjenkkl: float = betterproto.float_field(14)
    hldifipdbfb: float = betterproto.float_field(7)


@dataclass(eq=False, repr=False)
class FetterData(betterproto.Message):
    fetter_id: int = betterproto.uint32_field(1)
    fetter_state: int = betterproto.uint32_field(2)
    cond_index_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class Ffjppijojli(betterproto.Message):
    furniture_id: int = betterproto.uint32_field(1)
    spawn_pos: "Vector" = betterproto.message_field(2)
    spawn_rot: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class Fgjkdicfadh(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    milgfplpdhp: List[int] = betterproto.uint64_field(2)
    dljdncgnbgk: List[int] = betterproto.uint64_field(3)
    leilkaldnem: List["Cbniffcnoec"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class Fgpnddnebjo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(8)
    mjehpphliia: "Vector" = betterproto.message_field(1)
    djmnfklkcaf: int = betterproto.uint32_field(2)
    rot: "Vector" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class FightPropPair(betterproto.Message):
    prop_type: int = betterproto.uint32_field(1)
    prop_value: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class FindHilichurlAcceptQuestNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FindHilichurlDayContentInfo(betterproto.Message):
    start_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FindHilichurlFinishSecondQuestNotify(betterproto.Message):
    day_index: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class FindHilichurlInfo(betterproto.Message):
    day_index: int = betterproto.uint32_field(1)
    is_end_quest_accept: bool = betterproto.bool_field(14)
    content_close_time: int = betterproto.uint32_field(8)
    left_monsters: bool = betterproto.bool_field(15)
    day_content_info_list: List[
        "FindHilichurlDayContentInfo"
    ] = betterproto.message_field(2)
    min_open_player_level: int = betterproto.uint32_field(4)
    player_day_index: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FinishDeliveryNotify(betterproto.Message):
    day_index: int = betterproto.uint32_field(2)
    finished_quest_index: int = betterproto.uint32_field(4)
    schedule_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FinishedParentQuestNotify(betterproto.Message):
    parent_quest_list: List["ParentQuest"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class FinishedParentQuestUpdateNotify(betterproto.Message):
    parent_quest_list: List["ParentQuest"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class FinishedTalkIdListNotify(betterproto.Message):
    finished_talk_id_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FinishLanternProjectionReq(betterproto.Message):
    finish_time: int = betterproto.uint32_field(15)
    level_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FinishLanternProjectionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class FinishMainCoopReq(betterproto.Message):
    id: int = betterproto.uint32_field(11)
    ending_save_point_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FinishMainCoopRsp(betterproto.Message):
    id: int = betterproto.uint32_field(12)
    ending_save_point_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class FireworksLaunchDataNotify(betterproto.Message):
    last_use_scheme_id: int = betterproto.uint32_field(6)
    scheme_data_list: List["FireworksLaunchSchemeData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FireworksLaunchParam(betterproto.Message):
    type: "FireworksLaunchParamType" = betterproto.enum_field(5)
    value: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class FireworksLaunchSchemeData(betterproto.Message):
    scheme_id: int = betterproto.uint32_field(2)
    launch_param_list: List["FireworksLaunchParam"] = betterproto.message_field(13)
    fireworks_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FireworksReformData(betterproto.Message):
    reform_param_list: List["FireworksReformParam"] = betterproto.message_field(2)
    id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FireworksReformDataNotify(betterproto.Message):
    fireworks_reform_data_list: List["FireworksReformData"] = betterproto.message_field(
        7
    )


@dataclass(eq=False, repr=False)
class FireworksReformParam(betterproto.Message):
    value: int = betterproto.int32_field(8)
    type: "FireworksReformParamType" = betterproto.enum_field(11)


@dataclass(eq=False, repr=False)
class FirstStageInfo(betterproto.Message):
    score: int = betterproto.uint32_field(13)
    unk3300_hikadhblpeb: int = betterproto.uint32_field(8)
    unk3300_ipajlkobdkc: int = betterproto.uint32_field(3)
    unk3300_nilgnhopgld: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FishAttractNotify(betterproto.Message):
    pos: "Vector" = betterproto.message_field(3)
    fish_id_list: List[int] = betterproto.uint32_field(5)
    uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FishBaitGoneNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FishBattleBeginReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FishBattleBeginRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class FishBattleEndReq(betterproto.Message):
    battle_result: "FishBattleResult" = betterproto.enum_field(11)
    max_bonus_time: int = betterproto.uint32_field(10)
    is_always_bonus: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class FishBattleEndRsp(betterproto.Message):
    reward_item_list: List["ItemParam"] = betterproto.message_field(3)
    unk3300_mdckkpgnkgl: List["ItemParam"] = betterproto.message_field(12)
    battle_result: "FishBattleResult" = betterproto.enum_field(10)
    no_reward_reason: "FishNoRewardReason" = betterproto.enum_field(5)
    is_got_reward: bool = betterproto.bool_field(8)
    retcode: int = betterproto.int32_field(2)
    unk3300_abbbgobdjec: List["ItemParam"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class FishBiteReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FishBiteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class FishCastRodReq(betterproto.Message):
    rod_entity_id: int = betterproto.uint32_field(2)
    pos: "Vector" = betterproto.message_field(1)
    unk3300_icaleibjcda: int = betterproto.uint32_field(15)
    unk3300_pjfheddfobm: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FishCastRodRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class FishChosenNotify(betterproto.Message):
    fish_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class FishEscapeNotify(betterproto.Message):
    pos: "Vector" = betterproto.message_field(9)
    uid: int = betterproto.uint32_field(15)
    fish_id_list: List[int] = betterproto.uint32_field(5)
    reason: "FishEscapeReason" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class FishInfo(betterproto.Message):
    pjkdcbfhaoo: int = betterproto.uint32_field(4)
    defebhbifge: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FishingGallerySettleInfo(betterproto.Message):
    fishing_score_list: List["FishingScore"] = betterproto.message_field(4)
    fish_map: Dict[int, "FishInfo"] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class FishingGallerySettleNotify(betterproto.Message):
    settle_info: "FishingGallerySettleInfo" = betterproto.message_field(3)
    gallery_id: int = betterproto.uint32_field(7)
    level_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FishingScore(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(13)
    bcjgjjefnci: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FishPoolDataNotify(betterproto.Message):
    today_fish_num: int = betterproto.uint32_field(10)
    entity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FishPoolInfo(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    fish_area_list: List[int] = betterproto.uint32_field(2)
    today_fish_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FishtankFishInfo(betterproto.Message):
    fish_distance_from_water: float = betterproto.float_field(1)
    fish_scale: float = betterproto.float_field(2)
    initial_rotation_y: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class Fjmgebiamdb(betterproto.Message):
    kcllbppiboo: List["Idoelhbancp"] = betterproto.message_field(999)


@dataclass(eq=False, repr=False)
class Fkjcfglhnpm(betterproto.Message):
    stage_info_list: List["Dmmagieopdg"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class FleurFairBalloonInfo(betterproto.Message):
    best_score: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FleurFairBalloonSettleInfo(betterproto.Message):
    settle_info: "BalloonSettleInfo" = betterproto.message_field(13)
    is_new_record: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class FleurFairBalloonSettleNotify(betterproto.Message):
    minigame_id: int = betterproto.uint32_field(10)
    settle_info_map: Dict[int, "FleurFairBalloonSettleInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class FleurFairBossSettleInfo(betterproto.Message):
    stat_info_list: List["FleurFairPlayerStatInfo"] = betterproto.message_field(3)
    reward_token_num: int = betterproto.uint32_field(4)
    energy: int = betterproto.uint32_field(8)
    cost_time: int = betterproto.uint32_field(2)
    is_success: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class FleurFairBuffEnergyNotify(betterproto.Message):
    energy: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FleurFairChapterInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(10)
    chapter_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class FleurFairDungeonSectionInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(11)
    section_id: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class FleurFairFallInfo(betterproto.Message):
    best_score: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class FleurFairFallSettleInfo(betterproto.Message):
    settle_info: "FallSettleInfo" = betterproto.message_field(11)
    is_new_record: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class FleurFairFallSettleNotify(betterproto.Message):
    settle_info_map: Dict[int, "FleurFairFallSettleInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    minigame_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class FleurFairFinishGalleryStageNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FleurFairGallerySettleInfo(betterproto.Message):
    is_success: bool = betterproto.bool_field(5)
    energy: int = betterproto.uint32_field(7)
    energy_stat_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    gallery_stage_count: int = betterproto.uint32_field(14)
    gallery_stage_index: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class FleurFairInfo(betterproto.Message):
    gpjbakimcgp: int = betterproto.uint32_field(10)
    preview_stage_index: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    left_monsters: bool = betterproto.bool_field(7)
    chapter_info_list: List["FleurFairChapterInfo"] = betterproto.message_field(5)
    hpepmphkgml: bool = betterproto.bool_field(9)
    content_close_time: int = betterproto.uint32_field(15)
    ppjmalghkch: int = betterproto.uint32_field(1)
    pnpcagimleg: Dict[int, "FleurFairDungeonSectionInfo"] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class FleurFairMusicGameInfo(betterproto.Message):
    fbmomkmdima: Dict[int, "FleurFairMusicRecord"] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class FleurFairMusicGameSettleReq(betterproto.Message):
    combo: int = betterproto.uint32_field(3)
    music_basic_id: int = betterproto.uint32_field(9)
    score: int = betterproto.uint32_field(7)
    correct_hit: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FleurFairMusicGameSettleRsp(betterproto.Message):
    music_basic_id: int = betterproto.uint32_field(4)
    is_new_record: bool = betterproto.bool_field(5)
    is_unlock_next_level: bool = betterproto.bool_field(7)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class FleurFairMusicGameStartReq(betterproto.Message):
    music_basic_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FleurFairMusicGameStartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    music_basic_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FleurFairMusicRecord(betterproto.Message):
    max_combo: int = betterproto.uint32_field(1)
    is_unlock: bool = betterproto.bool_field(7)
    max_score: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FleurFairPlayerStatInfo(betterproto.Message):
    param: int = betterproto.int32_field(4)
    profile_picture: "ProfilePicture" = betterproto.message_field(14)
    online_id: str = betterproto.string_field(3)
    nick_name: str = betterproto.string_field(5)
    stat_id: int = betterproto.uint32_field(2)
    head_image: int = betterproto.uint32_field(8)
    uid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class FleurFairReplayMiniGameReq(betterproto.Message):
    minigame_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FleurFairReplayMiniGameRsp(betterproto.Message):
    minigame_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class FleurFairStageSettleNotify(betterproto.Message):
    stage_type: int = betterproto.uint32_field(9)
    gallery_settle_info: "GallerySettleInfo" = betterproto.message_field(
        10, group="detail"
    )
    boss_settle_info: "BossSettleInfo" = betterproto.message_field(8, group="detail")


@dataclass(eq=False, repr=False)
class FlightActivityRestartReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(15)
    schedule_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class FlightActivityRestartRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(13)
    group_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class FlightActivitySettleNotify(betterproto.Message):
    unk3300_plfmjpnppli: int = betterproto.uint32_field(9)
    is_success: bool = betterproto.bool_field(13)
    unk3300_meekfjjioke: int = betterproto.uint32_field(2)
    is_new_record: bool = betterproto.bool_field(15)
    total_num: int = betterproto.uint32_field(3)
    group_id: int = betterproto.uint32_field(10)
    score: int = betterproto.uint32_field(12)
    left_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FlightDailyRecord(betterproto.Message):
    group_id: int = betterproto.uint32_field(14)
    start_time: int = betterproto.uint32_field(15)
    watcher_id_list: List[int] = betterproto.uint32_field(6)
    is_touched: bool = betterproto.bool_field(8)
    best_score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FlightInfo(betterproto.Message):
    daily_record_list: List["FlightDailyRecord"] = betterproto.message_field(5)
    min_open_player_level: int = betterproto.uint32_field(2)
    preview_reward_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FlowerInfo(betterproto.Message):
    cur_score: int = betterproto.uint32_field(7)
    target_score: int = betterproto.uint32_field(6)
    end_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FlowerStartParam(betterproto.Message):
    target_score: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FocusAvatarReq(betterproto.Message):
    is_focus: bool = betterproto.bool_field(15)
    avatar_guid: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class FocusAvatarRsp(betterproto.Message):
    is_focus: bool = betterproto.bool_field(11)
    retcode: int = betterproto.int32_field(1)
    avatar_guid: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class ForceAddPlayerFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ForceAddPlayerFriendRsp(betterproto.Message):
    target_friend_brief: "FriendBrief" = betterproto.message_field(12)
    target_uid: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class ForceDragAvatarNotify(betterproto.Message):
    unk3300_aflcllfdpbd: int = betterproto.uint64_field(14)
    entity_id: int = betterproto.uint32_field(8)
    motion_info: "MotionInfo" = betterproto.message_field(11)
    unk3300_imfnnpghkjj: int = betterproto.uint64_field(1)
    is_first_valid: bool = betterproto.bool_field(5)
    scene_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ForceDragBackTransferNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ForceUdpate(betterproto.Message):
    dpinghecdgc: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ForgeDataNotify(betterproto.Message):
    max_queue_num: int = betterproto.uint32_field(8)
    forge_queue_map: Dict[int, "ForgeQueueData"] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    forge_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ForgeFormulaDataNotify(betterproto.Message):
    is_locked: bool = betterproto.bool_field(1)
    forge_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ForgeGetQueueDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ForgeGetQueueDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    max_queue_num: int = betterproto.uint32_field(7)
    forge_queue_map: Dict[int, "ForgeQueueData"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ForgeQueueData(betterproto.Message):
    forge_id: int = betterproto.uint32_field(6)
    finish_count: int = betterproto.uint32_field(1)
    queue_id: int = betterproto.uint32_field(9)
    unfinish_count: int = betterproto.uint32_field(8)
    total_finish_timestamp: int = betterproto.uint32_field(11)
    avatar_id: int = betterproto.uint32_field(12)
    next_finish_timestamp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ForgeQueueDataNotify(betterproto.Message):
    removed_forge_queue_list: List[int] = betterproto.uint32_field(10)
    forge_queue_map: Dict[int, "ForgeQueueData"] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ForgeQueueManipulateReq(betterproto.Message):
    forge_queue_id: int = betterproto.uint32_field(5)
    manipulate_type: "ForgeQueueManipulateType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class ForgeQueueManipulateRsp(betterproto.Message):
    return_item_list: List["ItemParam"] = betterproto.message_field(3)
    manipulate_type: "ForgeQueueManipulateType" = betterproto.enum_field(7)
    extra_output_item_list: List["ItemParam"] = betterproto.message_field(13)
    output_item_list: List["ItemParam"] = betterproto.message_field(12)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class ForgeStartReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(10)
    forge_count: int = betterproto.uint32_field(6)
    forge_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ForgeStartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class FoundationInfo(betterproto.Message):
    status: "FoundationStatus" = betterproto.enum_field(1)
    uid_list: List[int] = betterproto.uint32_field(2)
    current_building_id: int = betterproto.uint32_field(3)
    locked_by_uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FoundationNotify(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(5)
    info: "FoundationInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FoundationReq(betterproto.Message):
    point_config_id: int = betterproto.uint32_field(2)
    op_type: "FoundationOpType" = betterproto.enum_field(10)
    building_id: int = betterproto.uint32_field(13)
    gadget_entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FoundationRsp(betterproto.Message):
    point_config_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(1)
    gadget_entity_id: int = betterproto.uint32_field(10)
    op_type: "FoundationOpType" = betterproto.enum_field(15)
    building_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FriendBrief(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    world_level: int = betterproto.uint32_field(5)
    signature: str = betterproto.string_field(6)
    online_state: "FriendOnlineState" = betterproto.enum_field(7)
    param: int = betterproto.uint32_field(8)
    is_mp_mode_available: bool = betterproto.bool_field(10)
    online_id: str = betterproto.string_field(11)
    last_active_time: int = betterproto.uint32_field(12)
    name_card_id: int = betterproto.uint32_field(13)
    mp_player_num: int = betterproto.uint32_field(14)
    is_chat_no_disturb: bool = betterproto.bool_field(15)
    chat_sequence: int = betterproto.uint32_field(16)
    remark_name: str = betterproto.string_field(17)
    show_avatar_info_list: List["SocialShowAvatarInfo"] = betterproto.message_field(22)
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(23)
    profile_picture: "ProfilePicture" = betterproto.message_field(24)
    is_game_source: bool = betterproto.bool_field(25)
    is_psn_source: bool = betterproto.bool_field(26)
    platform_type: "PlatformType" = betterproto.enum_field(27)


@dataclass(eq=False, repr=False)
class FriendInfoChangeNotify(betterproto.Message):
    online_id: str = betterproto.string_field(2)
    uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class FungusCaptureSettleNotify(betterproto.Message):
    is_success: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class FungusCultivateReq(betterproto.Message):
    cultivate_id: int = betterproto.uint32_field(15)
    time: int = betterproto.uint32_field(12)
    unk3300_mbplicbfagl: int = betterproto.uint32_field(5)
    unk3300_pgjkeicfkll: int = betterproto.uint32_field(3)
    unk3300_djegjdacdef: int = betterproto.uint32_field(7)
    unk3300_aegcnhlopep: int = betterproto.uint32_field(8)
    unk3300_imegfnoldce: int = betterproto.uint32_field(13)
    unk3300_ioanljbmbai: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FungusCultivateRsp(betterproto.Message):
    cultivate_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(12)
    is_new_record: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class FungusDetail(betterproto.Message):
    is_cultivate: bool = betterproto.bool_field(12)
    unk3300_gclbpdjdedn: int = betterproto.uint32_field(14)
    unk3300_ehnbdjpankl: int = betterproto.uint32_field(3)
    fungus_id: int = betterproto.uint32_field(6)
    name_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FungusFighterCaptureInfo(betterproto.Message):
    is_hide_progress: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class FungusFighterClearTrainingRuntimeDataReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FungusFighterClearTrainingRuntimeDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class FungusFighterDetailInfo(betterproto.Message):
    fungus_detail_list: List["FungusDetail"] = betterproto.message_field(3)
    unk3300_gihakkajhdh: List[int] = betterproto.uint32_field(9)
    training_dungeon_progress_detail_list: List[
        "FungusTrainingProgressDetail"
    ] = betterproto.message_field(4)
    unk3300_hpdojobpfmj: List[int] = betterproto.uint32_field(2)
    unk3300_kgkfjjhfhab: List[int] = betterproto.uint32_field(13)
    plot_stage_detail_list: List["FungusPlotStageDetail"] = betterproto.message_field(6)
    training_dungeon_detail_list: List[
        "FungusTrainingDungeonDetail"
    ] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class FungusFighterInfo(betterproto.Message):
    fungus_detail_list: List["FungusDetail"] = betterproto.message_field(3)
    unk3300_gihakkajhdh: List[int] = betterproto.uint32_field(9)
    training_dungeon_progress_detail_list: List[
        "FungusTrainingProgressDetail"
    ] = betterproto.message_field(4)
    unk3300_hpdojobpfmj: List[int] = betterproto.uint32_field(2)
    unk3300_kgkfjjhfhab: List[int] = betterproto.uint32_field(13)
    plot_stage_detail_list: List["FungusPlotStageDetail"] = betterproto.message_field(6)
    training_dungeon_detail_list: List[
        "FungusTrainingDungeonDetail"
    ] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class FungusFighterMonsterDetail(betterproto.Message):
    cur_hp_percentage: float = betterproto.float_field(9)
    fungus_id: int = betterproto.uint32_field(10)
    is_alive: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class FungusFighterPlotInfoNotify(betterproto.Message):
    fungus_id_list: List[int] = betterproto.uint32_field(1)
    dungeon_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class FungusFighterRestartTraningDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FungusFighterRestartTraningDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class FungusFighterRuntimeDataNotify(betterproto.Message):
    progress_detail: "FungusTrainingProgressDetail" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class FungusFighterTrainingGallerySettleNotify(betterproto.Message):
    final_score: int = betterproto.uint32_field(6)
    unk3300_kkfbmhlolfc: int = betterproto.uint32_field(14)
    reason: "GalleryStopReason" = betterproto.enum_field(3)
    unk3300_bhomhphlohl: int = betterproto.uint32_field(11)
    unk3300_pocdegbhjea: int = betterproto.uint32_field(12)
    total_used_time: int = betterproto.uint32_field(9)
    is_final_settle: bool = betterproto.bool_field(7)
    is_new_record: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class FungusFighterTrainingInfo(betterproto.Message):
    unk3300_gmlipfdmdog: int = betterproto.uint32_field(5)
    buff_id: int = betterproto.uint32_field(15)
    unk3300_ioeelcamdck: int = betterproto.uint32_field(4)
    max_monster_count: int = betterproto.uint32_field(1)
    unk3300_ekamcpngcgh: int = betterproto.uint32_field(10)
    unk3300_edhanegnmjm: int = betterproto.uint32_field(3)
    unk3300_hgpgncmndjn: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FungusFighterTrainingInfoNotify(betterproto.Message):
    unk3300_edhanegnmjm: int = betterproto.uint32_field(15)
    unk3300_ioeelcamdck: int = betterproto.uint32_field(14)
    unk3300_ekamcpngcgh: int = betterproto.uint32_field(1)
    unk3300_gmlipfdmdog: int = betterproto.uint32_field(7)
    max_monster_count: int = betterproto.uint32_field(3)
    buff_id: int = betterproto.uint32_field(6)
    unk3300_hgpgncmndjn: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class FungusFighterTrainingSelectFungusReq(betterproto.Message):
    backup_fungus_id_list: List[int] = betterproto.uint32_field(5)
    fight_fungus_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FungusFighterTrainingSelectFungusRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class FungusFighterUseBackupFungusReq(betterproto.Message):
    backup_fungus_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class FungusFighterUseBackupFungusRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class FungusPlotStageDetail(betterproto.Message):
    stage_id: int = betterproto.uint32_field(3)
    is_open: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class FungusRenameReq(betterproto.Message):
    name_id: int = betterproto.uint32_field(2)
    fungus_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FungusRenameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    fungus_id: int = betterproto.uint32_field(3)
    name_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FungusTrainingDungeonDetail(betterproto.Message):
    is_open: bool = betterproto.bool_field(8)
    best_score: int = betterproto.uint32_field(7)
    dungeon_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FungusTrainingMonsterPreviewDetail(betterproto.Message):
    monster_id: int = betterproto.uint32_field(3)
    level: int = betterproto.uint32_field(5)
    affix_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FungusTrainingPoolPreviewDetail(betterproto.Message):
    pool_id: int = betterproto.uint32_field(10)
    monster_preview_detail_list: List[
        "FungusTrainingMonsterPreviewDetail"
    ] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class FungusTrainingProgressDetail(betterproto.Message):
    unk3300_eeoimdjohcm: List[int] = betterproto.uint32_field(15)
    cur_round: int = betterproto.uint32_field(1)
    unk3300_nlhefgbeoac: List[int] = betterproto.uint32_field(8)
    monster_pool_preview_list: List[
        "FungusTrainingPoolPreviewDetail"
    ] = betterproto.message_field(9)
    total_used_time: int = betterproto.uint32_field(4)
    monster_detail_list: List["FungusFighterMonsterDetail"] = betterproto.message_field(
        2
    )
    dungeon_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class FunitureMakeMakeInfoChangeNotify(betterproto.Message):
    ijdbngdlgdb: "FurnitureMakeInfo" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class Furniture(betterproto.Message):
    count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FurnitureCurModuleArrangeCountNotify(betterproto.Message):
    furniture_arrange_count_list: List["Uint32Pair"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class FurnitureMakeBeHelpedData(betterproto.Message):
    uid: int = betterproto.uint32_field(7)
    profile_picture: "ProfilePicture" = betterproto.message_field(10)
    icon: int = betterproto.uint32_field(13)
    time: int = betterproto.fixed32_field(4)
    player_name: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class FurnitureMakeBeHelpedNotify(betterproto.Message):
    furniture_make_slot: "FurnitureMakeSlot" = betterproto.message_field(2)
    furniture_make_helped_data: "FurnitureMakeBeHelpedData" = betterproto.message_field(
        12
    )


@dataclass(eq=False, repr=False)
class FurnitureMakeCancelReq(betterproto.Message):
    make_id: int = betterproto.uint32_field(5)
    index: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class FurnitureMakeCancelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    furniture_make_slot: "FurnitureMakeSlot" = betterproto.message_field(14)
    make_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FurnitureMakeData(betterproto.Message):
    dur_time: int = betterproto.uint32_field(5)
    make_id: int = betterproto.uint32_field(6)
    begin_time: int = betterproto.fixed32_field(13)
    accelerate_time: int = betterproto.fixed32_field(9)
    index: int = betterproto.uint32_field(10)
    avatar_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FurnitureMakeFinishNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FurnitureMakeHelpData(betterproto.Message):
    times: int = betterproto.uint32_field(2)
    uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FurnitureMakeHelpReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FurnitureMakeHelpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    help_data_list: List["FurnitureMakeHelpData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class FurnitureMakeInfo(betterproto.Message):
    make_count: int = betterproto.uint32_field(9)
    furniture_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FurnitureMakeReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FurnitureMakeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    furniture_make_slot: "FurnitureMakeSlot" = betterproto.message_field(3)
    help_data_list: List["FurnitureMakeHelpData"] = betterproto.message_field(7)
    make_info_list: List["FurnitureMakeInfo"] = betterproto.message_field(8)
    helped_data_list: List["FurnitureMakeBeHelpedData"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class FurnitureMakeSlot(betterproto.Message):
    furniture_make_data_list: List["FurnitureMakeData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class FurnitureMakeStartReq(betterproto.Message):
    make_id: int = betterproto.uint32_field(15)
    avatar_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class FurnitureMakeStartRsp(betterproto.Message):
    furniture_make_slot: "FurnitureMakeSlot" = betterproto.message_field(11)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class GachaActivityCreateRobotReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GachaActivityCreateRobotRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    robot_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GachaActivityNextStageReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GachaActivityNextStageRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class GachaActivityPercentNotify(betterproto.Message):
    target_num_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    unk3300_ghhigkfdone: int = betterproto.uint32_field(13)
    unk3300_iolpajkdeea: int = betterproto.uint32_field(14)
    unk3300_eopjbphfdee: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GachaActivityResetReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GachaActivityResetRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    stage_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GachaActivityTakeRewardReq(betterproto.Message):
    robot_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GachaActivityTakeRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    robot_num_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GachaActivityUpdateElemNotify(betterproto.Message):
    elem_type: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GachaInfo(betterproto.Message):
    gacha_prefab_path: str = betterproto.string_field(9)
    schedule_id: int = betterproto.uint32_field(2)
    display_up5_item_list: List[int] = betterproto.uint32_field(1851)
    gacha_sort_id: int = betterproto.uint32_field(6)
    display_up4_item_list: List[int] = betterproto.uint32_field(279)
    is_new_wish: bool = betterproto.bool_field(869)
    gacha_times_limit: int = betterproto.uint32_field(11)
    cost_item_num: int = betterproto.uint32_field(14)
    gacha_record_url: str = betterproto.string_field(7)
    title_textmap: str = betterproto.string_field(1228)
    gacha_up_info_list: List["GachaUpInfo"] = betterproto.message_field(1836)
    gacha_preview_prefab_path: str = betterproto.string_field(8)
    cur_schedule_daily_gacha_times: int = betterproto.uint32_field(48)
    gacha_type: int = betterproto.uint32_field(1)
    ten_cost_item_id: int = betterproto.uint32_field(4)
    left_gacha_times: int = betterproto.uint32_field(12)
    gacha_prob_url: str = betterproto.string_field(5)
    gacha_prob_url_oversea: str = betterproto.string_field(765)
    wish_item_id: int = betterproto.uint32_field(309)
    ten_cost_item_num: int = betterproto.uint32_field(10)
    wish_max_progress: int = betterproto.uint32_field(1669)
    cost_item_id: int = betterproto.uint32_field(13)
    begin_time: int = betterproto.uint32_field(15)
    gacha_record_url_oversea: str = betterproto.string_field(1004)
    wish_progress: int = betterproto.uint32_field(246)
    end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GachaItem(betterproto.Message):
    transfer_items: List["GachaTransferItem"] = betterproto.message_field(10)
    is_gacha_item_new: bool = betterproto.bool_field(9)
    token_item_list: List["ItemParam"] = betterproto.message_field(12)
    gacha_item: "ItemParam" = betterproto.message_field(4)
    is_flash_card: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class GachaOpenWishNotify(betterproto.Message):
    gacha_type: int = betterproto.uint32_field(1)
    gacha_schedule_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GachaSimpleInfoNotify(betterproto.Message):
    is_new: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class GachaStageData(betterproto.Message):
    target_num_map: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    stage_id: int = betterproto.uint32_field(15)
    is_open: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GachaTransferItem(betterproto.Message):
    item: "ItemParam" = betterproto.message_field(5)
    is_transfer_item_new: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GachaUpInfo(betterproto.Message):
    item_id_list: List[int] = betterproto.uint32_field(11)
    item_parent_type: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GachaWishReq(betterproto.Message):
    gacha_type: int = betterproto.uint32_field(6)
    gacha_schedule_id: int = betterproto.uint32_field(10)
    item_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GachaWishRsp(betterproto.Message):
    wish_progress: int = betterproto.uint32_field(3)
    wish_max_progress: int = betterproto.uint32_field(7)
    gacha_type: int = betterproto.uint32_field(6)
    gacha_schedule_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(9)
    wish_item_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GadgetAutoPickDropInfoNotify(betterproto.Message):
    item_list: List["Item"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GadgetChainLevelChangeNotify(betterproto.Message):
    gadget_chain_level_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GadgetChainLevelUpdateNotify(betterproto.Message):
    gadget_chain_level_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GadgetChangeLevelTagReq(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(5)
    level_tag_id: int = betterproto.uint32_field(13)
    combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class GadgetChangeLevelTagRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class GadgetCustomTreeInfoNotify(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(2)
    custom_gadget_tree_info: "CustomGadgetTreeInfo" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class GadgetGeneralRewardInfo(betterproto.Message):
    resin: int = betterproto.uint32_field(1)
    dead_time: int = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    qualify_uid_list: List[int] = betterproto.uint32_field(4)
    item_param: "ItemParam" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GadgetGeneralRewardInfoNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(5)
    general_reward_info: "GadgetGeneralRewardInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GadgetInteractReq(betterproto.Message):
    op_type: "InterOpType" = betterproto.enum_field(1)
    is_use_condense_resin: bool = betterproto.bool_field(14)
    gadget_entity_id: int = betterproto.uint32_field(8)
    gadget_id: int = betterproto.uint32_field(15)
    resin_cost_type: "ResinCostType" = betterproto.enum_field(7)
    ui_interact_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GadgetInteractRsp(betterproto.Message):
    interact_type: "InteractType" = betterproto.enum_field(3)
    retcode: int = betterproto.int32_field(12)
    gadget_id: int = betterproto.uint32_field(10)
    gadget_entity_id: int = betterproto.uint32_field(2)
    op_type: "InterOpType" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class GadgetPlayDataNotify(betterproto.Message):
    play_type: int = betterproto.uint32_field(2)
    progress: int = betterproto.uint32_field(15)
    entity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GadgetPlayInfo(betterproto.Message):
    play_type: int = betterproto.uint32_field(1)
    duration: int = betterproto.uint32_field(2)
    progress_stage_list: List[int] = betterproto.uint32_field(3)
    start_cd: int = betterproto.uint32_field(4)
    start_time: int = betterproto.uint32_field(5)
    progress: int = betterproto.uint32_field(6)
    crucible_info: "CrucibleInfo" = betterproto.message_field(21, group="play_info")


@dataclass(eq=False, repr=False)
class GadgetPlayStartNotify(betterproto.Message):
    play_type: int = betterproto.uint32_field(6)
    entity_id: int = betterproto.uint32_field(13)
    start_time: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GadgetPlayStopNotify(betterproto.Message):
    uid_info_list: List["GadgetPlayUidInfo"] = betterproto.message_field(13)
    cost_time: int = betterproto.uint32_field(12)
    score: int = betterproto.uint32_field(14)
    is_win: bool = betterproto.bool_field(7)
    entity_id: int = betterproto.uint32_field(1)
    play_type: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GadgetPlayUidInfo(betterproto.Message):
    score: int = betterproto.uint32_field(7)
    online_id: str = betterproto.string_field(1)
    battle_watcher_id: int = betterproto.uint32_field(3)
    profile_picture: "ProfilePicture" = betterproto.message_field(6)
    uid: int = betterproto.uint32_field(14)
    icon: int = betterproto.uint32_field(9)
    nickname: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class GadgetPlayUidOpNotify(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(12)
    play_type: int = betterproto.uint32_field(14)
    op: int = betterproto.uint32_field(9)
    param_str: str = betterproto.string_field(2)
    param_list: List[int] = betterproto.uint32_field(11)
    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GadgetStateNotify(betterproto.Message):
    gadget_state: int = betterproto.uint32_field(9)
    gadget_entity_id: int = betterproto.uint32_field(7)
    is_enable_interact: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class GadgetTalkChangeNotify(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(10)
    cur_gadget_talk_state: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Gaelkehflhd(betterproto.Message):
    ocnblncnkge: int = betterproto.uint32_field(13)
    entity_id: int = betterproto.uint32_field(1)
    gfiihkfomol: int = betterproto.uint32_field(15)
    eknhofiihcl: "Vector" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GalleryBalloonScoreNotify(betterproto.Message):
    uid_score_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    gallery_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GalleryBalloonShootNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(8)
    trigger_entity_id: int = betterproto.uint32_field(2)
    add_score: int = betterproto.int32_field(5)
    cur_score: int = betterproto.uint32_field(14)
    combo: int = betterproto.uint32_field(7)
    combo_disable_time: int = betterproto.uint64_field(6)


@dataclass(eq=False, repr=False)
class GalleryBounceConjuringHitNotify(betterproto.Message):
    is_perfect: bool = betterproto.bool_field(15)
    gallery_id: int = betterproto.uint32_field(7)
    add_score: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GalleryBrokenFloorFallNotify(betterproto.Message):
    fall_count: int = betterproto.uint32_field(2)
    gallery_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GalleryBulletHitNotify(betterproto.Message):
    hit_count: int = betterproto.uint32_field(11)
    gallery_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GalleryCrystalLinkBuffInfoNotify(betterproto.Message):
    is_buff_valid: bool = betterproto.bool_field(11)
    gallery_id: int = betterproto.uint32_field(6)
    buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GalleryCrystalLinkKillMonsterNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(10)
    score: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GalleryFallCatchNotify(betterproto.Message):
    time_cost: int = betterproto.uint32_field(1)
    add_score: int = betterproto.uint32_field(4)
    gallery_id: int = betterproto.uint32_field(2)
    cur_score: int = betterproto.uint32_field(5)
    is_ground: bool = betterproto.bool_field(3)
    ball_catch_count_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GalleryFallScoreNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(8)
    uid_brief_map: Dict[int, "FallPlayerBrief"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class GalleryFlowerCatchNotify(betterproto.Message):
    add_score: int = betterproto.uint32_field(1)
    cur_score: int = betterproto.uint32_field(8)
    gallery_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GalleryFlowerStartParam(betterproto.Message):
    target_score: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GalleryIslandPartyDownHillInfoNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(7)
    total_kill_monster_count: int = betterproto.uint32_field(15)
    coin: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GalleryPreStartNotify(betterproto.Message):
    pre_start_end_time: int = betterproto.uint32_field(6)
    gallery_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GallerySettleInfo(betterproto.Message):
    is_success: bool = betterproto.bool_field(5)
    energy: int = betterproto.uint32_field(7)
    energy_stat_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    gallery_stage_count: int = betterproto.uint32_field(14)
    gallery_stage_index: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GalleryStartNotify(betterproto.Message):
    start_time: int = betterproto.uint32_field(3)
    owner_uid: int = betterproto.uint32_field(14)
    player_count: int = betterproto.uint32_field(4)
    gallery_id: int = betterproto.uint32_field(12)
    end_time: int = betterproto.uint32_field(1)
    flower_start_param: "FlowerStartParam" = betterproto.message_field(
        10, group="detail"
    )
    electrohercules_start_param: "ElectroherculesStartParam" = (
        betterproto.message_field(7, group="detail")
    )


@dataclass(eq=False, repr=False)
class GalleryStopNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GallerySumoKillMonsterNotify(betterproto.Message):
    score: int = betterproto.uint32_field(2)
    kill_normal_monster_num: int = betterproto.uint32_field(13)
    kill_elite_monster_num: int = betterproto.uint32_field(4)
    gallery_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GalleryWillStartCountdownNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(8)
    is_end: bool = betterproto.bool_field(1)
    start_source: "GalleryStartSource" = betterproto.enum_field(13)
    end_time: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GameOver(betterproto.Message):
    end_reason: "GcgEndReason" = betterproto.enum_field(4)
    win_controller_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GameplayRecommendationElementReliquaryRequest(betterproto.Message):
    element_type: int = betterproto.uint32_field(12)
    equip_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GameplayRecommendationReliquaryMainPropData(betterproto.Message):
    main_prop_id: int = betterproto.uint32_field(6)
    khfnbgnaclh: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GameplayRecommendationReliquaryRequest(betterproto.Message):
    equip_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GameplayRecommendationReliquaryResponse(betterproto.Message):
    nbbpegfkpac: List[
        "GameplayRecommendationReliquaryMainPropData"
    ] = betterproto.message_field(12)
    equip_type: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GameplayRecommendationSkillRequest(betterproto.Message):
    skill_depot_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GatherGadget(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    is_forbid_guest: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GatherGadgetInfo(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    is_forbid_guest: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class Gboknaplkfb(betterproto.Message):
    value: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class GcgApplyInviteBattleNotify(betterproto.Message):
    is_agree: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class GcgApplyInviteBattleReq(betterproto.Message):
    ljemjfinpph: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(15)
    confirm_end_time: int = betterproto.uint32_field(7)
    uid: int = betterproto.uint32_field(4)
    punish_end_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgApplyInviteBattleRsp(betterproto.Message):
    ljemjfinpph: int = betterproto.uint32_field(8)
    confirm_end_time: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgAskDuelReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgAskDuelRsp(betterproto.Message):
    duel: "Duel" = betterproto.message_field(5)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class GcgAttackCostInfo(betterproto.Message):
    cost_map: List["Uint32Pair"] = betterproto.message_field(6)
    skill_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GcgBackToDuelReq(betterproto.Message):
    is_back: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class GcgBackToDuelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GcgBasicDataNotify(betterproto.Message):
    option: "GcgTavernNpcInfo" = betterproto.enum_field(13)


@dataclass(eq=False, repr=False)
class GcgBossChallengeData(betterproto.Message):
    lidokiohkmh: List[int] = betterproto.uint32_field(1)
    id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgBossChallengeUpdateNotify(betterproto.Message):
    jmpbgnfplkb: "GcgBossChallengeData" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class GcgCard(betterproto.Message):
    skill_id_list: List[int] = betterproto.uint32_field(11)
    token_list: List["GcgToken"] = betterproto.message_field(3)
    controller_id: int = betterproto.uint32_field(2)
    tag_list: List[int] = betterproto.uint32_field(9)
    retcode: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint32_field(8)
    id: int = betterproto.uint32_field(14)
    is_show: bool = betterproto.bool_field(13)
    skill_limits_list: List["GcgSkillLimitsInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GcgCardSkillLimitsInfo(betterproto.Message):
    skill_limits_list: List["GcgSkillLimitsInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GcgChallengeUpdateNotify(betterproto.Message):
    challenge: "GcgDuelChallenge" = betterproto.message_field(4)
    server_seq: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgChangeOnstageInfo(betterproto.Message):
    card_guid: int = betterproto.uint32_field(4)
    change_onstage_preview_info: "GcgSkillPreviewInfo" = betterproto.message_field(8)
    is_quick: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GcgClientSettleReq(betterproto.Message):
    forbid_finish_challenge_list: List[int] = betterproto.uint32_field(14)
    reason: "GcgEndReason" = betterproto.enum_field(12)
    is_win: bool = betterproto.bool_field(4)
    reward_item_list: List["ItemParam"] = betterproto.message_field(9)
    adobcdcfbpn: List[int] = betterproto.uint32_field(11)
    win_controller_id: int = betterproto.uint32_field(2)
    game_id: int = betterproto.uint32_field(7)
    business_type: "GcgGameBusinessType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class GcgClientSettleRsp(betterproto.Message):
    njfkmlcpbbh: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GcgControllerShowInfo(betterproto.Message):
    online_id: str = betterproto.string_field(5)
    controller_id: int = betterproto.uint32_field(6)
    nick_name: str = betterproto.string_field(1)
    profile_picture: "ProfilePicture" = betterproto.message_field(4)
    psn_id: str = betterproto.string_field(10)


@dataclass(eq=False, repr=False)
class GcgCostReviseInfo(betterproto.Message):
    is_can_attack: bool = betterproto.bool_field(2)
    select_on_stage_cost_list: List[
        "GcgSelectOnStageCostInfo"
    ] = betterproto.message_field(5)
    attack_cost_list: List["GcgAttackCostInfo"] = betterproto.message_field(8)
    can_use_hand_card_id_list: List[int] = betterproto.uint32_field(7)
    play_card_cost_list: List["GcgPlayCardCostInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GcgDamageDetail(betterproto.Message):
    skill_id: int = betterproto.uint32_field(9)
    card_guid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgDebugReplayNotify(betterproto.Message):
    json_str: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class GcgdsBanCardNotify(betterproto.Message):
    reward_index: int = betterproto.uint32_field(2)
    card_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GcgdsCardBackUnlockNotify(betterproto.Message):
    egefalocknh: str = betterproto.string_field(2)
    is_success: bool = betterproto.bool_field(8)
    card_back_id: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class GcgdsCardData(betterproto.Message):
    card_id: int = betterproto.uint32_field(7)
    cnmaiaajihc: List[int] = betterproto.uint32_field(15)
    retcode: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(4)
    proficiency: int = betterproto.uint32_field(12)
    mdmigcefmmd: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgdsCardFaceUnlockNotify(betterproto.Message):
    face_type: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgdsCardFaceUpdateNotify(betterproto.Message):
    proficiency: int = betterproto.uint32_field(4)
    card_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GcgdsCardNumChangeNotify(betterproto.Message):
    ccdlgbcdpbp: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgdsCardProficiencyNotify(betterproto.Message):
    reward_index: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class GcgdsChangeCardBackReq(betterproto.Message):
    card_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgdsChangeCardBackRsp(betterproto.Message):
    deck_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(3)
    card_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgdsChangeCardFaceReq(betterproto.Message):
    retcode: int = betterproto.uint32_field(8)
    card_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgdsChangeCardFaceRsp(betterproto.Message):
    card_id: int = betterproto.uint32_field(6)
    num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgdsChangeCurDeckReq(betterproto.Message):
    create_time: str = betterproto.string_field(11)
    reward_index: int = betterproto.uint32_field(14)
    card_list: List[int] = betterproto.uint32_field(13)
    iegclabmkdb: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgdsChangeCurDeckRsp(betterproto.Message):
    create_time: int = betterproto.uint32_field(8)
    reward_index: int = betterproto.uint32_field(1)
    pofiiedegjn: bool = betterproto.bool_field(11)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class GcgdsChangeDeckNameReq(betterproto.Message):
    reward_index: int = betterproto.uint32_field(15)
    ccdlgbcdpbp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgdsChangeDeckNameRsp(betterproto.Message):
    ccdlgbcdpbp: int = betterproto.uint32_field(12)
    reward_index: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class GcgdsChangeFieldReq(betterproto.Message):
    reward_index: int = betterproto.uint32_field(1)
    face_type: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgdsChangeFieldRsp(betterproto.Message):
    face_type: int = betterproto.uint32_field(6)
    reward_index: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class GcgdsCurDeckChangeNotify(betterproto.Message):
    reward_index: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GcgdsDataNotify(betterproto.Message):
    mjjacnclhpf: "CmdId" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GcgdsDeckData(betterproto.Message):
    iegclabmkdb: List[int] = betterproto.uint32_field(14)
    pofiiedegjn: bool = betterproto.bool_field(4)
    create_time: int = betterproto.uint32_field(9)
    idk: str = betterproto.string_field(3)
    face_type: int = betterproto.uint32_field(2)
    ccdlgbcdpbp: int = betterproto.uint32_field(6)
    card_list: List[int] = betterproto.uint32_field(12)
    id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GcgdsDeckSaveReq(betterproto.Message):
    is_valid: bool = betterproto.bool_field(7)
    create_time: str = betterproto.string_field(1)
    reward_index: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgdsDeckSaveRsp(betterproto.Message):
    create_time: str = betterproto.string_field(9)
    is_valid: bool = betterproto.bool_field(2)
    reward_index: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class GcgdsDeckUnlockNotify(betterproto.Message):
    reward_index: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GcgdsDeckUpdateNotify(betterproto.Message):
    reward_index: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgdsDeleteDeckReq(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    reward_index: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgdsDeleteDeckRsp(betterproto.Message):
    reward_index: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GcgdsFieldUnlockNotify(betterproto.Message):
    mpojoaeafpn: List[int] = betterproto.uint32_field(5)
    card_list: List["GcgdsCardData"] = betterproto.message_field(7)
    fkppeakjlmb: int = betterproto.uint32_field(2)
    noclfjjcgeo: List[int] = betterproto.uint32_field(13)
    ocigcagdgml: List["GcgdsDeckData"] = betterproto.message_field(11)
    bcmbnjhmble: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgdsTakeCardProficiencyRewardReq(betterproto.Message):
    pofiiedegjn: bool = betterproto.bool_field(4)
    reward_index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgdsTakeCardProficiencyRewardRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(12)
    card_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgDuel(betterproto.Message):
    card_list: List["GcgCard"] = betterproto.message_field(1)
    unk3300_jhddnkfpina: int = betterproto.uint32_field(5)
    forbid_finish_challenge_list: List[int] = betterproto.uint32_field(1985)
    history_card_list: List["GcgCard"] = betterproto.message_field(1326)
    history_msg_pack_list: List["GcgMessagePack"] = betterproto.message_field(1636)
    unk3300_bianmopdeho: int = betterproto.uint32_field(14)
    show_info_list: List["GcgControllerShowInfo"] = betterproto.message_field(10)
    unk3300_cdcmbokblak: List["Unk3300Adhencifkni"] = betterproto.message_field(1950)
    intention_list: List["GcgpveIntention"] = betterproto.message_field(15)
    cost_revise: "GcgCostReviseInfo" = betterproto.message_field(6)
    controller_id: int = betterproto.uint32_field(2)
    field_list: List["GcgPlayerField"] = betterproto.message_field(3)
    business_type: "GcgGameBusinessType" = betterproto.enum_field(7)
    phase: "GcgPhase" = betterproto.message_field(8)
    challenge_list: List["GcgDuelChallenge"] = betterproto.message_field(37)
    card_id_list: List[int] = betterproto.uint32_field(12)
    server_seq: int = betterproto.uint32_field(11)
    round: int = betterproto.uint32_field(4)
    game_id: int = betterproto.uint32_field(9)
    unk3300_jbbmbkgoono: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GcgDuelChallenge(betterproto.Message):
    total_progress: int = betterproto.uint32_field(9)
    challenge_id: int = betterproto.uint32_field(10)
    cur_progress: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgFestivalInfo(betterproto.Message):
    fkefhlbdlcn: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GcgGameBriefData(betterproto.Message):
    unk3300_fjjdmibibjn: int = betterproto.uint32_field(11)
    player_brief_list: List["GcgPlayerBriefData"] = betterproto.message_field(5)
    business_type: "GcgGameBusinessType" = betterproto.enum_field(10)
    game_id: int = betterproto.uint32_field(1)
    unk3300_ncldognchgf: int = betterproto.uint32_field(6)
    platform_type: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GcgGameBriefDataNotify(betterproto.Message):
    gcg_brief_data: "GcgGameBriefData" = betterproto.message_field(4)
    is_new_game: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class GcgGameCreateFailReasonNotify(betterproto.Message):
    reason: "GcgGameCreateReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class GcgGameMaxNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgGrowthLevelNotify(betterproto.Message):
    eekdbogblnc: List["GcgtcTavernChallengeData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GcgGrowthLevelRewardNotify(betterproto.Message):
    oaemlknkeio: "GcgtcTavernChallengeData" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class GcgGrowthLevelTakeRewardReq(betterproto.Message):
    exp: int = betterproto.uint32_field(15)
    level: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgGrowthLevelTakeRewardRsp(betterproto.Message):
    cfajcibjpln: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgHeartBeatNotify(betterproto.Message):
    server_seq: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgInitFinishReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgInitFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class GcgInviteBattleNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(11)
    ljemjfinpph: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgInviteGuestBattleReq(betterproto.Message):
    level: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgInviteGuestBattleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    level: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgLevelChallengeDeleteNotify(betterproto.Message):
    fdpppbpejae: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GcgLevelChallengeFinishNotify(betterproto.Message):
    unlock_world_challenge_list: int = betterproto.uint32_field(9)
    level_id: int = betterproto.uint32_field(10)
    finished_challenge_id_list: List[int] = betterproto.uint32_field(15)
    exceeded_item_list: List[int] = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(11)
    config_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgLevelChallengeNotify(betterproto.Message):
    level_id: int = betterproto.uint32_field(7)
    unlock_world_challenge_list: int = betterproto.uint32_field(11)
    config_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GcgLevelData(betterproto.Message):
    level_id: int = betterproto.uint32_field(13)
    adobcdcfbpn: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgLevelType(betterproto.Message):
    level_id: int = betterproto.uint32_field(3)
    scene_point_id: int = betterproto.uint32_field(2)
    id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgLimitsInfo(betterproto.Message):
    unk3300_mncnolhhgpa: int = betterproto.uint32_field(15)
    unk3300_phkpkfbdgjf: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgMatchInfo(betterproto.Message):
    player_list: List["MatchPlayerInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GcgMessage(betterproto.Message):
    token_change: "TokenChange" = betterproto.message_field(10, group="message")
    phase_change: "PhaseChange" = betterproto.message_field(15, group="message")
    add_cards: "AddCards" = betterproto.message_field(11, group="message")
    remove_cards: "RemoveCards" = betterproto.message_field(7, group="message")
    select_on_stage: "SelectOnStage" = betterproto.message_field(9, group="message")
    dice_roll: "DiceRoll" = betterproto.message_field(3, group="message")
    dice_reroll: "DiceReroll" = betterproto.message_field(12, group="message")
    pass_: "Pass" = betterproto.message_field(5, group="message")
    char_die: "CharDie" = betterproto.message_field(6, group="message")
    skill_result: "SkillResult" = betterproto.message_field(1, group="message")
    cost_dice: "CostDice" = betterproto.message_field(4, group="message")
    add_dice: "AddDice" = betterproto.message_field(13, group="message")
    move_card: "MoveCard" = betterproto.message_field(14, group="message")
    use_skill: "UseSkill" = betterproto.message_field(2, group="message")
    new_card: "NewCard" = betterproto.message_field(1658, group="message")
    update_controller: "UpdateController" = betterproto.message_field(
        204, group="message"
    )
    modify_add: "ModifyAdd" = betterproto.message_field(1001, group="message")
    modify_remove: "ModifyRemove" = betterproto.message_field(1447, group="message")
    use_skill_end: "UseSkillEnd" = betterproto.message_field(1779, group="message")
    duel_data_change: "DuelDataChange" = betterproto.message_field(
        1102, group="message"
    )
    client_perform: "ClientPerform" = betterproto.message_field(1225, group="message")
    game_over: "GameOver" = betterproto.message_field(640, group="message")
    op_timer: "OpTimer" = betterproto.message_field(778, group="message")
    waiting_list_change: "WaitingListChange" = betterproto.message_field(
        517, group="message"
    )
    card_update: "CardUpdate" = betterproto.message_field(1284, group="message")
    select_on_stage_by_effect: "SelectOnStageByEffect" = betterproto.message_field(
        542, group="message"
    )
    cost_revise: "CostRevise" = betterproto.message_field(662, group="message")
    phase_continue: "PhaseContinue" = betterproto.message_field(344, group="message")
    pve_intention_info: "PveIntentionInfo" = betterproto.message_field(
        975, group="message"
    )
    pve_intention_change: "PveIntentionChange" = betterproto.message_field(
        719, group="message"
    )
    skill_limits_change: "SkillLimitsChange" = betterproto.message_field(
        597, group="message"
    )
    no_damage_skill_result: "NoDamageSkillResult" = betterproto.message_field(
        1483, group="message"
    )
    reaction_begin: "ReactionBegin" = betterproto.message_field(170, group="message")
    reaction_end: "ReactionEnd" = betterproto.message_field(58, group="message")


@dataclass(eq=False, repr=False)
class GcgMessagePack(betterproto.Message):
    controller_id: int = betterproto.uint32_field(12)
    ijojhencdld: int = betterproto.uint32_field(1)
    msg_list: List["GcgMessage"] = betterproto.message_field(3)
    action_type: "GcgActionType" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class GcgMessagePackNotify(betterproto.Message):
    msg_pack_list: List["GcgMessagePack"] = betterproto.message_field(13)
    server_seq: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgMsgAddCards(betterproto.Message):
    controller_id: int = betterproto.uint32_field(11)
    reason: "GcgReason" = betterproto.enum_field(1)
    pos: int = betterproto.uint32_field(6)
    zone: "GcgZoneType" = betterproto.enum_field(9)
    card_guid_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgMsgAddDice(betterproto.Message):
    unk3300_pcmpcclfeim: Dict[int, "GcgDiceSideType"] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_ENUM
    )
    unk3300_kfkogokpifn: Dict[int, "GcgDiceSideType"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_ENUM
    )
    controller_id: int = betterproto.uint32_field(3)
    reason: "GcgReason" = betterproto.enum_field(9)
    change_count: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class GcgMsgCharDie(betterproto.Message):
    card_guid: int = betterproto.uint32_field(10)
    controller_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgMsgClientPerform(betterproto.Message):
    perform_type: "GcgClientPerformType" = betterproto.enum_field(2)
    param_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgMsgCostDice(betterproto.Message):
    reason: "GcgReason" = betterproto.enum_field(7)
    controller_id: int = betterproto.uint32_field(9)
    select_dice_index_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgMsgCostRevise(betterproto.Message):
    controller_id: int = betterproto.uint32_field(15)
    cost_revise: "GcgCostReviseInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class GcgMsgGameOver(betterproto.Message):
    end_reason: "GcgEndReason" = betterproto.enum_field(4)
    win_controller_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgMsgModifyAdd(betterproto.Message):
    pos: int = betterproto.uint32_field(11)
    owner_card_guid: int = betterproto.uint32_field(10)
    controller_id: int = betterproto.uint32_field(7)
    reason: "GcgReason" = betterproto.enum_field(14)
    card_guid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgMsgModifyRemove(betterproto.Message):
    controller_id: int = betterproto.uint32_field(7)
    card_guid_list: List[int] = betterproto.uint32_field(3)
    reason: "GcgReason" = betterproto.enum_field(1)
    owner_card_guid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgMsgNewCard(betterproto.Message):
    card: "GcgCard" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GcgMsgNoDamageSkillResult(betterproto.Message):
    unk3300_nnjaoehnppd: int = betterproto.uint32_field(3)
    unk3300_nigdciglake: int = betterproto.uint32_field(1)
    unk3300_lpglocddpcl: int = betterproto.uint32_field(13)
    detail_list: List["GcgDamageDetail"] = betterproto.message_field(9)
    unk3300_epndciajojp: int = betterproto.uint32_field(5)
    skill_id: int = betterproto.uint32_field(15)
    target_card_guid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgMsgPass(betterproto.Message):
    controller_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgMsgPhaseChange(betterproto.Message):
    allow_controller_map: List["Uint32Pair"] = betterproto.message_field(7)
    after_phase: "GcgPhaseType" = betterproto.enum_field(13)
    before_phase: "GcgPhaseType" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class GcgMsgPhaseContinue(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgMsgPveIntention(betterproto.Message):
    skill_id_list: List[int] = betterproto.uint32_field(3)
    card_guid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgMsgPveIntentionChange(betterproto.Message):
    change_type: "GcgIntentionChangeType" = betterproto.enum_field(6)
    change_intention_list: List["GcgMsgPveIntention"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GcgMsgPveIntentionInfo(betterproto.Message):
    intention_map: Dict[int, "GcgMsgPveIntention"] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class GcgMsgReactionBegin(betterproto.Message):
    skill_id: int = betterproto.uint32_field(8)
    card_guid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgMsgRemoveCards(betterproto.Message):
    card_guid_list: List[int] = betterproto.uint32_field(14)
    zone: "GcgZoneType" = betterproto.enum_field(9)
    controller_id: int = betterproto.uint32_field(4)
    reason: "GcgReason" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class GcgMsgSelectOnStage(betterproto.Message):
    reason: "GcgReason" = betterproto.enum_field(13)
    card_guid: int = betterproto.uint32_field(5)
    controller_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgMsgSelectOnStageByEffect(betterproto.Message):
    skill_id: int = betterproto.uint32_field(4)
    card_guid: int = betterproto.uint32_field(2)
    controller_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GcgMsgSkillLimitsChange(betterproto.Message):
    card_limits_change_map: Dict[int, "GcgCardSkillLimitsInfo"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class GcgMsgSkillResult(betterproto.Message):
    unk3300_nnjaoehnppd: int = betterproto.uint32_field(15)
    unk3300_epndciajojp: int = betterproto.uint32_field(2)
    ahkoidfnbgc: int = betterproto.uint32_field(3)
    target_card_guid: int = betterproto.uint32_field(7)
    unk3300_nigdciglake: int = betterproto.uint32_field(1)
    unk3300_pdbagjinfpf: int = betterproto.uint32_field(13)
    npllnhifdoo: int = betterproto.uint32_field(6)
    detail_list: List["GcgDamageDetail"] = betterproto.message_field(12)
    damage: int = betterproto.uint32_field(11)
    skill_id: int = betterproto.uint32_field(4)
    unk3300_lpglocddpcl: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GcgMsgUpdateController(betterproto.Message):
    allow_controller_map: List["Uint32Pair"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GcgMsgUseSkillEnd(betterproto.Message):
    skill_id: int = betterproto.uint32_field(5)
    card_guid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GcgMsgWaitingListChange(betterproto.Message):
    controller_id: int = betterproto.uint32_field(4)
    cur_index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgOperation(betterproto.Message):
    op_redraw: "OpRedraw" = betterproto.message_field(12, group="op")
    op_select_on_stage: "OpSelectOnStage" = betterproto.message_field(4, group="op")
    op_reroll: "OpReroll" = betterproto.message_field(13, group="op")
    op_attack: "OpAttack" = betterproto.message_field(9, group="op")
    op_pass: "OpPass" = betterproto.message_field(10, group="op")
    op_play_card: "OpPlayCard" = betterproto.message_field(8, group="op")
    op_reboot: "OpReboot" = betterproto.message_field(6, group="op")
    op_surrender: "OpSurrender" = betterproto.message_field(15, group="op")


@dataclass(eq=False, repr=False)
class GcgOperationPass(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgOperationRedraw(betterproto.Message):
    card_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgOperationReq(betterproto.Message):
    redirect_uid: int = betterproto.uint32_field(3)
    op_seq: int = betterproto.uint32_field(6)
    op: "GcgOperation" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class GcgOperationRsp(betterproto.Message):
    op_seq: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class GcgPhase(betterproto.Message):
    phase_type: "GcgPhaseType" = betterproto.enum_field(5)
    allow_controller_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GcgPlayCardCostInfo(betterproto.Message):
    card_id: int = betterproto.uint32_field(3)
    cost_map: List["Uint32Pair"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class GcgPlayerBriefData(betterproto.Message):
    psn_id: str = betterproto.string_field(7)
    card_face_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    profile_picture: "ProfilePicture" = betterproto.message_field(14)
    uid: int = betterproto.uint32_field(3)
    nick_name: str = betterproto.string_field(2)
    online_id: str = betterproto.string_field(10)
    controller_id: int = betterproto.uint32_field(11)
    card_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GcgPlayerField(betterproto.Message):
    unk3300_eihomdlenmk: "GcgZone" = betterproto.message_field(4)
    unk3300_fdfphndojml: int = betterproto.uint32_field(12)
    dice_side_list: List["GcgDiceSideType"] = betterproto.enum_field(7)
    unk3300_gghkffadeal: int = betterproto.uint32_field(181)
    intention_list: List["GcgpveIntention"] = betterproto.message_field(1273)
    unk3300_glniflokbpm: int = betterproto.uint32_field(14)
    unk3300_pbecinkkhnd: int = betterproto.uint32_field(1)
    unk3300_ikjmgahcfpm: int = betterproto.uint32_field(6)
    controller_id: int = betterproto.uint32_field(3)
    modify_zone_map: Dict[int, "GcgZone"] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    unk3300_iplmhkcndle: "GcgZone" = betterproto.message_field(10)
    deck_card_num: int = betterproto.uint32_field(15)
    unk3300_efnaefbechd: "GcgZone" = betterproto.message_field(5)
    unk3300_indjnjjjnkl: "GcgZone" = betterproto.message_field(8)
    unk3300_aopjiohmpof: "GcgZone" = betterproto.message_field(9)
    waiting_list: List["GcgWaitingCharacter"] = betterproto.message_field(2)
    is_passed: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class GcgPlayerGcgState(betterproto.Message):
    plmancmlpmo: bool = betterproto.bool_field(14)
    uid: int = betterproto.uint32_field(15)
    pdjilolocgj: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class GcgpveIntention(betterproto.Message):
    card_guid: int = betterproto.uint32_field(11)
    skill_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgResourceStateNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    lolbinbndgc: List["GcgPlayerGcgState"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GcgSelectOnStageCostInfo(betterproto.Message):
    card_guid: int = betterproto.uint32_field(14)
    cost_map: List["Uint32Pair"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class GcgSettleNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgSettleOptionReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgSettleOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    close_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GcgSkillLimitsInfo(betterproto.Message):
    limits_list: List["GcgLimitsInfo"] = betterproto.message_field(8)
    skill_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewAskReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgSkillPreviewAskRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewCardInfo(betterproto.Message):
    zone_type: "GcgZoneType" = betterproto.enum_field(13)
    controller_id: int = betterproto.uint32_field(1)
    owner_card_guid: int = betterproto.uint32_field(7)
    card_guid: int = betterproto.uint32_field(12)
    retcode: int = betterproto.uint32_field(10)
    card_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewElementReactionInfo(betterproto.Message):
    unk3300_belbndndgao: List[int] = betterproto.uint32_field(12)
    unk3300_jobnbdjhapj: List[int] = betterproto.uint32_field(2)
    reaction_list: List["GcgSkillPreviewReactionInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewExtraInfo(betterproto.Message):
    unk3300_kiffjgfdnka: List["GcgSkillPreviewCardInfo"] = betterproto.message_field(6)
    unk3300_gmemmdjkcgn: List["GcgSkillPreviewCardInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewHpInfo(betterproto.Message):
    hp_change_value: int = betterproto.uint32_field(1)
    change_type: "GcgSkillHpChangeType" = betterproto.enum_field(9)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewInfo(betterproto.Message):
    card_token_change_map: Dict[
        int, "GcgSkillPreviewTokenChangeInfo"
    ] = betterproto.map_field(12, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    change_onstage_character_list: List[
        "GcgSkillPreviewOnstageChangeInfo"
    ] = betterproto.message_field(14)
    extra_info: "GcgSkillPreviewExtraInfo" = betterproto.message_field(6)
    hp_info_map: Dict[int, "GcgSkillPreviewHpInfo"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    reaction_info_map: Dict[
        int, "GcgSkillPreviewElementReactionInfo"
    ] = betterproto.map_field(9, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    unk3300_agnongelfgc: List["GcgSkillPreviewCardInfo"] = betterproto.message_field(11)
    skill_id: int = betterproto.uint32_field(2)
    unk3300_dajfjednlkk: List["GcgSkillPreviewCardInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewNotify(betterproto.Message):
    change_onstage_preview_list: List[
        "GcgChangeOnstageInfo"
    ] = betterproto.message_field(2)
    controller_id: int = betterproto.uint32_field(3)
    skill_preview_list: List["GcgSkillPreviewInfo"] = betterproto.message_field(6)
    play_card_list: List["GcgSkillPreviewPlayCardInfo"] = betterproto.message_field(9)
    onstage_card_guid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewOnstageChangeInfo(betterproto.Message):
    unk3300_ehhdppfdifb: int = betterproto.uint32_field(5)
    unk3300_baladgfapkl: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewPlayCardInfo(betterproto.Message):
    play_card_info: "GcgSkillPreviewInfo" = betterproto.message_field(15)
    target_card_guid: int = betterproto.uint32_field(9)
    hand_card_guid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewReactionInfo(betterproto.Message):
    unk3300_aenpledpmjh: int = betterproto.uint32_field(9)
    unk3300_pdehphjfakd: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewTokenChangeInfo(betterproto.Message):
    token_change_list: List["GcgSkillPreviewTokenInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewTokenInfo(betterproto.Message):
    unk3300_mmikppjmhad: int = betterproto.uint32_field(7)
    unk3300_ikicjmefeon: int = betterproto.uint32_field(6)
    token_type: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgStartChallengeByCheckRewardReq(betterproto.Message):
    config_id: int = betterproto.uint32_field(11)
    unlock_world_challenge_list: int = betterproto.uint32_field(6)
    level_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class GcgStartChallengeByCheckRewardRsp(betterproto.Message):
    bphdgokdnnk: bool = betterproto.bool_field(7)
    next_refresh_time: int = betterproto.uint32_field(9)
    exceeded_item_type_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgStartChallengeReq(betterproto.Message):
    cfajcibjpln: List[int] = betterproto.uint32_field(8)
    exp: int = betterproto.uint32_field(11)
    level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgStartChallengeRsp(betterproto.Message):
    megbpmengog: List["GcgLevelType"] = betterproto.message_field(15)
    nojngpppded: List["GcgLevelType"] = betterproto.message_field(5)
    level_type: "GcgLevelType" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GcgTavernNpcInfoNotify(betterproto.Message):
    option: "GcgTavernNpcInfo" = betterproto.enum_field(6)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class GcgtcInviteReq(betterproto.Message):
    card_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgtcInviteRsp(betterproto.Message):
    ibiikedgnhn: bool = betterproto.bool_field(3)
    element_type: int = betterproto.uint32_field(9)
    point_id: int = betterproto.uint32_field(15)
    retcode: bool = betterproto.bool_field(2)
    caaaccpgkff: int = betterproto.uint32_field(5)
    level_id: int = betterproto.uint32_field(7)
    avatar_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GcgtcTavernChallengeData(betterproto.Message):
    lidokiohkmh: List[int] = betterproto.uint32_field(13)
    caaaccpgkff: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgtcTavernChallengeDataNotify(betterproto.Message):
    level_id: int = betterproto.uint32_field(2)
    caaaccpgkff: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgtcTavernChallengeUpdateNotify(betterproto.Message):
    caaaccpgkff: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class GcgtcTavernInfoNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    card_id: int = betterproto.uint32_field(14)
    reward_index: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgToken(betterproto.Message):
    key: int = betterproto.uint32_field(9)
    value: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgWaitingCharacter(betterproto.Message):
    cond_count: int = betterproto.uint32_field(9)
    card_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgWeekChallengeInfoNotify(betterproto.Message):
    config_id: int = betterproto.uint32_field(15)
    unlock_world_challenge_list: int = betterproto.uint32_field(11)
    level_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgWorldChallengeUnlockNotify(betterproto.Message):
    level_list: List["GcgLevelData"] = betterproto.message_field(13)
    dglpakpipci: List[int] = betterproto.uint32_field(1)
    effafbokpha: List["GcgBossChallengeData"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class GcgWorldPlayerGcgStateReq(betterproto.Message):
    punish_end_time: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class GcgWorldPlayerGcgStateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    is_agree: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class GcgZone(betterproto.Message):
    card_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GearActivityFinishPlayGearReq(betterproto.Message):
    is_success: bool = betterproto.bool_field(15)
    gear_column_info_list: List["GearColumnInfo"] = betterproto.message_field(9)
    use_clue: bool = betterproto.bool_field(13)
    level_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GearActivityFinishPlayGearRsp(betterproto.Message):
    is_success: bool = betterproto.bool_field(15)
    retcode: int = betterproto.int32_field(9)
    level_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GearActivityFinishPlayPictureReq(betterproto.Message):
    is_success: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GearActivityFinishPlayPictureRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    is_success: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class GearActivityStartPlayGearReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GearActivityStartPlayGearRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class GearActivityStartPlayPictureReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GearActivityStartPlayPictureRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class GearColumnInfo(betterproto.Message):
    unk3300_hgikkdobank: bool = betterproto.bool_field(9)
    gear_id: int = betterproto.uint32_field(6)
    unk3300_keeglhmbakm: bool = betterproto.bool_field(8)
    unk3300_ghibpoiaigf: int = betterproto.uint32_field(11)
    unk3300_edllmbgndeh: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GearInfo(betterproto.Message):
    gear_level_data_list: List["GearLevelData"] = betterproto.message_field(9)
    jigsaw_picture_data: "JigsawPictureData" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GearLevelData(betterproto.Message):
    unk3300_dfghkdbened: int = betterproto.uint32_field(1)
    open_time: int = betterproto.uint32_field(4)
    level_id: int = betterproto.uint32_field(7)
    unk3300_fikplgjibgp: int = betterproto.uint32_field(12)
    is_finished: bool = betterproto.bool_field(13)
    is_open: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class GeneralMatchInfo(betterproto.Message):
    match_param: int = betterproto.uint32_field(6)
    match_id: int = betterproto.uint32_field(8)
    player_list: List["MatchPlayerInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GetActivityInfoReq(betterproto.Message):
    activity_id_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetActivityInfoRsp(betterproto.Message):
    activity_info_list: List["ActivityInfo"] = betterproto.message_field(13)
    disable_transfer_point_interaction_list: List[
        "Uint32Pair"
    ] = betterproto.message_field(3)
    activated_sale_id_list: List[int] = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class GetActivityScheduleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetActivityScheduleRsp(betterproto.Message):
    remain_fly_sea_lamp_num: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(9)
    activity_schedule_list: List["ActivityScheduleInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GetActivityShopSheetInfoReq(betterproto.Message):
    shop_type: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GetActivityShopSheetInfoRsp(betterproto.Message):
    shop_type: int = betterproto.uint32_field(7)
    sheet_info_list: List["ActivityShopSheetInfo"] = betterproto.message_field(10)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class GetAllActivatedBargainDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAllActivatedBargainDataRsp(betterproto.Message):
    snapshot_list: List["BargainSnapshot"] = betterproto.message_field(2)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class GetAllH5ActivityInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAllH5ActivityInfoRsp(betterproto.Message):
    client_red_dot_timestamp: int = betterproto.uint32_field(5)
    h5_activity_info_list: List["H5ActivityInfo"] = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class GetAllMailNotify(betterproto.Message):
    is_collected: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class GetAllMailReq(betterproto.Message):
    is_collected: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class GetAllMailResultNotify(betterproto.Message):
    is_collected: bool = betterproto.bool_field(12)
    mail_list: List["MailData"] = betterproto.message_field(1)
    total_page_count: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(8)
    page_index: int = betterproto.uint32_field(6)
    transaction: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class GetAllMailRsp(betterproto.Message):
    is_collected: bool = betterproto.bool_field(5)
    retcode: int = betterproto.int32_field(9)
    mail_list: List["MailData"] = betterproto.message_field(7)
    is_truncated: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class GetAllSceneGalleryInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAllSceneGalleryInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    gallery_info_list: List["SceneGalleryInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GetAllUnlockNameCardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAllUnlockNameCardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    name_card_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GetAreaExplorePointReq(betterproto.Message):
    area_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetAreaExplorePointRsp(betterproto.Message):
    area_id_list: List[int] = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(14)
    explore_point_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetAuthkeyReq(betterproto.Message):
    authkey_ver: int = betterproto.uint32_field(6)
    auth_appid: str = betterproto.string_field(14)
    sign_type: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetAuthkeyRsp(betterproto.Message):
    game_biz: str = betterproto.string_field(1)
    sign_type: int = betterproto.uint32_field(3)
    auth_appid: str = betterproto.string_field(11)
    authkey_ver: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(14)
    authkey: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class GetAuthSalesmanInfoReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetAuthSalesmanInfoRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(6)
    day_reward_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetBargainDataReq(betterproto.Message):
    bargain_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GetBargainDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    snapshot: "BargainSnapshot" = betterproto.message_field(13)
    bargain_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetBattlePassProductReq(betterproto.Message):
    battle_pass_product_play_type: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetBattlePassProductRsp(betterproto.Message):
    price_tier: str = betterproto.string_field(15)
    retcode: int = betterproto.int32_field(4)
    battle_pass_product_play_type: int = betterproto.uint32_field(9)
    cur_schedule_id: int = betterproto.uint32_field(6)
    product_id: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class GetBlossomBriefInfoListReq(betterproto.Message):
    city_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetBlossomBriefInfoListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    brief_info_list: List["BlossomBriefInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetBonusActivityRewardReq(betterproto.Message):
    bonus_activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetBonusActivityRewardRsp(betterproto.Message):
    bonus_activity_info_list: "BonusActivityInfo" = betterproto.message_field(9)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class GetChatEmojiCollectionReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetChatEmojiCollectionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    chat_emoji_collection_data: "ChatEmojiCollectionData" = betterproto.message_field(
        12
    )


@dataclass(eq=False, repr=False)
class GetCityHuntingOfferReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetCityHuntingOfferRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    next_refresh_time: int = betterproto.uint32_field(8)
    cur_week_finished_count: int = betterproto.uint32_field(14)
    ongoing_hunting_pair: "HuntingPair" = betterproto.message_field(7)
    hunting_offer_list: List["HuntingOfferData"] = betterproto.message_field(11)
    city_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GetCityReputationInfoReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetCityReputationInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    city_id: int = betterproto.uint32_field(6)
    city_reputation_info: "CityReputationInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetCityReputationMapInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCityReputationMapInfoRsp(betterproto.Message):
    unk3300_ncmhmodiikm: bool = betterproto.bool_field(13)
    retcode: int = betterproto.int32_field(4)
    unlock_hunting_city_list: List[int] = betterproto.uint32_field(12)
    unk3300_gjfnopnmfng: bool = betterproto.bool_field(7)
    reward_city_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetCompoundDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCompoundDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    compound_queue_data_list: List["CompoundQueueData"] = betterproto.message_field(6)
    unlock_compound_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GetCustomDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCustomDungeonRsp(betterproto.Message):
    ban_info: "CustomDungeonBanInfo" = betterproto.message_field(14)
    retcode: int = betterproto.int32_field(8)
    brief_list: List["CustomDungeonBrief"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GetDailyDungeonEntryInfoReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetDailyDungeonEntryInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    daily_dungeon_info_list: List["DailyDungeonEntryInfo"] = betterproto.message_field(
        8
    )


@dataclass(eq=False, repr=False)
class GetDungeonEntryExploreConditionReq(betterproto.Message):
    dungeon_entry_scene_point_id: int = betterproto.uint32_field(11)
    scene_id: int = betterproto.uint32_field(13)
    dungeon_entry_config_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetDungeonEntryExploreConditionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    dungeon_entry_cond: "DungeonEntryCond" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GetExpeditionAssistInfoListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetExpeditionAssistInfoListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    assist_info_list: List["ExpeditionAssistInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetFriendShowAvatarInfoReq(betterproto.Message):
    uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetFriendShowAvatarInfoRsp(betterproto.Message):
    show_avatar_info_list: List["ShowAvatarInfo"] = betterproto.message_field(3)
    retcode: int = betterproto.int32_field(12)
    uid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetFriendShowNameCardInfoReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetFriendShowNameCardInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    uid: int = betterproto.uint32_field(2)
    show_name_card_id_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetFurnitureCurModuleArrangeCountReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetGachaInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetGachaInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    unk3300_ohfmhihjhpj: bool = betterproto.bool_field(11)
    daily_gacha_times: int = betterproto.uint32_field(1)
    gacha_random: int = betterproto.uint32_field(6)
    unk3300_hbiliaeihnk: bool = betterproto.bool_field(13)
    gacha_info_list: List["GachaInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetGameplayRecommendationReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(12)
    skill_response: "SkillResponse" = betterproto.message_field(223, group="detail")
    reliquary_response: "ReliquaryResponse" = betterproto.message_field(
        1964, group="detail"
    )
    element_reliquary_response: "ElementReliquaryResponse" = betterproto.message_field(
        1912, group="detail"
    )


@dataclass(eq=False, repr=False)
class GetGameplayRecommendationRsp(betterproto.Message):
    giving_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetHomeExchangeWoodInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetHomeExchangeWoodInfoRsp(betterproto.Message):
    wood_info_list: List[
        "GetHomeExchangeWoodInfoRspHomeExchangeWoodInfo"
    ] = betterproto.message_field(11)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class GetHomeExchangeWoodInfoRspHomeExchangeWoodInfo(betterproto.Message):
    exchange_limit: int = betterproto.uint32_field(8)
    wood_id: int = betterproto.uint32_field(2)
    next_refresh_time: int = betterproto.uint32_field(3)
    exchanged_count: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GetHomeLevelUpRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetHomeLevelUpRewardRsp(betterproto.Message):
    level: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class GetHuntingOfferRewardReq(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(14)
    city_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetHuntingOfferRewardRsp(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(5)
    city_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class GetInvestigationMonsterReq(betterproto.Message):
    city_id_list: List[int] = betterproto.uint32_field(1)
    is_for_mark: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GetInvestigationMonsterRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    monster_list: List["InvestigationMonster"] = betterproto.message_field(2)
    is_for_mark: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class GetMailItemReq(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetMailItemRsp(betterproto.Message):
    item_list: List["EquipParam"] = betterproto.message_field(9)
    mail_id_list: List[int] = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class GetMapAreaReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMapAreaRsp(betterproto.Message):
    map_area_info_list: List["MapAreaInfo"] = betterproto.message_field(3)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class GetMapMarkTipsReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMapMarkTipsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    mark_tips_list: List["MapMarkTipsInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GetMechanicusInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMechanicusInfoRsp(betterproto.Message):
    mechanicus_info: "MechanicusInfo" = betterproto.message_field(1)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class GetNextResourceInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetNextResourceInfoRsp(betterproto.Message):
    next_res_version_config: "ResVersionConfig" = betterproto.message_field(5)
    retcode: int = betterproto.int32_field(9)
    next_resource_url: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class GetOnlinePlayerInfoReq(betterproto.Message):
    is_online_id: bool = betterproto.bool_field(3)
    target_uid: int = betterproto.uint32_field(4, group="player_id")
    online_id: str = betterproto.string_field(10, group="player_id")
    psn_id: str = betterproto.string_field(12, group="player_id")


@dataclass(eq=False, repr=False)
class GetOnlinePlayerInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    target_player_info: "OnlinePlayerInfo" = betterproto.message_field(11)
    target_uid: int = betterproto.uint32_field(3)
    param: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetOnlinePlayerListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetOnlinePlayerListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    param: int = betterproto.uint32_field(14)
    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class GetOpActivityInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetOpActivityInfoRsp(betterproto.Message):
    op_activity_info_list: List["OpActivityInfo"] = betterproto.message_field(11)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class GetParentQuestVideoKeyReq(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GetParentQuestVideoKeyRsp(betterproto.Message):
    video_key: int = betterproto.uint64_field(2)
    retcode: int = betterproto.int32_field(9)
    parent_quest_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GetPlayerAskFriendListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerAskFriendListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    ask_friend_list: List["FriendBrief"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class GetPlayerBlacklistReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerBlacklistRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    blacklist: List["FriendBrief"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GetPlayerFriendListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerFriendListRsp(betterproto.Message):
    ask_friend_list: List["FriendBrief"] = betterproto.message_field(7)
    friend_list: List["FriendBrief"] = betterproto.message_field(11)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class GetPlayerHomeCompInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerMpModeAvailabilityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerMpModeAvailabilityRsp(betterproto.Message):
    mp_ret: int = betterproto.int32_field(12)
    retcode: int = betterproto.int32_field(3)
    param_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetPlayerSocialDetailReq(betterproto.Message):
    uid: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GetPlayerSocialDetailRsp(betterproto.Message):
    detail_data: "SocialDetail" = betterproto.message_field(15)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class GetPlayerTokenReq(betterproto.Message):
    platform_type: int = betterproto.uint32_field(10)
    unk3300_phnohckihia: str = betterproto.string_field(6)
    country_code: str = betterproto.string_field(1)
    client_ip_str: str = betterproto.string_field(8)
    unk3300_pmgfbmjnncl: int = betterproto.uint32_field(13)
    key_id: int = betterproto.uint32_field(294)
    unk3300_pkonaoidnfk: str = betterproto.string_field(9)
    account_type: int = betterproto.uint32_field(5)
    is_guest: bool = betterproto.bool_field(14)
    cloud_client_ip: int = betterproto.uint32_field(1399)
    birthday: str = betterproto.string_field(65)
    online_id: str = betterproto.string_field(12)
    uid: int = betterproto.uint32_field(11)
    client_rand_key: str = betterproto.string_field(776)
    sub_channel_id: int = betterproto.uint32_field(7)
    account_uid: str = betterproto.string_field(4)
    account_token: str = betterproto.string_field(2)
    psn_id: str = betterproto.string_field(15)
    channel_id: int = betterproto.uint32_field(3)
    lang: int = betterproto.uint32_field(904)


@dataclass(eq=False, repr=False)
class GetPlayerTokenRsp(betterproto.Message):
    sub_channel_id: int = betterproto.uint32_field(891)
    token: str = betterproto.string_field(6)
    uid: int = betterproto.uint32_field(1)
    secret_key: str = betterproto.string_field(12)
    account_type: int = betterproto.uint32_field(3)
    msg: str = betterproto.string_field(10)
    unk3300_ajbbipfmbel: bool = betterproto.bool_field(661)
    security_cmd_buffer: bytes = betterproto.bytes_field(13)
    retcode: int = betterproto.int32_field(15)
    extra_bin_data: bytes = betterproto.bytes_field(14)
    client_version_random_key: str = betterproto.string_field(1558)
    country_code: str = betterproto.string_field(1960)
    key_id: int = betterproto.uint32_field(2003)
    birthday: str = betterproto.string_field(1459)
    gm_uid: int = betterproto.uint32_field(5)
    secret_key_seed: int = betterproto.uint64_field(8)
    black_uid_end_time: int = betterproto.uint32_field(2)
    channel_id: int = betterproto.uint32_field(1356)
    reg_platform: int = betterproto.uint32_field(1614)
    platform_type: int = betterproto.uint32_field(11)
    is_guest: bool = betterproto.bool_field(4)
    finish_collection_id_list: List[int] = betterproto.uint32_field(1846)
    tag: int = betterproto.uint32_field(1344)
    account_uid: str = betterproto.string_field(9)
    is_proficient_player: bool = betterproto.bool_field(7)
    sign: str = betterproto.string_field(1993)
    stop_server: "StopServer" = betterproto.message_field(347)
    psn_id: str = betterproto.string_field(1285)
    cloud_client_ip: int = betterproto.uint32_field(1481)
    client_ip_str: str = betterproto.string_field(64)
    server_rand_key: str = betterproto.string_field(1420)
    unk3300_cfbhahohdkc: bool = betterproto.bool_field(1663)


@dataclass(eq=False, repr=False)
class GetPushTipsRewardReq(betterproto.Message):
    push_tips_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetPushTipsRewardRsp(betterproto.Message):
    push_tips_id_list: List[int] = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class GetQuestLackingResourceReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetQuestLackingResourceRsp(betterproto.Message):
    lacked_npc_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    retcode: int = betterproto.int32_field(14)
    lacked_place_list: List[int] = betterproto.uint32_field(9)
    lacked_npc_list: List[int] = betterproto.uint32_field(15)
    quest_id: int = betterproto.uint32_field(6)
    lacked_place_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GetQuestTalkHistoryReq(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetQuestTalkHistoryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    parent_quest_id: int = betterproto.uint32_field(13)
    talk_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetRecentMpPlayerListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRecentMpPlayerListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    recent_mp_player_brief_list: List["FriendBrief"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class GetRecommendCustomDungeonReq(betterproto.Message):
    is_refresh: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class GetRecommendCustomDungeonRsp(betterproto.Message):
    custom_dungeon_list: List["OtherCustomDungeonBrief"] = betterproto.message_field(10)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class GetRegionSearchReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetReunionMissionInfoReq(betterproto.Message):
    mission_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetReunionMissionInfoRsp(betterproto.Message):
    mission_info: "ReunionMissionInfo" = betterproto.message_field(4)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class GetReunionPrivilegeInfoReq(betterproto.Message):
    privilege_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetReunionPrivilegeInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    privilege_info: "ReunionPrivilegeInfo" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GetReunionSignInInfoReq(betterproto.Message):
    sign_in_config_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetReunionSignInInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    sign_in_info: "ReunionSignInInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetRogueDairyRepairInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRogueDairyRepairInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class GetSceneAreaReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(6)
    belong_uid: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetSceneAreaRsp(betterproto.Message):
    area_id_list: List[int] = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(6)
    city_info_list: List["CityInfo"] = betterproto.message_field(14)
    scene_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetSceneNpcPositionReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(8)
    npc_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetSceneNpcPositionRsp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(13)
    npc_info_list: List["NpcPositionInfo"] = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class GetScenePerformanceReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetScenePerformanceRsp(betterproto.Message):
    unk3300_glnfifpnjie: int = betterproto.uint32_field(7)
    unk3300_mijmklbgkml: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(1)
    unk3300_pdpjemekhkd: int = betterproto.uint32_field(10)
    unk3300_jmljlnkljnp: int = betterproto.uint32_field(8)
    pos: "Vector" = betterproto.message_field(15)
    unk3300_ihbpcpcjibc: int = betterproto.uint32_field(11)
    unk3300_liofgahknia: int = betterproto.uint32_field(13)
    unk3300_mmaljifdkjk: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GetScenePointReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(15)
    belong_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetScenePointRsp(betterproto.Message):
    locked_point_list: List[int] = betterproto.uint32_field(7)
    not_interact_dungeon_entry_list: List[int] = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(2)
    to_be_explore_dungeon_entry_list: List[int] = betterproto.uint32_field(13)
    belong_uid: int = betterproto.uint32_field(6)
    hide_point_list: List[int] = betterproto.uint32_field(3)
    unlock_area_list: List[int] = betterproto.uint32_field(9)
    unlocked_point_list: List[int] = betterproto.uint32_field(12)
    not_explored_dungeon_entry_list: List[int] = betterproto.uint32_field(4)
    unhide_point_list: List[int] = betterproto.uint32_field(5)
    scene_id: int = betterproto.uint32_field(14)
    group_unlimit_point_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetShopmallDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetShopmallDataRsp(betterproto.Message):
    shop_type_list: List[int] = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class GetShopReq(betterproto.Message):
    shop_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetShopRsp(betterproto.Message):
    shop: "Shop" = betterproto.message_field(10)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class GetSignInRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(13)
    reward_day: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetSignInRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    sign_in_info: "SignInInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GetStoreCustomDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetStoreCustomDungeonRsp(betterproto.Message):
    custom_dungeon_list: List["OtherCustomDungeonBrief"] = betterproto.message_field(1)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class GetUgcBriefInfoReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(10)
    ugc_guid: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class GetUgcBriefInfoRsp(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(15)
    ugc_type: "UgcType" = betterproto.enum_field(9)
    retcode: int = betterproto.int32_field(1)
    music_brief_info: "MusicBriefInfo" = betterproto.message_field(8, group="brief")


@dataclass(eq=False, repr=False)
class GetUgcReq(betterproto.Message):
    ugc_record_usage: "RecordUsage" = betterproto.enum_field(8)
    get_ugc_type: "GetUgcType" = betterproto.enum_field(10)
    ugc_guid: int = betterproto.uint64_field(15)
    ugc_type: "UgcType" = betterproto.enum_field(2)
    is_require_brief: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GetUgcRsp(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(12)
    retcode: int = betterproto.int32_field(8)
    ugc_record_usage: "RecordUsage" = betterproto.enum_field(7)
    ugc_guid: int = betterproto.uint64_field(9)
    music_record: "MusicRecord" = betterproto.message_field(1, group="record")


@dataclass(eq=False, repr=False)
class GetWidgetSlotReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWidgetSlotRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    slot_list: List["WidgetSlotData"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GetWorldMpInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWorldMpInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    is_in_mp_mode: bool = betterproto.bool_field(11)
    quit_mp_valid_time: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class Gfckmnhgfep(betterproto.Message):
    player_uid_list: List[int] = betterproto.uint32_field(4)
    match_id: int = betterproto.uint32_field(11)
    map_id: int = betterproto.uint32_field(15)
    mdpgfcplekf: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class Gfoipjijfpp(betterproto.Message):
    init_pos: "Vector" = betterproto.message_field(6)
    forward: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class Ghhgmfffgnl(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(6)
    hkhgjjepeio: bool = betterproto.bool_field(1)
    stage_id: int = betterproto.uint32_field(5)
    finish_time: int = betterproto.uint32_field(15)
    is_new_record: bool = betterproto.bool_field(11)
    difficulty: int = betterproto.uint32_field(9)
    is_succ: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class GiveUpRoguelikeDungeonCardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GiveUpRoguelikeDungeonCardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class GivingRecord(betterproto.Message):
    is_gadget_giving: bool = betterproto.bool_field(6)
    group_id: int = betterproto.uint32_field(14)
    giving_id: int = betterproto.uint32_field(4)
    config_id: int = betterproto.uint32_field(7)
    last_group_id: int = betterproto.uint32_field(8)
    is_finished: bool = betterproto.bool_field(1)
    material_count_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GivingRecordChangeNotify(betterproto.Message):
    giving_record: "GivingRecord" = betterproto.message_field(8)
    is_deactive: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GivingRecordNotify(betterproto.Message):
    giving_record_list: List["GivingRecord"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class Gjbkgonobjd(betterproto.Message):
    play_num: int = betterproto.uint32_field(1)
    like_num: int = betterproto.uint32_field(2)
    store_num: int = betterproto.uint32_field(3)
    win_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class Glelfdkhcnk(betterproto.Message):
    min_finish_time: int = betterproto.uint32_field(2)
    level_id: int = betterproto.uint32_field(12)
    is_finish: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class GlobalBuildingInfoNotify(betterproto.Message):
    max_num: int = betterproto.uint32_field(4)
    current_num: int = betterproto.uint32_field(8)
    building_list: List["BuildingInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class Gmfnaijfbfd(betterproto.Message):
    apply_entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class Gmiedkdenpo(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class Gmjdgjiddci(betterproto.Message):
    lehnbmgfalp: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class GmObstacleInfo(betterproto.Message):
    timestamp: int = betterproto.int64_field(13)
    shape: "GmObstacleInfoShapeType" = betterproto.enum_field(3)
    center: "Vector" = betterproto.message_field(9)
    obstacle_id: int = betterproto.int32_field(15)
    rotation: "MathQuaternion" = betterproto.message_field(4)
    extents: "Vector3Int" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GmShowNavMeshReq(betterproto.Message):
    center: "Vector" = betterproto.message_field(6)
    extent: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GmShowNavMeshRsp(betterproto.Message):
    tiles: List["PbNavMeshTile"] = betterproto.message_field(9)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class GmShowObstacleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GmShowObstacleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    obstacles: List["GmObstacleInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GmTalkNotify(betterproto.Message):
    msg: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class GmTalkReq(betterproto.Message):
    msg: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class GmTalkRsp(betterproto.Message):
    retmsg: str = betterproto.string_field(3)
    retcode: int = betterproto.int32_field(7)
    msg: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class Gomaoccefnm(betterproto.Message):
    dpinghecdgc: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class GrantRewardNotify(betterproto.Message):
    reward: "Reward" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class GrassInfo(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    center: "Vector" = betterproto.message_field(2)
    size: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GravenInnocenceCampInfo(betterproto.Message):
    stage_info_list: List["GravenInnocenceCampStageInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GravenInnocenceCampStageInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(8)
    stage_id: int = betterproto.uint32_field(14)
    is_finished: bool = betterproto.bool_field(13)
    level_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GravenInnocenceCarveInfo(betterproto.Message):
    has_edit_config_id_list: List[int] = betterproto.uint32_field(12)
    can_edit_count: int = betterproto.uint32_field(15)
    stage_info_list: List["GravenInnocenceCarveStageInfo"] = betterproto.message_field(
        4
    )


@dataclass(eq=False, repr=False)
class GravenInnocenceCarveStageInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(12)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GravenInnocenceEditCarveCombinationReq(betterproto.Message):
    combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(15)
    entity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GravenInnocenceEditCarveCombinationRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GravenInnocenceInfo(betterproto.Message):
    carve_info: "GravenInnocenceCarveInfo" = betterproto.message_field(12)
    photo_info: "GravenInnocencePhotoInfo" = betterproto.message_field(5)
    race_info: "GravenInnocenceRaceInfo" = betterproto.message_field(13)
    left_monsters: bool = betterproto.bool_field(8)
    camp_info: "GravenInnocenceCampInfo" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoFinishReq(betterproto.Message):
    param: int = betterproto.uint32_field(9)
    object_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    object_id: int = betterproto.uint32_field(5)
    param: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoInfo(betterproto.Message):
    object_info_list: List[
        "GravenInnocencePhotoObjectInfo"
    ] = betterproto.message_field(10)
    stage_info_list: List["GravenInnocencePhotoStageInfo"] = betterproto.message_field(
        3
    )


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoObjectInfo(betterproto.Message):
    param: int = betterproto.uint32_field(15)
    finish_time: int = betterproto.uint32_field(10)
    object_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoReminderNotify(betterproto.Message):
    reminder_id: int = betterproto.uint32_field(9)
    group_bundle_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoStageInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(12)
    is_finished: bool = betterproto.bool_field(5)
    is_open: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceInfo(betterproto.Message):
    level_info_list: List["GravenInnocenceRaceLevelInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceLevelInfo(betterproto.Message):
    level_id: int = betterproto.uint32_field(7)
    is_open: bool = betterproto.bool_field(13)
    max_score: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceRestartReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceRestartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    gallery_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceSettleNotify(betterproto.Message):
    score: int = betterproto.uint32_field(6)
    is_new_record: bool = betterproto.bool_field(11)
    is_success: bool = betterproto.bool_field(1)
    unk3300_ohahhknajkl: int = betterproto.uint32_field(13)
    reason: "GalleryStopReason" = betterproto.enum_field(9)
    unk3300_ipgjkkfdpjj: int = betterproto.uint32_field(8)
    gallery_id: int = betterproto.uint32_field(14)
    remain_time: int = betterproto.uint32_field(12)
    unk3300_boiphopmhjm: int = betterproto.uint32_field(3)
    level_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GroupLinkAllNotify(betterproto.Message):
    bundle_list: List["GroupLinkBundle"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GroupLinkBundle(betterproto.Message):
    is_activated: bool = betterproto.bool_field(7)
    center: "Vector" = betterproto.message_field(6)
    scene_id: int = betterproto.uint32_field(8)
    radius: int = betterproto.uint32_field(13)
    is_show_mark: bool = betterproto.bool_field(12)
    bundle_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GroupLinkChangeNotify(betterproto.Message):
    bundle: "GroupLinkBundle" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GroupLinkDeleteNotify(betterproto.Message):
    bundle_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GroupLinkMarkUpdateNotify(betterproto.Message):
    bundle: "GroupLinkBundle" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GroupSuiteNotify(betterproto.Message):
    group_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GroupUnloadNotify(betterproto.Message):
    group_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GuestBeginEnterSceneNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(4)
    scene_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GuestPostEnterSceneNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(12)
    uid: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class H5ActivityIdsNotify(betterproto.Message):
    h5_activity_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    client_red_dot_timestamp: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class H5ActivityInfo(betterproto.Message):
    prefab_path: str = betterproto.string_field(13)
    content_close_time: int = betterproto.uint32_field(1)
    is_entrance_open: bool = betterproto.bool_field(6)
    end_time: int = betterproto.uint32_field(11)
    unk3300_dmbnfecakbh: int = betterproto.uint32_field(4)
    begin_time: int = betterproto.uint32_field(8)
    url: str = betterproto.string_field(3)
    unk3300_obkebdckhjf: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class HachiInfo(betterproto.Message):
    stage_map: Dict[int, "HachiStageInfo"] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class HachiStageInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(10)
    is_finished: bool = betterproto.bool_field(12)
    stage_id: int = betterproto.uint32_field(13)
    is_open: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class HandballInfo(betterproto.Message):
    ball_place_info: "PlaceInfo" = betterproto.message_field(11)
    is_have_ball: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class Hbmjgjeadeh(betterproto.Message):
    lfpempoopmd: float = betterproto.float_field(2)
    dfadhemafpn: float = betterproto.float_field(8)
    ibbkobjieeg: bool = betterproto.bool_field(12)
    gookfcglmjd: float = betterproto.float_field(13)
    bhgooledknh: int = betterproto.uint32_field(15)
    ilodbmpgegj: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Hcamgideafe(betterproto.Message):
    best_score: int = betterproto.uint32_field(6)
    is_open: bool = betterproto.bool_field(1)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Hehodlhcpel(betterproto.Message):
    entity_id: int = betterproto.uint32_field(10)
    glbmapjdhpc: "Vector" = betterproto.message_field(5)
    gnanpemiogh: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class Hfdgdglgeee(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    pakoigkhjal: List["Llijljfhgbd"] = betterproto.message_field(2)
    knmgmjklfob: List[str] = betterproto.string_field(3)
    jkfdibhoggm: List["Pldkichaheb"] = betterproto.message_field(4)
    ojmkoemmlpa: "Gmjdgjiddci" = betterproto.message_field(5)
    idbdfgaalao: "Gjphkjffmom" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class Hghpbljeajj(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    title: str = betterproto.string_field(2)
    type: str = betterproto.string_field(3)
    jmggbhlelnm: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class HideAndSeekActivityDetailInfo(betterproto.Message):
    kpfclbhekho: List[int] = betterproto.uint32_field(5)
    pfklphkcnll: List[int] = betterproto.uint32_field(3)
    ddcdocelpof: List[int] = betterproto.uint32_field(13)
    ebljifhneof: List["HideAndSeekMapInfo"] = betterproto.message_field(4)
    noljhjhlkom: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class HideAndSeekChooseMapReq(betterproto.Message):
    map_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HideAndSeekChooseMapRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    map_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class HideAndSeekInfo(betterproto.Message):
    visible_uid_list: List[int] = betterproto.uint32_field(5)
    caught_uid_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HideAndSeekMapInfo(betterproto.Message):
    id: int = betterproto.uint32_field(7)
    kccalkjgkkd: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class HideAndSeekPlayerBattleInfo(betterproto.Message):
    costume_id: int = betterproto.uint32_field(5)
    is_ready: bool = betterproto.bool_field(13)
    skill_list: List[int] = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class HideAndSeekPlayerCapturedNotify(betterproto.Message):
    ghost_skill_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HideAndSeekPlayerReadyNotify(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HideAndSeekPlayerSetAvatarNotify(betterproto.Message):
    costume_id: int = betterproto.uint32_field(9)
    uid: int = betterproto.uint32_field(2)
    avatar_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HideAndSeekSelectAvatarReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HideAndSeekSelectAvatarRsp(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class HideAndSeekSelectSkillReq(betterproto.Message):
    skill_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HideAndSeekSelectSkillRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    skill_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HideAndSeekSetReadyReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HideAndSeekSetReadyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class HideAndSeekSettleInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(2)
    head_image: int = betterproto.uint32_field(3)
    online_id: str = betterproto.string_field(10)
    nickname: str = betterproto.string_field(9)
    profile_picture: "ProfilePicture" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HideAndSeekSettleNotify(betterproto.Message):
    winner_list: List[int] = betterproto.uint32_field(9)
    cost_time: int = betterproto.uint32_field(10)
    stage_type: int = betterproto.uint32_field(11)
    reason: "SettleReason" = betterproto.enum_field(1)
    settle_info_list: List["HideAndSeekSettleInfo"] = betterproto.message_field(4)
    play_index: int = betterproto.uint32_field(13)
    score_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(7)
    is_record_score: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class HideAndSeekStageInfo(betterproto.Message):
    mgkdaffbijb: int = betterproto.uint32_field(11)
    bgbdjeipaco: Dict[int, "HideAndSeekPlayerBattleInfo"] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    is_record_score: bool = betterproto.bool_field(15)
    ambepllnpla: List[int] = betterproto.uint32_field(9)
    map_id: int = betterproto.uint32_field(8)
    stage_type: "HideAndSeekStageType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class HitClientTrivialNotify(betterproto.Message):
    position: "Vector" = betterproto.message_field(9)
    owner_entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HitCollision(betterproto.Message):
    attackee_hit_entity_angle: float = betterproto.float_field(12)
    hit_dir: "Vector" = betterproto.message_field(4)
    hit_point: "Vector" = betterproto.message_field(3)
    hit_box_index: int = betterproto.int32_field(10)
    attackee_hit_force_angle: float = betterproto.float_field(15)
    hit_collider_type: "HitColliderType" = betterproto.enum_field(9)


@dataclass(eq=False, repr=False)
class HitTreeInfo(betterproto.Message):
    tree_type: int = betterproto.uint32_field(1)
    tree_pos: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HitTreeNotify(betterproto.Message):
    drop_pos: "Vector" = betterproto.message_field(11)
    tree_pos: "Vector" = betterproto.message_field(4)
    tree_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class Hkbipboackf(betterproto.Message):
    param_list: List[int] = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class Hkkpoplhmcl(betterproto.Message):
    item_list: List["EquipParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Hldpdhkifjn(betterproto.Message):
    kopcjfaeegb: int = betterproto.uint32_field(3)
    lgcfopjlbmb: int = betterproto.int32_field(12)
    mfpmgbedfid: int = betterproto.uint32_field(2)
    aeinmdecjbh: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class Hlndkjkhgmg(betterproto.Message):
    lakkcmpceee: List[int] = betterproto.uint32_field(4)
    cbdijkdcnie: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class Hncbkmeacli(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)
    cur_pos: "Vector" = betterproto.message_field(7)
    normalized_time_compact: int = betterproto.uint32_field(15)
    bafodnbpgic: int = betterproto.uint32_field(1)
    face_angle_compact: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class Hnnnjjpllfn(betterproto.Message):
    room_id: int = betterproto.uint32_field(9)
    rot: "Vector" = betterproto.message_field(2)
    pos: "Vector" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class HomeAllUnlockedBgmIdListNotify(betterproto.Message):
    all_unlocked_bgm_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeAnimalData(betterproto.Message):
    spawn_rot: "Vector" = betterproto.message_field(13)
    furniture_id: int = betterproto.uint32_field(10)
    spawn_pos: "Vector" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class HomeAvatarAllFinishRewardNotify(betterproto.Message):
    event_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HomeAvatarCostumeChangeNotify(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(7)
    costume_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeAvatarRewardEventGetReq(betterproto.Message):
    event_id: int = betterproto.uint32_field(7)
    avatar_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeAvatarRewardEventGetRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    item_list: List["ItemParam"] = betterproto.message_field(2)
    event_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomeAvatarRewardEventInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(6)
    random_position: int = betterproto.uint32_field(4)
    event_id: int = betterproto.uint32_field(14)
    guid: int = betterproto.uint32_field(5)
    suite_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeAvatarRewardEventNotify(betterproto.Message):
    is_event_trigger: bool = betterproto.bool_field(1)
    reward_event: "HomeAvatarRewardEventInfo" = betterproto.message_field(12)
    pending_list: List["HomeAvatarRewardEventInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonAllEventNotify(betterproto.Message):
    summon_event_list: List["HomeAvatarSummonEventInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonEventInfo(betterproto.Message):
    suit_id: int = betterproto.uint32_field(4)
    random_position: int = betterproto.uint32_field(2)
    event_id: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(12)
    event_over_time: int = betterproto.uint32_field(14)
    guid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonEventReq(betterproto.Message):
    guid: int = betterproto.uint32_field(7)
    avatar_id: int = betterproto.uint32_field(11)
    suit_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonEventRsp(betterproto.Message):
    event_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonFinishReq(betterproto.Message):
    event_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonFinishRsp(betterproto.Message):
    event_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class HomeAvatarTalkFinishInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(11)
    finish_talk_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HomeAvatarTalkFinishInfoNotify(betterproto.Message):
    avatar_talk_info_list: List["HomeAvatarTalkFinishInfo"] = betterproto.message_field(
        11
    )


@dataclass(eq=False, repr=False)
class HomeAvatarTalkReq(betterproto.Message):
    talk_id: int = betterproto.uint32_field(4)
    avatar_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomeAvatarTalkRsp(betterproto.Message):
    avatar_talk_info: "HomeAvatarTalkFinishInfo" = betterproto.message_field(5)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class HomeAvtarAllFinishRewardNotify(betterproto.Message):
    event_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HomeBalloonGalleryRecord(betterproto.Message):
    hit_count: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(12)
    player_info: "HomeGroupPlayerInfo" = betterproto.message_field(11)
    timestamp: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeBalloonGalleryScoreNotify(betterproto.Message):
    trigger_entity_id: int = betterproto.uint32_field(13)
    cur_score: int = betterproto.uint32_field(7)
    add_score: int = betterproto.uint32_field(10)
    gallery_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class HomeBalloonGallerySettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(10)
    settle_info: "BalloonGallerySettleInfo" = betterproto.message_field(8)
    rank: int = betterproto.uint32_field(3)
    is_new_record: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class HomeBalloonInfo(betterproto.Message):
    score: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HomeBalloonRecord(betterproto.Message):
    record_list: List["HomeBalloonGalleryRecord"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class HomeBasicInfo(betterproto.Message):
    home_owner_uid: int = betterproto.uint32_field(11)
    cur_module_id: int = betterproto.uint32_field(2)
    limited_shop_info: "HomeLimitedShopInfo" = betterproto.message_field(15)
    level: int = betterproto.uint32_field(9)
    owner_nick_name: str = betterproto.string_field(3)
    is_in_edit_mode: bool = betterproto.bool_field(14)
    cur_room_scene_id: int = betterproto.uint32_field(7)
    exp: int = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class HomeBasicInfoNotify(betterproto.Message):
    basic_info: "HomeBasicInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class HomeBlockArrangementInfo(betterproto.Message):
    furniture_suite_list: List["HomeFurnitureSuiteData"] = betterproto.message_field(12)
    field_list: List["HomeBlockFieldData"] = betterproto.message_field(13)
    weekend_djinn_info_list: List["WeekendDjinnInfo"] = betterproto.message_field(8)
    persistent_furniture_list: List["HomeFurnitureData"] = betterproto.message_field(6)
    dot_pattern_list: List["HomeBlockDotPattern"] = betterproto.message_field(7)
    comfort_value: int = betterproto.uint32_field(9)
    furniture_group_list: List["HomeFurnitureGroupData"] = betterproto.message_field(3)
    deploy_furniure_list: List["HomeFurnitureData"] = betterproto.message_field(15)
    deploy_npc_list: List["HomeNpcData"] = betterproto.message_field(5)
    furniture_custom_suite_list: List[
        "HomeFurnitureCustomSuiteData"
    ] = betterproto.message_field(4)
    is_unlocked: bool = betterproto.bool_field(1)
    block_id: int = betterproto.uint32_field(2)
    deploy_animal_list: List["HomeAnimalData"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class HomeBlockDotPattern(betterproto.Message):
    width: int = betterproto.uint32_field(3)
    data: bytes = betterproto.bytes_field(14)
    height: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class HomeBlockFieldData(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    guid: int = betterproto.uint32_field(6)
    sub_field_list: List["HomeBlockSubFieldData"] = betterproto.message_field(9)
    furniture_id: int = betterproto.uint32_field(10)
    rot: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeBlockNotify(betterproto.Message):
    end_time: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeBlockSubFieldData(betterproto.Message):
    rot: "Vector" = betterproto.message_field(6)
    pos: "Vector" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class HomeBlueprintInfoNotify(betterproto.Message):
    is_allow_friend_copy: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class HomeBlueprintSearchInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(9)
    share_code: str = betterproto.string_field(15)
    block_id: int = betterproto.uint32_field(2)
    module_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeBlueprintSlotInfo(betterproto.Message):
    is_allow_copy: bool = betterproto.bool_field(9)
    create_time: int = betterproto.uint32_field(8)
    scene_id: int = betterproto.uint32_field(3)
    block_id: int = betterproto.uint32_field(2)
    slot_id: int = betterproto.uint32_field(12)
    module_id: int = betterproto.uint32_field(1)
    share_code: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class HomeChangeBgmNotify(betterproto.Message):
    bgm_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HomeChangeBgmReq(betterproto.Message):
    bgm_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeChangeBgmRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class HomeChangeEditModeReq(betterproto.Message):
    is_enter_edit_mode: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class HomeChangeEditModeRsp(betterproto.Message):
    is_enter_edit_mode: bool = betterproto.bool_field(9)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class HomeChangeModuleReq(betterproto.Message):
    target_module_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeChangeModuleRsp(betterproto.Message):
    target_module_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class HomeChooseModuleReq(betterproto.Message):
    module_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class HomeChooseModuleRsp(betterproto.Message):
    module_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class HomeClearGroupRecordReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HomeClearGroupRecordRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    group_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HomeComfortInfoNotify(betterproto.Message):
    module_info_list: List["HomeModuleComfortInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class HomeCreateBlueprintReq(betterproto.Message):
    scene_arrangement_info: "HomeSceneArrangementInfo" = betterproto.message_field(15)
    slot_id: int = betterproto.uint32_field(13)
    server_share_code: str = betterproto.string_field(8)
    gen_share_code_count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HomeCreateBlueprintRsp(betterproto.Message):
    slot_info: "HomeBlueprintSlotInfo" = betterproto.message_field(4)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class HomeCustomFurnitureInfo(betterproto.Message):
    guid: int = betterproto.uint32_field(8)
    sub_furniture_list: List["CustomCommonNodeInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomeCustomFurnitureInfoNotify(betterproto.Message):
    delete_custom_furniture_list: List[int] = betterproto.uint32_field(14)
    custom_furniture_info_list: List[
        "HomeCustomFurnitureInfo"
    ] = betterproto.message_field(15)
    used_sub_furniture_count_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class HomeDeleteBlueprintReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeDeleteBlueprintRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    slot_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HomeEditCustomFurnitureReq(betterproto.Message):
    custom_furniture_info: "HomeCustomFurnitureInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomeEditCustomFurnitureRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    custom_furniture_info: "HomeCustomFurnitureInfo" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class HomeEnterEditModeFinishReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeEnterEditModeFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class HomeExchangeWoodReq(betterproto.Message):
    material_count_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    wood_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class HomeExchangeWoodRsp(betterproto.Message):
    wood_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(13)
    exchanged_count: int = betterproto.uint32_field(2)
    wood_count: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class HomeFishFarmingInfo(betterproto.Message):
    fishpond_guid: int = betterproto.uint32_field(4)
    fish_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomeFishFarmingInfoNotify(betterproto.Message):
    fish_farming_info_list: List["HomeFishFarmingInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class HomeFurnitureCustomSuiteData(betterproto.Message):
    guid: int = betterproto.uint32_field(10)
    included_furniture_index_list: List[int] = betterproto.int32_field(5)
    spawn_pos: "Vector" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class HomeFurnitureData(betterproto.Message):
    version: int = betterproto.uint32_field(5)
    parent_furniture_index: int = betterproto.int32_field(9)
    spawn_rot: "Vector" = betterproto.message_field(12)
    spawn_pos: "Vector" = betterproto.message_field(2)
    guid: int = betterproto.uint32_field(14)
    furniture_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class HomeFurnitureGroupData(betterproto.Message):
    virtual_furniture_list: List["HomeFurnitureData"] = betterproto.message_field(12)
    group_furniture_index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HomeFurnitureSuiteData(betterproto.Message):
    included_furniture_index_list: List[int] = betterproto.int32_field(7)
    guid: int = betterproto.uint32_field(12)
    suite_id: int = betterproto.uint32_field(15)
    is_allow_summon: bool = betterproto.bool_field(14)
    spawn_pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class HomeGalleryInPlayingNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeGetArrangementInfoReq(betterproto.Message):
    scene_id_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HomeGetArrangementInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    scene_arrangement_info_list: List[
        "HomeSceneArrangementInfo"
    ] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class HomeGetBasicInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeGetBlueprintSlotInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeGetBlueprintSlotInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    delete_slot_id_list: List[int] = betterproto.uint32_field(6)
    slot_info_list: List["HomeBlueprintSlotInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class HomeGetFishFarmingInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeGetFishFarmingInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    fish_farming_info_list: List["HomeFishFarmingInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeGetGroupRecordReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeGetGroupRecordRsp(betterproto.Message):
    record_type: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(7)
    group_record: "HomeGroupRecord" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class HomeGetOnlineStatusReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeGetOnlineStatusRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class HomeGroupPlayerInfo(betterproto.Message):
    nickname: str = betterproto.string_field(15)
    uid: int = betterproto.uint32_field(3)
    player_level: int = betterproto.uint32_field(14)
    online_id: str = betterproto.string_field(11)
    profile_picture: "ProfilePicture" = betterproto.message_field(2)
    psn_id: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class HomeGroupRecord(betterproto.Message):
    group_id: int = betterproto.uint32_field(8)
    racing_gallery_info: "RacingGalleryInfo" = betterproto.message_field(
        1457, group="detail"
    )
    balloon_gallery_info: "BalloonGalleryInfo" = betterproto.message_field(
        1480, group="detail"
    )
    stake_play_info: "StakePlayInfo" = betterproto.message_field(1758, group="detail")
    seek_furniture_gallery_info: "SeekFurnitureGalleryInfo" = betterproto.message_field(
        1801, group="detail"
    )


@dataclass(eq=False, repr=False)
class HomeKickPlayerReq(betterproto.Message):
    is_kick_all: bool = betterproto.bool_field(7)
    target_uid: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class HomeKickPlayerRsp(betterproto.Message):
    is_kick_all: bool = betterproto.bool_field(8)
    target_uid: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class HomeLimitedShop(betterproto.Message):
    goods_list: List["HomeLimitedShopGoods"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class HomeLimitedShopBuyGoodsReq(betterproto.Message):
    goods: "HomeLimitedShopGoods" = betterproto.message_field(1)
    buy_count: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HomeLimitedShopBuyGoodsRsp(betterproto.Message):
    goods_list: List["HomeLimitedShopGoods"] = betterproto.message_field(5)
    goods: "HomeLimitedShopGoods" = betterproto.message_field(8)
    buy_count: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class HomeLimitedShopGoods(betterproto.Message):
    disable_type: int = betterproto.uint32_field(5)
    goods_item: "ItemParam" = betterproto.message_field(12)
    goods_id: int = betterproto.uint32_field(6)
    cost_item_list: List["ItemParam"] = betterproto.message_field(15)
    bought_num: int = betterproto.uint32_field(7)
    buy_limit: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeLimitedShopGoodsListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeLimitedShopGoodsListRsp(betterproto.Message):
    shop: "HomeLimitedShop" = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class HomeLimitedShopInfo(betterproto.Message):
    next_guest_open_time: int = betterproto.fixed32_field(14)
    uid: int = betterproto.uint32_field(4)
    djinn_rot: "Vector" = betterproto.message_field(12)
    next_close_time: int = betterproto.fixed32_field(2)
    djinn_pos: "Vector" = betterproto.message_field(6)
    next_open_time: int = betterproto.fixed32_field(15)


@dataclass(eq=False, repr=False)
class HomeLimitedShopInfoChangeNotify(betterproto.Message):
    goods_list: List["HomeLimitedShopGoods"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeLimitedShopInfoNotify(betterproto.Message):
    shop_info: "HomeLimitedShopInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class HomeLimitedShopInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeLimitedShopInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    shop_info: "HomeLimitedShopInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class HomeMarkPointFurnitureData(betterproto.Message):
    guid: int = betterproto.uint32_field(1)
    furniture_id: int = betterproto.uint32_field(2)
    furniture_type: int = betterproto.uint32_field(3)
    pos: "Vector" = betterproto.message_field(4)
    npc_data: "NpcData" = betterproto.message_field(6, group="extra")
    suite_data: "SuiteData" = betterproto.message_field(7, group="extra")


@dataclass(eq=False, repr=False)
class HomeMarkPointNotify(betterproto.Message):
    mark_point_data_list: List["HomeMarkPointSceneData"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class HomeMarkPointNpcData(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    costume_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeMarkPointSceneData(betterproto.Message):
    furniture_list: List["HomeMarkPointFurnitureData"] = betterproto.message_field(14)
    module_id: int = betterproto.uint32_field(5)
    scene_id: int = betterproto.uint32_field(15)
    safe_point_pos: "Vector" = betterproto.message_field(10)
    teapot_spirit_pos: "Vector" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class HomeMarkPointSuiteData(betterproto.Message):
    suite_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HomeModuleComfortInfo(betterproto.Message):
    world_scene_block_comfort_value_list: List[int] = betterproto.uint32_field(3)
    module_id: int = betterproto.uint32_field(13)
    room_scene_comfort_value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeModuleSeenReq(betterproto.Message):
    seen_module_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HomeModuleSeenRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    seen_module_id_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeModuleUnlockNotify(betterproto.Message):
    module_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class HomeNewUnlockedBgmIdListNotify(betterproto.Message):
    new_unlocked_bgm_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomeNpcData(betterproto.Message):
    spawn_pos: "Vector" = betterproto.message_field(4)
    costume_id: int = betterproto.uint32_field(13)
    avatar_id: int = betterproto.uint32_field(5)
    spawn_rot: "Vector" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class HomePictureFrameInfo(betterproto.Message):
    picture_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class HomePictureFrameInfoNotify(betterproto.Message):
    picture_frame_info_list: List["HomePictureFrameInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class HomePlantFieldData(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    field_guid: int = betterproto.uint32_field(3)
    sub_field_list: List["HomePlantSubFieldData"] = betterproto.message_field(2)
    furniture_id: int = betterproto.uint32_field(4)
    spawn_pos: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class HomePlantFieldNotify(betterproto.Message):
    field: "HomePlantFieldData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class HomePlantInfoNotify(betterproto.Message):
    field_list: List["HomePlantFieldData"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class HomePlantInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomePlantInfoRsp(betterproto.Message):
    field_list: List["HomePlantFieldData"] = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class HomePlantSeedReq(betterproto.Message):
    index: int = betterproto.uint32_field(5)
    field_guid: int = betterproto.uint32_field(13)
    seed_id_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HomePlantSeedRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class HomePlantSubFieldData(betterproto.Message):
    end_time: int = betterproto.uint32_field(15)
    entity_id_list: List[int] = betterproto.uint32_field(4)
    home_gather_id: int = betterproto.uint32_field(10)
    field_status: "HomePlantFieldStatus" = betterproto.enum_field(8)
    seed_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomePlantWeedReq(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    field_guid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HomePlantWeedRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class HomePreChangeEditModeNotify(betterproto.Message):
    is_enter_edit_mode: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class HomePreviewBlueprintReq(betterproto.Message):
    share_code: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class HomePreviewBlueprintRsp(betterproto.Message):
    share_code: str = betterproto.string_field(3)
    retcode: int = betterproto.int32_field(4)
    scene_arrangement_info: "HomeSceneArrangementInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class HomePriorCheckNotify(betterproto.Message):
    end_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HomeRacingGalleryRecord(betterproto.Message):
    use_time: int = betterproto.uint32_field(3)
    timestamp: int = betterproto.uint32_field(8)
    player_info: "HomeGroupPlayerInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class HomeRacingGallerySettleNotify(betterproto.Message):
    settle_info: "RacingGallerySettleInfo" = betterproto.message_field(10)
    gallery_id: int = betterproto.uint32_field(4)
    rank: int = betterproto.uint32_field(1)
    is_new_record: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class HomeRacingRecord(betterproto.Message):
    record_list: List["HomeRacingGalleryRecord"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeResource(betterproto.Message):
    store_limit: int = betterproto.uint32_field(15)
    store_value: int = betterproto.uint32_field(10)
    next_refresh_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HomeResourceNotify(betterproto.Message):
    fetter_exp: "HomeResource" = betterproto.message_field(9)
    home_coin: "HomeResource" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeResourceTakeFetterExpReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeResourceTakeFetterExpRsp(betterproto.Message):
    fetter_exp: "HomeResource" = betterproto.message_field(12)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class HomeResourceTakeHomeCoinReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeResourceTakeHomeCoinRsp(betterproto.Message):
    home_coin: "HomeResource" = betterproto.message_field(15)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class HomeSaveArrangementNoChangeReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class HomeSaveArrangementNoChangeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    scene_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class HomeSceneArrangementInfo(betterproto.Message):
    djinn_pos: "Vector" = betterproto.message_field(15)
    scene_id: int = betterproto.uint32_field(1)
    is_set_born_pos: bool = betterproto.bool_field(5)
    born_pos: "Vector" = betterproto.message_field(10)
    comfort_value: int = betterproto.uint32_field(9)
    unk3300_gchnamhbphg: List["HomeFurnitureData"] = betterproto.message_field(11)
    main_house: "HomeFurnitureData" = betterproto.message_field(6)
    born_rot: "Vector" = betterproto.message_field(8)
    tmp_version: int = betterproto.uint32_field(4)
    unk3300_hpchpodnbph: List["HomeFurnitureData"] = betterproto.message_field(7)
    block_arrangement_info_list: List[
        "HomeBlockArrangementInfo"
    ] = betterproto.message_field(3)
    bgm_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeSceneInitFinishReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeSceneInitFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class HomeSceneJumpReq(betterproto.Message):
    is_enter_room_scene: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class HomeSceneJumpRsp(betterproto.Message):
    is_enter_room_scene: bool = betterproto.bool_field(1)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class HomeScenePointFishFarmingInfo(betterproto.Message):
    fish_id_list: List[int] = betterproto.uint32_field(11)
    scene_id: int = betterproto.uint32_field(6)
    local_entity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class HomeScenePointFishFarmingInfoNotify(betterproto.Message):
    fish_farming_info_list: List[
        "HomeScenePointFishFarmingInfo"
    ] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class HomeSearchBlueprintReq(betterproto.Message):
    share_code: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class HomeSearchBlueprintRsp(betterproto.Message):
    search_info: "HomeBlueprintSearchInfo" = betterproto.message_field(9)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class HomeSeekFurnitureAllRecord(betterproto.Message):
    record_list: List["HomeSeekFurnitureOneRecord"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomeSeekFurnitureGalleryScoreNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(2)
    reason: "GalleryStopReason" = betterproto.enum_field(9)
    record: "HomeSeekFurnitureOneRecord" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class HomeSeekFurnitureInfo(betterproto.Message):
    unk3300_lgeapljcjfh: int = betterproto.uint32_field(10)
    unk3300_daeebieaomn: int = betterproto.uint32_field(11)
    unk3300_enkogpiehfd: int = betterproto.uint32_field(8)
    player_score_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class HomeSeekFurnitureOneRecord(betterproto.Message):
    engaged_player_score_list: List[
        "HomeSeekFurniturePlayerScore"
    ] = betterproto.message_field(6)
    timestamp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeSeekFurniturePlayerScore(betterproto.Message):
    player_info: "HomeGroupPlayerInfo" = betterproto.message_field(4)
    score: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class HomeSetBlueprintFriendOptionReq(betterproto.Message):
    is_allow_friend_copy: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class HomeSetBlueprintFriendOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    is_allow_friend_copy: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class HomeSetBlueprintSlotOptionReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(11)
    is_allow_copy: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class HomeSetBlueprintSlotOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    slot_id: int = betterproto.uint32_field(2)
    is_allow_copy: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class HomeStakePlayRecord(betterproto.Message):
    timestamp: int = betterproto.uint32_field(10)
    engaged_player_info_list: List["HomeGroupPlayerInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomeStakeRecord(betterproto.Message):
    record_list: List["HomeStakePlayRecord"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class HomeTransferReq(betterproto.Message):
    guid: int = betterproto.uint32_field(2)
    is_transfer_to_safe_point: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class HomeTransferRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class HomeUpdateArrangementInfoReq(betterproto.Message):
    scene_arrangement_info: "HomeSceneArrangementInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeUpdateArrangementInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class HomeUpdateFishFarmingInfoReq(betterproto.Message):
    fish_farming_info: "HomeFishFarmingInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class HomeUpdateFishFarmingInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class HomeUpdatePictureFrameInfoReq(betterproto.Message):
    picture_frame_info: "HomePictureFrameInfo" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class HomeUpdatePictureFrameInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    picture_frame_info: "HomePictureFrameInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class HomeUpdateScenePointFishFarmingInfoReq(betterproto.Message):
    fish_farming_info: "HomeScenePointFishFarmingInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class HomeUpdateScenePointFishFarmingInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class Hoppjkejenm(betterproto.Message):
    difficulty: int = betterproto.uint32_field(7)
    stage_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HostPlayerNotify(betterproto.Message):
    host_uid: int = betterproto.uint32_field(4)
    host_peer_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class Hpakaieakfi(betterproto.Message):
    hmnbpjgckgn: str = betterproto.string_field(1)
    value: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class Hppmamedoad(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    badeipailca: "Djldjfdpbei" = betterproto.enum_field(3)
    sync_create_connect: "SyncCreateConnect" = betterproto.message_field(
        14, group="HHIPOLHJFFK"
    )
    sync_ping: "SyncPing" = betterproto.message_field(4, group="HHIPOLHJFFK")
    sync_finish_game: "SyncFinishGame" = betterproto.message_field(
        7, group="HHIPOLHJFFK"
    )
    sync_snap_shot: "SyncSnapShot" = betterproto.message_field(10, group="HHIPOLHJFFK")
    sync_action: "SyncAction" = betterproto.message_field(12, group="HHIPOLHJFFK")


@dataclass(eq=False, repr=False)
class HuntingFailNotify(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class HuntingGiveUpReq(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class HuntingGiveUpRsp(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(4)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class HuntingOfferData(betterproto.Message):
    state: "HuntingOfferState" = betterproto.enum_field(11)
    city_id: int = betterproto.uint32_field(8)
    hunting_pair: "HuntingPair" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class HuntingOngoingNotify(betterproto.Message):
    fail_time: int = betterproto.uint32_field(9)
    finish_clue_count: int = betterproto.uint32_field(8)
    is_started: bool = betterproto.bool_field(5)
    hunting_pair: "HuntingPair" = betterproto.message_field(10)
    next_position: "Vector" = betterproto.message_field(14)
    is_final: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class HuntingPair(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(5)
    monster_config_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HuntingRevealClueNotify(betterproto.Message):
    finished_group_id: int = betterproto.uint32_field(13)
    finish_clue_count: int = betterproto.uint32_field(11)
    clue_position: "Vector" = betterproto.message_field(5)
    hunting_pair: "HuntingPair" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class HuntingRevealFinalNotify(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(11)
    finished_group_id: int = betterproto.uint32_field(2)
    final_position: "Vector" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HuntingStartNotify(betterproto.Message):
    fail_time: int = betterproto.uint32_field(4)
    hunting_pair: "HuntingPair" = betterproto.message_field(12)
    is_final: bool = betterproto.bool_field(7)
    clue_position: "Vector" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class HuntingSuccessNotify(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class Iaenjeillbg(betterproto.Message):
    controller_id: int = betterproto.uint32_field(7)
    card_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class Iapagbpebkp(betterproto.Message):
    boanjkipdma: List["IapagbpebkpJekpaeklgif"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Iapagbpebkpjekpaeklgif(betterproto.Message):
    gcnpfdenhco: List[int] = betterproto.int32_field(1)
    hjangcedhmi: str = betterproto.string_field(2)
    jmlbblffjjl: int = betterproto.int32_field(3)
    ojbimgkainp: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class Ibbgejcnpei(betterproto.Message):
    flopankfnol: str = betterproto.string_field(1)
    game_biz: str = betterproto.string_field(2)
    mnlpmamhoem: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class Ibcnipcmnkm(betterproto.Message):
    value: float = betterproto.double_field(1)


@dataclass(eq=False, repr=False)
class Iccdllmnfan(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class Idgmfmndibc(betterproto.Message):
    is_arrive_finish: bool = betterproto.bool_field(1)
    coin_limit: int = betterproto.uint32_field(2)
    time_limit: int = betterproto.uint32_field(3)
    is_forbid_skill: bool = betterproto.bool_field(4)
    life_num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class Idoelhbancp(betterproto.Message):
    create_time: List["IdoelhbancpBnldebafake"] = betterproto.message_field(2)
    jepoaccjobm: str = betterproto.string_field(3)
    hglbhfehpll: int = betterproto.uint64_field(4)
    hakkhkobmga: int = betterproto.int64_field(5)
    obdckmjfcmd: float = betterproto.double_field(6)
    bkimcghfndi: bytes = betterproto.bytes_field(7)
    mmncblejhnn: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class Idoelhbancpbnldebafake(betterproto.Message):
    gnlikgbnmce: str = betterproto.string_field(1)
    kikkokolhng: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class Iehopoalpkj(betterproto.Message):
    apply_entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class Ielkgamfoln(betterproto.Message):
    uid: int = betterproto.uint32_field(7)
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(5)
    profile_picture: "ProfilePicture" = betterproto.message_field(11)
    nickname: str = betterproto.string_field(14)
    online_id: str = betterproto.string_field(2)
    head_image: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class InBattleChessInfo(betterproto.Message):
    ddhmhajjmfk: int = betterproto.uint32_field(12)
    gkhmchgepli: List[int] = betterproto.uint32_field(11)
    abhkjjjcfcd: Dict[int, "ChessPlayerInfo"] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    round: int = betterproto.uint32_field(2)
    dcfcppdjgod: "ChessMysteryInfo" = betterproto.message_field(10)
    left_monsters: int = betterproto.uint32_field(3)
    escaped_monsters: int = betterproto.uint32_field(9)
    selected_card_info_list: List["ChessCardInfo"] = betterproto.message_field(1)
    mechanicus_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class InBattleChessSettleInfo(betterproto.Message):
    unk3300_nkhdfhapncn: int = betterproto.uint32_field(9)
    scene_time_ms: int = betterproto.uint64_field(11)
    unk3300_lpanfebfjoj: int = betterproto.uint32_field(15)
    is_success: bool = betterproto.bool_field(2)
    score_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(1)
    unk3300_ipgiljcbabk: int = betterproto.uint32_field(3)
    unk3300_emnlldjhmei: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class InBattleFleurFairInfo(betterproto.Message):
    emdkpmhihmp: int = betterproto.uint32_field(11)
    gallery_stage_index: int = betterproto.uint32_field(4)
    defdlkbmipk: List[int] = betterproto.uint32_field(10)
    enokedgdhfb: int = betterproto.uint32_field(9)
    fieibhkablj: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class InBattleIrodoriChessInfo(betterproto.Message):
    fpdiemhhpko: List[int] = betterproto.uint32_field(3)
    left_monsters: int = betterproto.uint32_field(11)
    dcfcppdjgod: "IrodoriChessMysteryInfo" = betterproto.message_field(10)
    settle_score: int = betterproto.uint32_field(8)
    building_points: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class InBattleIrodoriChessSettleInfo(betterproto.Message):
    is_activity_end: bool = betterproto.bool_field(10)
    kill_monster_num: int = betterproto.uint32_field(2)
    is_new_record: bool = betterproto.bool_field(12)
    scene_time_ms: int = betterproto.uint64_field(14)
    settle_score: int = betterproto.uint32_field(15)
    is_perfect: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class InBattleMechanicusBuildingInfo(betterproto.Message):
    building_id: int = betterproto.uint32_field(6)
    level: int = betterproto.uint32_field(3)
    knajgcafgjo: int = betterproto.uint32_field(14)
    cost_points: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class InBattleMechanicusBuildingPointsNotify(betterproto.Message):
    player_building_points_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class InBattleMechanicusCardInfo(betterproto.Message):
    unk3300_fnahkhodbkn: int = betterproto.uint32_field(3)
    cost_points: int = betterproto.uint32_field(2)
    unk3300_ndaookkgjph: int = betterproto.uint32_field(9)
    card_id: int = betterproto.uint32_field(15)
    unk3300_kcieinmepdh: int = betterproto.uint32_field(8)
    challenge_state: "InBattleMechanicusCardChallengeState" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class InBattleMechanicusCardResultNotify(betterproto.Message):
    play_index: int = betterproto.uint32_field(10)
    wait_begin_time_us: int = betterproto.uint64_field(4)
    card_list: List["InBattleMechanicusCardInfo"] = betterproto.message_field(5)
    player_confirmed_card_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    group_id: int = betterproto.uint32_field(15)
    wait_seconds: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class InBattleMechanicusConfirmCardNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(2)
    card_id: int = betterproto.uint32_field(1)
    play_index: int = betterproto.uint32_field(7)
    group_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class InBattleMechanicusConfirmCardReq(betterproto.Message):
    play_index: int = betterproto.uint32_field(4)
    group_id: int = betterproto.uint32_field(15)
    card_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class InBattleMechanicusConfirmCardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    group_id: int = betterproto.uint32_field(12)
    play_index: int = betterproto.uint32_field(11)
    card_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class InBattleMechanicusExcapeMonsterNotify(betterproto.Message):
    coin: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class InBattleMechanicusLeftMonsterNotify(betterproto.Message):
    left_monster_num: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class InBattleMechanicusPickCardNotify(betterproto.Message):
    play_index: int = betterproto.uint32_field(11)
    group_id: int = betterproto.uint32_field(5)
    player_uid: int = betterproto.uint32_field(9)
    card_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class InBattleMechanicusPickCardReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(9)
    card_id: int = betterproto.uint32_field(11)
    play_index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class InBattleMechanicusPickCardRsp(betterproto.Message):
    play_index: int = betterproto.uint32_field(15)
    group_id: int = betterproto.uint32_field(13)
    card_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class InBattleMechanicusPlayerInfo(betterproto.Message):
    building_list: List["InBattleMechanicusBuildingInfo"] = betterproto.message_field(
        12
    )
    uid: int = betterproto.uint32_field(6)
    gdinnaencko: int = betterproto.uint32_field(15)
    kjckjdpeflc: bool = betterproto.bool_field(9)
    building_points: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class InBattleMechanicusSettleInfo(betterproto.Message):
    scene_time_ms: int = betterproto.uint64_field(15)
    unk3300_haeopaobbfe: int = betterproto.uint32_field(7)
    is_success: bool = betterproto.bool_field(6)
    unk3300_nambbhmjjln: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(12)
    unk3300_ekaiaplnipm: int = betterproto.uint32_field(11)
    play_index: int = betterproto.uint32_field(13)
    watcher_list: List["MultistageSettleWatcherInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class InBattleMechanicusSettleNotify(betterproto.Message):
    watcher_list: List["MultistageSettleWatcherInfo"] = betterproto.message_field(7)
    is_success: bool = betterproto.bool_field(8)
    unk3300_nambbhmjjln: int = betterproto.uint32_field(15)
    unk3300_haeopaobbfe: int = betterproto.uint32_field(1)
    play_index: int = betterproto.uint32_field(12)
    unk3300_ekaiaplnipm: int = betterproto.uint32_field(13)
    scene_time_ms: int = betterproto.uint64_field(10)
    group_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class InferencePageInfo(betterproto.Message):
    page_id: int = betterproto.uint32_field(6)
    unlock_word_list: List["InferenceWordInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class InferenceWordInfo(betterproto.Message):
    is_associate: bool = betterproto.bool_field(3)
    word_id: int = betterproto.uint32_field(5)
    unlock_by_word_id: int = betterproto.uint32_field(13)
    is_submit: bool = betterproto.bool_field(4)
    is_interpret: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class InstableSprayAvatarInfo(betterproto.Message):
    is_trial: bool = betterproto.bool_field(2)
    avatar_id: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class InstableSprayDetailInfo(betterproto.Message):
    stage_info_list: List["InstableSprayStageInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class InstableSprayEnterDungeonReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(4)
    avatar_info_list: List["InstableSprayAvatarInfo"] = betterproto.message_field(8)
    difficulty: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class InstableSprayEnterDungeonRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class InstableSprayGalleryInfoNotify(betterproto.Message):
    score: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class InstableSprayInfo(betterproto.Message):
    score: int = betterproto.uint32_field(13)
    buff_info_list: List[
        "SceneGalleryInstableSprayBuffInfo"
    ] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class InstableSprayLevelFinishNotify(betterproto.Message):
    unk3300_dhkhbklbipa: bool = betterproto.bool_field(14)
    round: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(11)
    level_id: int = betterproto.uint32_field(9)
    unk3300_amebapiplgl: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class InstableSprayRestartDungeonReq(betterproto.Message):
    avatar_info_list: List["InstableSprayAvatarInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class InstableSprayRestartDungeonRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class InstableSpraySettleInfo(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(5)
    stage_id: int = betterproto.uint32_field(4)
    difficulty: int = betterproto.uint32_field(15)
    score_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class InstableSprayStageInfo(betterproto.Message):
    max_score: int = betterproto.uint32_field(2)
    team_info_list: List["InstableSprayTeamInfo"] = betterproto.message_field(3)
    is_finished: bool = betterproto.bool_field(13)
    stage_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class InstableSpraySwitchTeamReq(betterproto.Message):
    avatar_info_list: List["InstableSprayAvatarInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class InstableSpraySwitchTeamRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class InstableSprayTeamInfo(betterproto.Message):
    avatar_info_list: List["InstableSprayAvatarInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class InteractDailyDungeonInfoNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class InterpretInferenceWordReq(betterproto.Message):
    word_id: int = betterproto.uint32_field(12)
    page_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class InterpretInferenceWordRsp(betterproto.Message):
    page_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(13)
    word_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class InterruptGalleryReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class InterruptGalleryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    gallery_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class Investigation(betterproto.Message):
    progress: int = betterproto.uint32_field(11)
    id: int = betterproto.uint32_field(5)
    state: "State" = betterproto.enum_field(4)
    total_progress: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class InvestigationMonster(betterproto.Message):
    next_refresh_time: int = betterproto.uint32_field(1)
    boss_chest_num: int = betterproto.uint32_field(10)
    weekly_boss_resin_discount_info: "WeeklyBossResinDiscountInfo" = (
        betterproto.message_field(8)
    )
    lock_state: "LockState" = betterproto.enum_field(2)
    refresh_interval: int = betterproto.uint32_field(6)
    group_id: int = betterproto.uint32_field(80)
    scene_id: int = betterproto.uint32_field(13)
    city_id: int = betterproto.uint32_field(7)
    max_boss_chest_num: int = betterproto.uint32_field(11)
    pos: "Vector" = betterproto.message_field(4)
    is_area_locked: bool = betterproto.bool_field(5)
    level: int = betterproto.uint32_field(3)
    id: int = betterproto.uint32_field(15)
    monster_id: int = betterproto.uint32_field(1493)
    next_boss_chest_refresh_time: int = betterproto.uint32_field(12)
    resin: int = betterproto.uint32_field(9)
    is_alive: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class InvestigationMonsterUpdateNotify(betterproto.Message):
    investigation_monster: "InvestigationMonster" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class InvestigationQuestDailyNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class InvestigationReadQuestDailyNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class InvestigationTarget(betterproto.Message):
    investigation_id: int = betterproto.uint32_field(13)
    state: "State" = betterproto.enum_field(7)
    total_progress: int = betterproto.uint32_field(1)
    quest_id: int = betterproto.uint32_field(3)
    progress: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class Ipdnednffeo(betterproto.Message):
    jmiipakgola: float = betterproto.float_field(7)


@dataclass(eq=False, repr=False)
class Iplhknlpphd(betterproto.Message):
    koofigbidnl: int = betterproto.uint32_field(2)
    uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class IrodoriChessData(betterproto.Message):
    level_data_list: List["IrodoriChessLevelData"] = betterproto.message_field(9)
    is_open: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class IrodoriChessEntranceDetailInfo(betterproto.Message):
    info_list: List["IrodoriChessEntranceInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class IrodoriChessEntranceInfo(betterproto.Message):
    dfpedbghhma: int = betterproto.uint32_field(10)
    lhjhgbpjpkl: List["IrodoriChessMonsterInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class IrodoriChessEquipCardReq(betterproto.Message):
    card_id: int = betterproto.uint32_field(1)
    is_hard_map: bool = betterproto.bool_field(7)
    level_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class IrodoriChessEquipCardRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(15)
    is_hard_map: bool = betterproto.bool_field(8)
    retcode: int = betterproto.int32_field(9)
    card_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class IrodoriChessInfo(betterproto.Message):
    fpdiemhhpko: List[int] = betterproto.uint32_field(3)
    left_monsters: int = betterproto.uint32_field(11)
    dcfcppdjgod: "IrodoriChessMysteryInfo" = betterproto.message_field(10)
    settle_score: int = betterproto.uint32_field(8)
    building_points: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class IrodoriChessLeftMonsterNotify(betterproto.Message):
    left_monsters: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class IrodoriChessLevelData(betterproto.Message):
    level_id: int = betterproto.uint32_field(10)
    open_time: int = betterproto.uint32_field(7)
    unk3300_bginemhbnad: "IrodoriChessMapData" = betterproto.message_field(14)
    unk3300_gcigncgobml: "IrodoriChessMapData" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class IrodoriChessMapData(betterproto.Message):
    map_id: int = betterproto.uint32_field(13)
    best_score: int = betterproto.uint32_field(3)
    becodaoleil: List[int] = betterproto.uint32_field(4)
    ajcepcgbnfe: "IrodoriChessEntranceDetailInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class IrodoriChessMonsterInfo(betterproto.Message):
    monster_id: int = betterproto.uint32_field(12)
    level: int = betterproto.uint32_field(13)
    hhmklcpngkl: int = betterproto.uint32_field(14)
    affix_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class IrodoriChessMysteryInfo(betterproto.Message):
    mdilcblhnao: List[int] = betterproto.uint32_field(5)
    ajcepcgbnfe: "IrodoriChessEntranceDetailInfo" = betterproto.message_field(8)
    fffmoldaadc: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class IrodoriChessPlayerInfo(betterproto.Message):
    settle_score: int = betterproto.uint32_field(4)
    building_points: int = betterproto.uint32_field(8)
    uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class IrodoriChessPlayerInfoNotify(betterproto.Message):
    player_info: "IrodoriChessPlayerInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class IrodoriChessSettleInfo(betterproto.Message):
    is_activity_end: bool = betterproto.bool_field(10)
    kill_monster_num: int = betterproto.uint32_field(2)
    is_new_record: bool = betterproto.bool_field(12)
    scene_time_ms: int = betterproto.uint64_field(14)
    settle_score: int = betterproto.uint32_field(15)
    is_perfect: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class IrodoriChessUnequipCardReq(betterproto.Message):
    card_id: int = betterproto.uint32_field(14)
    is_hard_map: bool = betterproto.bool_field(5)
    level_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class IrodoriChessUnequipCardRsp(betterproto.Message):
    is_hard_map: bool = betterproto.bool_field(4)
    level_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(12)
    card_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class IrodoriEditFlowerCombinationReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(8)
    combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class IrodoriEditFlowerCombinationRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    unk3300_iaplhbkjlbf: bool = betterproto.bool_field(10)
    unk3300_dbbgpomdkpk: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class IrodoriFillPoetryReq(betterproto.Message):
    line_id: int = betterproto.uint32_field(13)
    theme_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class IrodoriFillPoetryRsp(betterproto.Message):
    theme_data: "IrodoriPoetryThemeData" = betterproto.message_field(14)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class IrodoriFlowerData(betterproto.Message):
    finished_theme_list: List[int] = betterproto.uint32_field(5)
    used_flower_list: List["ItemParam"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class IrodoriInfo(betterproto.Message):
    flower_data: "IrodoriFlowerData" = betterproto.message_field(6)
    poetry_data: "IrodoriPoetryData" = betterproto.message_field(14)
    chess_data: "IrodoriChessData" = betterproto.message_field(10)
    master_level_list: List["IrodoriMasterLevelInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class IrodoriMasterGalleryCgEndNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(5)
    level_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class IrodoriMasterGallerySettleInfo(betterproto.Message):
    is_finish: bool = betterproto.bool_field(14)
    reason: "GalleryStopReason" = betterproto.enum_field(6)
    difficult: int = betterproto.uint32_field(10)
    finish_time: int = betterproto.uint32_field(15)
    level_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class IrodoriMasterGallerySettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(8)
    settle_info: "IrodoriMasterGallerySettleInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class IrodoriMasterInfo(betterproto.Message):
    is_cg_viewed: bool = betterproto.bool_field(6)
    difficulty: int = betterproto.uint32_field(12)
    level_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class IrodoriMasterLevelDetailInfo(betterproto.Message):
    is_finish: bool = betterproto.bool_field(6)
    is_have_try: bool = betterproto.bool_field(5)
    min_finish_time: int = betterproto.uint32_field(14)
    difficulty: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class IrodoriMasterLevelInfo(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    detail_info: List["IrodoriMasterLevelDetailInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class IrodoriMasterStartGalleryReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(3)
    difficulty: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class IrodoriMasterStartGalleryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class IrodoriPoetryData(betterproto.Message):
    theme_data_list: List["IrodoriPoetryThemeData"] = betterproto.message_field(10)
    cur_theme_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class IrodoriPoetryThemeData(betterproto.Message):
    unk3300_cnnmehoggll: List[int] = betterproto.uint32_field(6)
    unk3300_hodjkkdbjdj: List[int] = betterproto.uint32_field(4)
    progress: int = betterproto.uint32_field(14)
    max_progress: int = betterproto.uint32_field(13)
    unk3300_njhmnliagik: int = betterproto.uint32_field(7)
    theme_id: int = betterproto.uint32_field(1)
    unk3300_hfmkpnobpdk: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class IrodoriScanEntityReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class IrodoriScanEntityRsp(betterproto.Message):
    is_get_inspiration: bool = betterproto.bool_field(4)
    theme_data: "IrodoriPoetryThemeData" = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class IslandPartyDownHillInfo(betterproto.Message):
    max_kill_monster_count: int = betterproto.uint32_field(13)
    start_source: "GalleryStartSource" = betterproto.enum_field(4)
    coin: int = betterproto.uint32_field(1)
    total_kill_monster_count: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class IslandPartyGallerySettleInfo(betterproto.Message):
    player_info: "OnlinePlayerInfo" = betterproto.message_field(3)
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class IslandPartyInfo(betterproto.Message):
    stage_data_list: List["IslandPartyStageData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class IslandPartyRaftInfo(betterproto.Message):
    coin: int = betterproto.uint32_field(10)
    unk3300_hhekipecdak: int = betterproto.uint32_field(5)
    point_id: int = betterproto.uint32_field(13)
    unk3300_hnecegnmknk: int = betterproto.uint32_field(4)
    unk3300_fbacmofgpgj: int = betterproto.uint32_field(7)
    start_source: "GalleryStartSource" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class IslandPartyRaftInfoNotify(betterproto.Message):
    unk3300_hnecegnmknk: int = betterproto.uint32_field(9)
    unk3300_fbacmofgpgj: int = betterproto.uint32_field(12)
    point_id: int = betterproto.uint32_field(6)
    coin: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class IslandPartySailInfo(betterproto.Message):
    start_source: "GalleryStartSource" = betterproto.enum_field(1)
    unk3300_mjoiijibahf: int = betterproto.uint32_field(5)
    unk3300_mjhmcapgbik: int = betterproto.uint32_field(11)
    stage: "IslandPartySailStage" = betterproto.enum_field(14)
    unk3300_hcjgdhemblm: int = betterproto.uint32_field(7)
    coin: int = betterproto.uint32_field(13)
    unk3300_pfcjodgndci: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class IslandPartySailInfoNotify(betterproto.Message):
    progress: int = betterproto.uint32_field(5)
    coin: int = betterproto.uint32_field(1)
    kill_monster_count: int = betterproto.uint32_field(9)
    stage: "IslandPartySailStage" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class IslandPartySettleNotify(betterproto.Message):
    settle_info_list: List["IslandPartyGallerySettleInfo"] = betterproto.message_field(
        9
    )
    score_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(8)
    is_new_record: bool = betterproto.bool_field(14)
    time_remain: int = betterproto.uint32_field(2)
    reason: "GalleryStopReason" = betterproto.enum_field(13)


@dataclass(eq=False, repr=False)
class IslandPartyStageData(betterproto.Message):
    best_score: int = betterproto.uint32_field(5)
    stage_id: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class Item(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    material: "Material" = betterproto.message_field(5, group="detail")
    equip: "Equip" = betterproto.message_field(6, group="detail")
    furniture: "Furniture" = betterproto.message_field(7, group="detail")


@dataclass(eq=False, repr=False)
class ItemAddHintNotify(betterproto.Message):
    quest_id: int = betterproto.uint32_field(7)
    overflow_transformed_item_list: List["ItemHint"] = betterproto.message_field(1)
    unk3300_nijlgehnbnc: bool = betterproto.bool_field(14)
    unk3300_flikebjincl: bool = betterproto.bool_field(12)
    reason: int = betterproto.uint32_field(3)
    position: "Vector" = betterproto.message_field(9)
    item_list: List["ItemHint"] = betterproto.message_field(8)
    unk3300_kiomjnhfmde: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class ItemCdGroupTimeNotify(betterproto.Message):
    item_cd_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT64
    )


@dataclass(eq=False, repr=False)
class ItemGivingReq(betterproto.Message):
    item_guid_count_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT64, betterproto.TYPE_UINT32
    )
    giving_id: int = betterproto.uint32_field(7)
    item_param_list: List["ItemParam"] = betterproto.message_field(9)
    item_giving_type: "ItemGivingType" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class ItemGivingRsp(betterproto.Message):
    giving_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(13)
    giving_group_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ItemHint(betterproto.Message):
    count: int = betterproto.uint32_field(12)
    guid: int = betterproto.uint64_field(8)
    item_id: int = betterproto.uint32_field(13)
    is_new: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class ItemParam(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ItemRenameAvatarReq(betterproto.Message):
    avatar_name: str = betterproto.string_field(4)
    rename_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ItemRenameAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    rename_id: int = betterproto.uint32_field(8)
    cd_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class Jaklmfjeiaj(betterproto.Message):
    mlaoigidomk: int = betterproto.uint32_field(12)
    hcgicnilgjl: "AbilityString" = betterproto.message_field(13)
    ability_name: "AbilityString" = betterproto.message_field(11)
    dgkkiefjbpp: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class Jbcjgckckbh(betterproto.Message):
    value: float = betterproto.float_field(1)


@dataclass(eq=False, repr=False)
class Jbngfjncifi(betterproto.Message):
    hooghbjeglp: int = betterproto.uint32_field(6)
    mmjpfnlleol: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class Jdfbhnflopl(betterproto.Message):
    value: float = betterproto.float_field(1)


@dataclass(eq=False, repr=False)
class JigsawPictureData(betterproto.Message):
    unk3300_dfghkdbened: int = betterproto.uint32_field(12)
    unk3300_fikplgjibgp: int = betterproto.uint32_field(11)
    is_open: bool = betterproto.bool_field(4)
    is_finished: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class Jjpnbpempif(betterproto.Message):
    card_id_list: List[int] = betterproto.uint32_field(1)
    ccdlgbcdpbp: int = betterproto.uint32_field(2)
    face_type: int = betterproto.uint32_field(3)
    card_face_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    challenge_list: List["Bgaompjljdp"] = betterproto.message_field(5)
    score: int = betterproto.uint32_field(6)
    djgeinachoe: bool = betterproto.bool_field(7)
    akpeeclcbkp: int = betterproto.uint32_field(8)
    fbldiookpcj: bool = betterproto.bool_field(9)
    forbid_finish_challenge_list: List[int] = betterproto.uint32_field(10)
    level: int = betterproto.uint32_field(11)
    client_version: int = betterproto.uint32_field(12)
    platform_type: "PlatformType" = betterproto.enum_field(13)


@dataclass(eq=False, repr=False)
class Jkjcmoimbch(betterproto.Message):
    used_time: int = betterproto.uint32_field(6)
    transaction: str = betterproto.string_field(5)
    reason: "GalleryStopReason" = betterproto.enum_field(13)


@dataclass(eq=False, repr=False)
class Jlkngeibclm(betterproto.Message):
    uid: int = betterproto.uint32_field(9)
    lang: int = betterproto.uint32_field(15)
    dungeon_guid: int = betterproto.uint64_field(11)
    fecoacjadfm: str = betterproto.string_field(7)
    timestamp: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class Jnngccmebpp(betterproto.Message):
    jmiipakgola: float = betterproto.float_field(1)


@dataclass(eq=False, repr=False)
class JoinHomeWorldFailNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    target_uid: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class JoinPlayerFailNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class JoinPlayerSceneReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class JoinPlayerSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class Jokcoecfoak(betterproto.Message):
    data: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class Kankjcacpoj(betterproto.Message):
    omgkbbbfjli: bool = betterproto.bool_field(13)
    gookfcglmjd: float = betterproto.float_field(2)
    oidmkpmeonj: float = betterproto.float_field(6)
    avatar_id: int = betterproto.uint32_field(7)
    bleallaejce: str = betterproto.string_field(5)
    dfadhemafpn: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class Kbjpodlfmab(betterproto.Message):
    mlonppbojpp: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class Kcbbpdjhhbm(betterproto.Message):
    pos: "Vector" = betterproto.message_field(2)
    rot: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class Kcppelgejfe(betterproto.Message):
    ocmpoinejip: bool = betterproto.bool_field(2)
    aicefchaici: bool = betterproto.bool_field(3)
    kcllbppiboo: List["Idoelhbancp"] = betterproto.message_field(999)


@dataclass(eq=False, repr=False)
class KeepAliveNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class Khibimbjobk(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    llbgpfoagln: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class Khlcbpcjnge(betterproto.Message):
    value: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Kiehigckoho(betterproto.Message):
    type: "Igelbdlljbj" = betterproto.enum_field(1)
    y: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class Kjjkcdhjmgd(betterproto.Message):
    level_info_list: List["Glelfdkhcnk"] = betterproto.message_field(10)
    stage_id: int = betterproto.uint32_field(1)
    jpblgaceipn: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class Kkdmgdmmpij(betterproto.Message):
    jpbaeinccjd: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class Klbgipehaid(betterproto.Message):
    velocity: "Vector" = betterproto.message_field(5)
    face_dir: "Vector" = betterproto.message_field(10)
    entity_id: int = betterproto.uint32_field(14)
    pos: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class Kllihambojn(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    jkfdibhoggm: "Fjmgebiamdb" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Kmaccoekhai(betterproto.Message):
    nahlpfcaihd: List["KmaccoekhaiDmnhmplhcpa"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Kmaccoekhaidmnhmplhcpa(betterproto.Message):
    gcnpfdenhco: List[int] = betterproto.int32_field(1)
    naoofgfgjgo: List[int] = betterproto.int32_field(2)
    emojefinbhd: str = betterproto.string_field(3)
    hafkhfcfelc: str = betterproto.string_field(4)
    llcpkmnjblk: List[str] = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class LanternProjectionInfo(betterproto.Message):
    unk3300_faiaijgcbjg: List["ClientInputType"] = betterproto.enum_field(2)
    unk3300_ebhhfkldofb: List["ClientInputType"] = betterproto.enum_field(14)
    level_list: List["LanternProjectionLevelInfo"] = betterproto.message_field(11)
    open_stage_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class LanternProjectionLevelInfo(betterproto.Message):
    is_can_start: bool = betterproto.bool_field(4)
    id: int = betterproto.uint32_field(7)
    min_finish_time: int = betterproto.uint32_field(1)
    is_finished: bool = betterproto.bool_field(14)
    is_show_tips: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class LanternRiteActivityInfo(betterproto.Message):
    fireworks_info: "LanternRiteFireworksInfo" = betterproto.message_field(6)
    projection_info: "LanternProjectionInfo" = betterproto.message_field(11)
    left_monsters: bool = betterproto.bool_field(9)
    unk3300_pdfjncdgkgh: bool = betterproto.bool_field(3)
    stage_info_list: List["SalvageStageInfo"] = betterproto.message_field(1)
    unk3300_dkbjlcimbal: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class LanternRiteDoFireworksReformReq(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(14)
    stage_id: int = betterproto.uint32_field(10)
    factor_id: int = betterproto.uint32_field(15)
    skill_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class LanternRiteDoFireworksReformRsp(betterproto.Message):
    unk3300_bjhgcfanmbi: int = betterproto.uint32_field(3)
    is_lucky: bool = betterproto.bool_field(7)
    factor_info_list: List[
        "LanternRiteFireworksReformFactorInfo"
    ] = betterproto.message_field(6)
    stage_id: int = betterproto.uint32_field(1)
    challenge_id: int = betterproto.uint32_field(9)
    unk3300_omhpiggdcbo: int = betterproto.uint32_field(5)
    unk3300_lkkbpajocml: int = betterproto.uint32_field(14)
    unk3300_lkofbpdkegg: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class LanternRiteEndFireworksReformReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(4)
    challenge_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class LanternRiteEndFireworksReformRsp(betterproto.Message):
    final_score: int = betterproto.uint32_field(8)
    challenge_id: int = betterproto.uint32_field(10)
    stage_id: int = betterproto.uint32_field(9)
    unk3300_almnegciila: bool = betterproto.bool_field(6)
    is_full_score: bool = betterproto.bool_field(4)
    retcode: int = betterproto.int32_field(13)
    unk3300_fpefiadfbni: bool = betterproto.bool_field(7)
    unk3300_cgjnbgakfad: bool = betterproto.bool_field(11)
    is_new_record: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksChallengeInfo(betterproto.Message):
    is_full_score: bool = betterproto.bool_field(11)
    best_score: int = betterproto.uint32_field(14)
    challenge_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksInfo(betterproto.Message):
    stage_info_list: List["LanternRiteFireworksStageInfo"] = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class LanternRiteFireworksReformFactorInfo(betterproto.Message):
    factor_id: int = betterproto.uint32_field(1)
    factor_value: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksReformSkillInfo(betterproto.Message):
    is_unlock: bool = betterproto.bool_field(10)
    unk3300_iepbapjhlei: int = betterproto.uint32_field(6)
    unk3300_edppffflfgg: int = betterproto.uint32_field(11)
    skill_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksStageInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(7)
    exceeded_item_type_list: List[
        "LanternRiteFireworksChallengeInfo"
    ] = betterproto.message_field(9)
    stage_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class LanternRiteStartFireworksReformReq(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(12)
    stage_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class LanternRiteStartFireworksReformRsp(betterproto.Message):
    unk3300_lkofbpdkegg: int = betterproto.uint32_field(2)
    unk3300_omhpiggdcbo: int = betterproto.uint32_field(7)
    factor_info_list: List[
        "LanternRiteFireworksReformFactorInfo"
    ] = betterproto.message_field(1)
    challenge_id: int = betterproto.uint32_field(12)
    unk3300_bjhgcfanmbi: int = betterproto.uint32_field(11)
    unk3300_lkkbpajocml: int = betterproto.uint32_field(14)
    stage_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(10)
    skill_info_list: List[
        "LanternRiteFireworksReformSkillInfo"
    ] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class LanternRiteTakeSkinRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LanternRiteTakeSkinRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class LanV3BoatGameStartSingleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LanV3BoatGameStartSingleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class LanV3BoatGameTransferFinishNotify(betterproto.Message):
    bllclajlijb: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class LanV3BoatInfo(betterproto.Message):
    player_uid_list: List[int] = betterproto.uint32_field(4)
    match_id: int = betterproto.uint32_field(11)
    map_id: int = betterproto.uint32_field(15)
    mdpgfcplekf: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class LanV3BoatInterruptSettleStageReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LanV3BoatInterruptSettleStageRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class LanV3RaceRestartReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class LanV3RaceRestartRsp(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class LanV3RaceSettleNotify(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(3)
    score: int = betterproto.uint32_field(8)
    gallery_id: int = betterproto.uint32_field(9)
    unk3300_ohahhknajkl: int = betterproto.uint32_field(15)
    is_success: bool = betterproto.bool_field(7)
    level_id: int = betterproto.uint32_field(14)
    unk3300_ipgjkkfdpjj: int = betterproto.uint32_field(11)
    remain_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class LanV3ShadowFinishLevelReq(betterproto.Message):
    finish_time: int = betterproto.uint32_field(7)
    level_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class LanV3ShadowFinishLevelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class LastPacketPrintNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LaunchFireworksReq(betterproto.Message):
    scheme_data: "FireworksLaunchSchemeData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class LaunchFireworksRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class Lcdefnkhmfk(betterproto.Message):
    aadgnaadobe: int = betterproto.uint32_field(1)
    fagkmbbhpfl: int = betterproto.uint32_field(2)
    gnggacnnhig: int = betterproto.uint32_field(3)
    lhlgbeidhep: int = betterproto.uint32_field(4)
    aicgkbefebp: int = betterproto.uint32_field(5)
    dklmobpbgfp: int = betterproto.uint64_field(6)
    user_id: int = betterproto.uint32_field(11)
    bigokakimgc: int = betterproto.uint32_field(12)
    iapffgldkck: int = betterproto.uint32_field(13)
    njdeohfgkjj: int = betterproto.uint64_field(21)
    eoogmldbnin: int = betterproto.uint32_field(22)
    ccacaoacpab: Dict[int, int] = betterproto.map_field(
        23, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cbooijbgdln: int = betterproto.uint32_field(24)
    aenklljhcfb: int = betterproto.uint32_field(31)
    kmkajhdleoi: int = betterproto.uint32_field(32)
    jneoehhaiem: Dict[int, int] = betterproto.map_field(
        33, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    kkglifckcbf: bool = betterproto.bool_field(34)
    oclnhjfjoio: int = betterproto.uint32_field(35)


@dataclass(eq=False, repr=False)
class LeaveSceneReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LeaveSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class LeaveWorldNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LevelTagDataNotify(betterproto.Message):
    level_tag_id_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class LevelupCityReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(14)
    item_num: int = betterproto.uint32_field(8)
    area_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class LevelupCityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    city_info: "CityInfo" = betterproto.message_field(15)
    area_id: int = betterproto.uint32_field(12)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class Lhibcfchihg(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    dungeon_id: int = betterproto.uint32_field(2)
    creator_nickname: str = betterproto.string_field(3)
    tag_list: List[int] = betterproto.uint32_field(4)
    setting: "Idgmfmndibc" = betterproto.message_field(5)
    abstract: "Nojmhfdcpfh" = betterproto.message_field(6)
    social: "Gjbkgonobjd" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class LifeStateChangeNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(7)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(2)
    move_reliable_seq: int = betterproto.uint32_field(5)
    attack_tag: str = betterproto.string_field(13)
    source_entity_id: int = betterproto.uint32_field(15)
    life_state: int = betterproto.uint32_field(9)
    die_type: "PlayerDieType" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class LikeCustomDungeonReq(betterproto.Message):
    is_cancel_like: bool = betterproto.bool_field(15)
    dungeon_guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class LikeCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class LiveEndNotify(betterproto.Message):
    live_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class LiveStartNotify(betterproto.Message):
    live_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class Ljehedladba(betterproto.Message):
    nlfekmmbdfh: List[int] = betterproto.uint32_field(12)
    hogkpoggoop: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class Ljgfpjkmgdo(betterproto.Message):
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class Llijljfhgbd(betterproto.Message):
    kmenmhalbfc: "Jdoflklciki" = betterproto.enum_field(1)
    daehjagbjbl: int = betterproto.int32_field(3)
    create_time: str = betterproto.string_field(4)
    hmnbpjgckgn: str = betterproto.string_field(6)
    eemaljenfdh: int = betterproto.int32_field(7)
    nihndjkngei: bool = betterproto.bool_field(8)
    jkfdibhoggm: List["Pldkichaheb"] = betterproto.message_field(9)
    npaoooeccdm: str = betterproto.string_field(10)
    kppiclokhkf: str = betterproto.string_field(11)


@dataclass(eq=False, repr=False)
class Llpppkbgmln(betterproto.Message):
    ijfdcpilpno: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class LoadActivityTerrainNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LocationInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(3)
    rot: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class LockedPersonallineData(betterproto.Message):
    personal_line_id: int = betterproto.uint32_field(6)
    lock_reason: "LockReason" = betterproto.enum_field(4)
    chapter_id: int = betterproto.uint32_field(5, group="param")
    level: int = betterproto.uint32_field(13, group="param")


@dataclass(eq=False, repr=False)
class Loobjodjjfp(betterproto.Message):
    spawn_pos: "Vector" = betterproto.message_field(15)
    guid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class LuaEnvironmentEffectNotify(betterproto.Message):
    type: int = betterproto.uint32_field(14)
    float_param_list: List[float] = betterproto.float_field(12)
    effect_alias: str = betterproto.string_field(13)
    int_param_list: List[int] = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class LuaSetOptionNotify(betterproto.Message):
    lua_set_param: str = betterproto.string_field(4)
    option_type: "LuaOptionType" = betterproto.enum_field(14)


@dataclass(eq=False, repr=False)
class LuminanceStoneChallengeActivityDetailInfo(betterproto.Message):
    best_score: int = betterproto.uint32_field(10)
    gnelkoiilec: bool = betterproto.bool_field(12)
    left_monsters: bool = betterproto.bool_field(4)
    bkcaehmieec: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class LuminanceStoneChallengeGallerySettleInfo(betterproto.Message):
    clean_mud_count: int = betterproto.uint32_field(15)
    gallery_id: int = betterproto.uint32_field(11)
    reason: "GalleryStopReason" = betterproto.enum_field(9)
    kill_monster_count: int = betterproto.uint32_field(6)
    kill_special_monster_count: int = betterproto.uint32_field(4)
    final_score: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class LuminanceStoneChallengeInfo(betterproto.Message):
    kill_special_monster_count: int = betterproto.uint32_field(7)
    score: int = betterproto.uint32_field(15)
    kill_monster_count: int = betterproto.uint32_field(4)
    clean_mud_count: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class LuminanceStoneChallengeSettleInfo(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(8)
    settle_info: "LuminanceStoneChallengeGallerySettleInfo" = betterproto.message_field(
        11
    )


@dataclass(eq=False, repr=False)
class LuminanceStoneChallengeSettleNotify(betterproto.Message):
    settle_info: "LuminanceStoneChallengeSettleInfo" = betterproto.message_field(1)
    gallery_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class LunaRiteAreaFinishNotify(betterproto.Message):
    area_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class LunaRiteAreaInfo(betterproto.Message):
    challenge_index: int = betterproto.uint32_field(9)
    sacrifice_reward_list: List[int] = betterproto.uint32_field(13)
    sacrifice_list: List[int] = betterproto.uint32_field(2)
    hint_status: "LunaRiteHintStatusType" = betterproto.enum_field(3)
    area_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class LunaRiteDetailInfo(betterproto.Message):
    hint_point: List["LunaRiteHintPoint"] = betterproto.message_field(8)
    area_info_list: List["LunaRiteAreaInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class LunaRiteGroupBundleRegisterNotify(betterproto.Message):
    group_link_bundle_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class LunaRiteHintPoint(betterproto.Message):
    index: int = betterproto.uint32_field(4)
    pos: "Vector" = betterproto.message_field(11)
    area_id: int = betterproto.uint32_field(2)
    type: "LunaRiteHintPointType" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class LunaRiteHintPointRemoveNotify(betterproto.Message):
    hint_point_index: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LunaRiteHintPointReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class LunaRiteHintPointRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    area_id: int = betterproto.uint32_field(5)
    hint_status: "LunaRiteHintStatusType" = betterproto.enum_field(3)
    hint_point: List["LunaRiteHintPoint"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class LunaRiteInfo(betterproto.Message):
    hint_point: List["LunaRiteHintPoint"] = betterproto.message_field(8)
    area_info_list: List["LunaRiteAreaInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class LunaRiteSacrificeReq(betterproto.Message):
    index: int = betterproto.uint32_field(3)
    area_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LunaRiteSacrificeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    area_id: int = betterproto.uint32_field(13)
    index: int = betterproto.uint32_field(7)
    sacrifice_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class LunaRiteTakeSacrificeRewardReq(betterproto.Message):
    index: int = betterproto.uint32_field(10)
    area_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class LunaRiteTakeSacrificeRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    sacrifice_reward_index: int = betterproto.uint32_field(13)
    area_id: int = betterproto.uint32_field(8)
    index: int = betterproto.uint32_field(2)
    sacrifice_reward_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class LunchBoxData(betterproto.Message):
    slot_material_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class MailChangeNotify(betterproto.Message):
    del_mail_id_list: List[int] = betterproto.uint32_field(4)
    mail_list: List["MailData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class MailData(betterproto.Message):
    mail_id: int = betterproto.uint32_field(1)
    mail_text_content: "MailTextContent" = betterproto.message_field(4)
    item_list: List["MailItem"] = betterproto.message_field(7)
    send_time: int = betterproto.uint32_field(8)
    expire_time: int = betterproto.uint32_field(9)
    importance: int = betterproto.uint32_field(10)
    is_read: bool = betterproto.bool_field(11)
    is_attachment_got: bool = betterproto.bool_field(12)
    config_id: int = betterproto.uint32_field(13)
    argument_list: List[str] = betterproto.string_field(14)
    collect_state: "MailCollectState" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class MailItem(betterproto.Message):
    equip_param: "EquipParam" = betterproto.message_field(1)
    delete_info: "MaterialDeleteInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MailTextContent(betterproto.Message):
    title: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)
    sender: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class MainCoop(betterproto.Message):
    self_confidence: int = betterproto.uint32_field(3)
    save_point_id_list: List[int] = betterproto.uint32_field(6)
    id: int = betterproto.uint32_field(15)
    normal_var_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    status: "Status" = betterproto.enum_field(8)
    temp_var_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    seen_ending_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class MainCoopFailNotify(betterproto.Message):
    textmap_id: str = betterproto.string_field(4)
    chapter_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MainCoopUpdateNotify(betterproto.Message):
    main_coop_list: List["MainCoop"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class MapAreaChangeNotify(betterproto.Message):
    map_area_info_list: List["MapAreaInfo"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class MapAreaInfo(betterproto.Message):
    map_area_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class MapMarkPoint(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    pos: "Vector" = betterproto.message_field(3)
    point_type: "MapMarkPointType" = betterproto.enum_field(4)
    monster_id: int = betterproto.uint32_field(5)
    from_type: "MapMarkFromType" = betterproto.enum_field(6)
    quest_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MapMarkTipsInfo(betterproto.Message):
    tips_type: "MapMarkTipsType" = betterproto.enum_field(1)
    point_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MarkEntityInMinMapNotify(betterproto.Message):
    monster_id: int = betterproto.uint32_field(12)
    entity_id: int = betterproto.uint32_field(3)
    position: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class MarkMapReq(betterproto.Message):
    op: "MarkMapReqOperation" = betterproto.enum_field(3)
    old: "MapMarkPoint" = betterproto.message_field(7)
    mark: "MapMarkPoint" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class MarkMapRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    mark_list: List["MapMarkPoint"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class MarkNewNotify(betterproto.Message):
    id_list: List[int] = betterproto.uint32_field(1)
    mark_new_type: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class MarkTargetInvestigationMonsterNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(15)
    monster_id: int = betterproto.uint32_field(12)
    scene_id: int = betterproto.uint32_field(14)
    investigation_monster_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MassiveEntityElementOpBatchNotify(betterproto.Message):
    attack_element_durability: float = betterproto.float_field(6)
    unk3300_knldjpemckp: int = betterproto.int32_field(9)
    unk3300_pnangdnnfch: int = betterproto.int32_field(11)
    attacker_id: int = betterproto.uint32_field(10)
    user_id: int = betterproto.uint32_field(4)
    entity_type: int = betterproto.int32_field(2)
    shape_sphere: "ShapeSphere" = betterproto.message_field(7, group="check_shape")
    shape_box: "ShapeBox" = betterproto.message_field(8, group="check_shape")
    op_idx: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MassiveEntityState(betterproto.Message):
    entity_type: int = betterproto.uint32_field(1)
    obj_id: int = betterproto.int64_field(2)
    element_state: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MassiveEntityStateChangedNotify(betterproto.Message):
    massive_entity_state_list: List["MassiveEntityState"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class MassivePropParam(betterproto.Message):
    type: int = betterproto.int32_field(1)
    bkeclhnchpn: List[int] = betterproto.uint32_field(2)
    param_list: List[float] = betterproto.float_field(3)
    eejlkopeggc: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MassivePropSyncInfo(betterproto.Message):
    id: int = betterproto.int64_field(1)
    prop_list: List["MassivePropParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MatchPlayerInfo(betterproto.Message):
    is_agreed: bool = betterproto.bool_field(11)
    player_info: "OnlinePlayerInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class Material(betterproto.Message):
    count: int = betterproto.uint32_field(1)
    delete_info: "MaterialDeleteInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MaterialDeleteInfo(betterproto.Message):
    has_delete_config: bool = betterproto.bool_field(1)
    count_down_delete: "MaterialDeleteInfoCountDownDelete" = betterproto.message_field(
        2, group="delete_info"
    )
    date_delete: "MaterialDeleteInfoDateTimeDelete" = betterproto.message_field(
        3, group="delete_info"
    )
    delay_week_count_down_delete: "MaterialDeleteInfoDelayWeekCountDownDelete" = (
        betterproto.message_field(4, group="delete_info")
    )


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoCountDownDelete(betterproto.Message):
    delete_time_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    config_count_down_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoDateTimeDelete(betterproto.Message):
    delete_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoDelayWeekCountDownDelete(betterproto.Message):
    delete_time_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    config_delay_week: int = betterproto.uint32_field(2)
    config_count_down_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MaterialDeleteReturnNotify(betterproto.Message):
    unk3300_ofokfkbaljd: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    unk3300_laihdkjahaf: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    type: "MaterialDeleteReturnType" = betterproto.enum_field(11)


@dataclass(eq=False, repr=False)
class MaterialDeleteUpdateNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MaterialInfo(betterproto.Message):
    count: int = betterproto.uint32_field(3)
    guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class MathQuaternion(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)
    w: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class Mcfgdlpgefd(betterproto.Message):
    dnjogbbalgg: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class McoinExchangeHcoinReq(betterproto.Message):
    mcoin_cost: int = betterproto.uint32_field(15)
    hcoin: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class McoinExchangeHcoinRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    mcoin_cost: int = betterproto.uint32_field(11)
    hcoin: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class Mdlmfkbdkkk(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MechanicusCandidateTeamCreateReq(betterproto.Message):
    difficult_level: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MechanicusCandidateTeamCreateRsp(betterproto.Message):
    difficult_level: int = betterproto.uint32_field(4)
    dungeon_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class MechanicusCloseNotify(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class MechanicusCoinNotify(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(8)
    coin: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MechanicusInfo(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(14)
    unk3300_kjlgfepieng: List[int] = betterproto.uint32_field(7)
    gear_level_pair_list: List["Uint32Pair"] = betterproto.message_field(6)
    unk3300_eebeocmaikn: List[int] = betterproto.uint32_field(12)
    is_finish_teach_dungeon: bool = betterproto.bool_field(3)
    coin: int = betterproto.uint32_field(8)
    punish_over_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MechanicusLevelupGearReq(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(6)
    gear_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MechanicusLevelupGearRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    mechanicus_id: int = betterproto.uint32_field(1)
    gear_id: int = betterproto.uint32_field(10)
    after_gear_level: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MechanicusOpenNotify(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MechanicusSequenceOpenNotify(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(5)
    sequence_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MechanicusSettleInfo(betterproto.Message):
    scene_time_ms: int = betterproto.uint64_field(15)
    unk3300_haeopaobbfe: int = betterproto.uint32_field(7)
    is_success: bool = betterproto.bool_field(6)
    unk3300_nambbhmjjln: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(12)
    unk3300_ekaiaplnipm: int = betterproto.uint32_field(11)
    play_index: int = betterproto.uint32_field(13)
    watcher_list: List["MultistageSettleWatcherInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class MechanicusUnlockGearReq(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(13)
    gear_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MechanicusUnlockGearRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    gear_id: int = betterproto.uint32_field(9)
    mechanicus_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MeetNpcReq(betterproto.Message):
    npc_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MeetNpcRsp(betterproto.Message):
    npc_first_met_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class Meidianhedd(betterproto.Message):
    stage_info_list: List["Omnaamaiboh"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class MetNpcIdListNotify(betterproto.Message):
    npc_first_met_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class Mfmbkhbbihg(betterproto.Message):
    action_type: str = betterproto.string_field(1)
    eihhphgagke: str = betterproto.string_field(2)
    nbefdipkjbd: int = betterproto.uint32_field(3)
    fkncgjlkmef: str = betterproto.string_field(4)
    gdeakhcppgc: int = betterproto.uint32_field(5)
    agidilehddc: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class Mgkfockhahi(betterproto.Message):
    type: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)
    hkaefdkoeji: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class Mgoddijnabc(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)
    ahakcfcglah: float = betterproto.float_field(14)
    speed: float = betterproto.float_field(10)
    ngkifhhgeji: List[int] = betterproto.uint32_field(7)
    ddgbmfnfahg: str = betterproto.string_field(12)
    akokbobpiei: float = betterproto.float_field(5)
    kafblnnckhe: bool = betterproto.bool_field(4)
    eknhofiihcl: "Vector" = betterproto.message_field(3)
    mibdohmpbej: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class Mhaolejojjl(betterproto.Message):
    apply_entity_id: int = betterproto.uint32_field(8)
    attached_instanced_modifier: "AbilityAttachedModifier" = betterproto.message_field(
        7
    )
    eailnhcpjaf: bool = betterproto.bool_field(1)
    idobigdgghp: List["Djooipgjpfc"] = betterproto.message_field(13)
    parent_ability_name: "AbilityString" = betterproto.message_field(10)
    parent_ability_override: "AbilityString" = betterproto.message_field(5)
    fhmcocfmfik: bool = betterproto.bool_field(11)
    is_attached_parent_ability: bool = betterproto.bool_field(3)
    server_buff_uid: int = betterproto.uint32_field(9)
    modifier_local_id: int = betterproto.int32_field(6)
    henpegmkbie: "Aggicdiehnl" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriActivityDetailInfo(betterproto.Message):
    challenge_pos_list: List[
        "MichiaeMatsuriChallengePositionInfo"
    ] = betterproto.message_field(8)
    unlocked_crystal_skill_list: List[int] = betterproto.uint32_field(4)
    gain_crystal_exp: int = betterproto.uint32_field(5)
    chest_pos_list: List["MichiaeMatsuriChestPositionInfo"] = betterproto.message_field(
        11
    )
    stage_list: List["MichiaeMatsuriStage"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriChallengePositionInfo(betterproto.Message):
    group_id: int = betterproto.uint32_field(5)
    gadget_id: int = betterproto.uint32_field(14)
    pos: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriChestPositionInfo(betterproto.Message):
    group_id: int = betterproto.uint32_field(4)
    pos: "Vector" = betterproto.message_field(13)
    config_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriDarkPressureLevelUpdateNotify(betterproto.Message):
    dark_pressure_level: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriGainCrystalExpUpdateNotify(betterproto.Message):
    gain_crystal_exp: int = betterproto.uint32_field(13)
    activity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriInfo(betterproto.Message):
    challenge_pos_list: List[
        "MichiaeMatsuriChallengePositionInfo"
    ] = betterproto.message_field(8)
    unlocked_crystal_skill_list: List[int] = betterproto.uint32_field(4)
    gain_crystal_exp: int = betterproto.uint32_field(5)
    chest_pos_list: List["MichiaeMatsuriChestPositionInfo"] = betterproto.message_field(
        11
    )
    stage_list: List["MichiaeMatsuriStage"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriInteractStatueReq(betterproto.Message):
    statue_entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriInteractStatueRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriRemoveChallengeMarkNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(12)
    gadget_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriRemoveChestMarkNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(8)
    config_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStage(betterproto.Message):
    is_open: bool = betterproto.bool_field(8)
    stage_id: int = betterproto.uint32_field(11)
    open_time: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStartBossChallengeReq(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(1)
    difficulty: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStartBossChallengeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStartDarkChallengeReq(betterproto.Message):
    worktop_entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStartDarkChallengeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriUnlockCrystalSkillReq(betterproto.Message):
    crystal_skill_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriUnlockCrystalSkillRsp(betterproto.Message):
    crystal_skill_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class MiracleRingDataNotify(betterproto.Message):
    is_gadget_created: bool = betterproto.bool_field(2)
    miracle_ring_cd: int = betterproto.uint32_field(8)
    last_deliver_item_time: int = betterproto.uint32_field(4)
    last_take_reward_time: int = betterproto.uint32_field(13)
    gadget_entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MiracleRingDeliverItemReq(betterproto.Message):
    food_weapon_guid_list: List[int] = betterproto.uint64_field(3)
    op_type: "InterOpType" = betterproto.enum_field(2)
    gadget_id: int = betterproto.uint32_field(14)
    item_param_list: List["ItemParam"] = betterproto.message_field(5)
    gadget_entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MiracleRingDeliverItemRsp(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(5)
    interact_type: "InteractType" = betterproto.enum_field(7)
    gadget_id: int = betterproto.uint32_field(4)
    op_type: "InterOpType" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class MiracleRingDestroyNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MiracleRingDropResultNotify(betterproto.Message):
    drop_result: int = betterproto.int32_field(6)
    last_take_reward_time: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class MiracleRingTakeRewardReq(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(1)
    gadget_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class MiracleRingTakeRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class MistTrialActivityInfo(betterproto.Message):
    trial_level_data_list: List["MistTrialLevelData"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class MistTrialBestAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(2)
    avatar_type: "AvatarType" = betterproto.enum_field(1)
    costume_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MistTrialDunegonFailNotify(betterproto.Message):
    dungeon_id: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class MistTrialFloorLevelNotify(betterproto.Message):
    dungeon_scene_id: int = betterproto.uint32_field(9)
    floor_level: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class MistTrialGetChallengeMissionReq(betterproto.Message):
    trial_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MistTrialGetChallengeMissionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    trial_id: int = betterproto.uint32_field(9)
    mission_info_list: List["MistTrialMissionInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class MistTrialGetDungeonExhibitionDataReq(betterproto.Message):
    trial_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class MistTrialGetDungeonExhibitionDataRsp(betterproto.Message):
    trial_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class MistTrialLevelData(betterproto.Message):
    open_time: int = betterproto.uint32_field(2)
    first_pass_time: int = betterproto.uint32_field(4)
    level_id: int = betterproto.uint32_field(12)
    is_open: bool = betterproto.bool_field(6)
    best_hit_avatar: "MistTrialBestAvatar" = betterproto.message_field(14)
    best_avatar_list: List["MistTrialBestAvatar"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class MistTrialMissionInfo(betterproto.Message):
    watcher_list_id: int = betterproto.uint32_field(14)
    param: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MistTrialSelectAvatarAndEnterDungeonReq(betterproto.Message):
    trial_id: int = betterproto.uint32_field(14)
    enter_point_id: int = betterproto.uint32_field(5)
    select_avatar_index_list: List[
        "MistTrialSelectAvatarAndEnterDungeonReqSelectAvatarIndex"
    ] = betterproto.message_field(6)
    select_trial_avatar_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MistTrialSelectAvatarAndEnterDungeonReqSelectAvatarIndex(betterproto.Message):
    mist_trial_avatar_id: int = betterproto.uint32_field(13, group="GBMFCGPBJHH")
    formal_avatar_guid: int = betterproto.uint64_field(15, group="GBMFCGPBJHH")


@dataclass(eq=False, repr=False)
class MistTrialSelectAvatarAndEnterDungeonRsp(betterproto.Message):
    trial_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MistTrialSettleNotify(betterproto.Message):
    best_hit_avatar: "MistTrialBestAvatar" = betterproto.message_field(2)
    unk3300_kfkhaacdjdj: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    best_avatar_list: List["MistTrialBestAvatar"] = betterproto.message_field(5)
    first_pass_time: int = betterproto.uint32_field(9)
    dungeon_scene_id: int = betterproto.uint32_field(14)
    unk3300_gmpeellanli: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class Mlbfndkniem(betterproto.Message):
    is_open: bool = betterproto.bool_field(13)
    level_id: int = betterproto.uint32_field(5)
    max_score: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class Mmjfcjaibbg(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ModifierDurability(betterproto.Message):
    reduce_ratio: float = betterproto.float_field(1)
    remaining_durability: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class ModifyAdd(betterproto.Message):
    pos: int = betterproto.uint32_field(11)
    owner_card_guid: int = betterproto.uint32_field(10)
    controller_id: int = betterproto.uint32_field(7)
    reason: "GcgReason" = betterproto.enum_field(14)
    card_guid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ModifyRemove(betterproto.Message):
    controller_id: int = betterproto.uint32_field(7)
    card_guid_list: List[int] = betterproto.uint32_field(3)
    reason: "GcgReason" = betterproto.enum_field(1)
    owner_card_guid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Modkoilpbdn(betterproto.Message):
    brief_list: List["Lhibcfchihg"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Moeldicdljm(betterproto.Message):
    oiibnieamib: str = betterproto.string_field(1)
    entity_id: str = betterproto.string_field(2)
    lang: str = betterproto.string_field(3)
    khjppnapjib: str = betterproto.string_field(4)
    fecoacjadfm: str = betterproto.string_field(5)
    uid: int = betterproto.uint32_field(6)
    fcjijbicndj: List["Poededpkgph"] = betterproto.message_field(7)
    pmbjacpclfc: List["Mmjfcjaibbg"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class Monster(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    weapon_list: List["SceneWeaponInfo"] = betterproto.message_field(4)
    authority_peer_id: int = betterproto.uint32_field(5)
    affix_list: List[int] = betterproto.uint32_field(6)
    is_elite: bool = betterproto.bool_field(7)
    owner_entity_id: int = betterproto.uint32_field(8)
    summoned_tag: int = betterproto.uint32_field(9)
    summon_tag_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    pose_id: int = betterproto.uint32_field(11)
    born_type: "MonsterBornType" = betterproto.enum_field(12)
    block_id: int = betterproto.uint32_field(13)
    mark_flag: int = betterproto.uint32_field(14)
    title_id: int = betterproto.uint32_field(15)
    special_name_id: int = betterproto.uint32_field(16)
    attack_target_id: int = betterproto.uint32_field(17)
    monster_route: "MonsterRoute" = betterproto.message_field(18)
    ai_config_id: int = betterproto.uint32_field(19)
    level_route_id: int = betterproto.uint32_field(20)
    init_pose_id: int = betterproto.uint32_field(21)
    is_light: bool = betterproto.bool_field(22)
    kill_num: int = betterproto.uint32_field(23)
    fish_info: "FishInfo" = betterproto.message_field(50, group="content")
    fishtank_fish_info: "FishtankFishInfo" = betterproto.message_field(
        51, group="content"
    )


@dataclass(eq=False, repr=False)
class MonsterAiConfigHashNotify(betterproto.Message):
    hash_value: int = betterproto.int32_field(9)
    entity_id: int = betterproto.uint32_field(7)
    job_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MonsterAlertChangeNotify(betterproto.Message):
    avatar_entity_id: int = betterproto.uint32_field(2)
    is_alert: int = betterproto.uint32_field(10)
    monster_entity_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class MonsterForceAlertNotify(betterproto.Message):
    monster_entity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MonsterPointArrayRouteUpdateNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(12)
    monster_route: "MonsterRoute" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MonsterRoute(betterproto.Message):
    route_points: List["RoutePoint"] = betterproto.message_field(1)
    speed_level: int = betterproto.uint32_field(2)
    route_type: int = betterproto.uint32_field(3)
    arrive_range: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class MonsterSummonTagNotify(betterproto.Message):
    summon_tag_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    monster_entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MoonfinTrialInfo(betterproto.Message):
    level_info_map: Dict[int, "MoonfinTrialLevelInfo"] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    special_fish_count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MoonfinTrialLevelInfo(betterproto.Message):
    best_record: int = betterproto.uint32_field(11)
    open_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MotionInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)
    speed: "Vector" = betterproto.message_field(3)
    state: "MotionState" = betterproto.enum_field(4)
    params: List["Vector"] = betterproto.message_field(5)
    ref_pos: "Vector" = betterproto.message_field(6)
    ref_id: int = betterproto.uint32_field(7)
    scene_time: int = betterproto.uint32_field(8)
    interval_velocity: int = betterproto.uint64_field(9)


@dataclass(eq=False, repr=False)
class MoveCard(betterproto.Message):
    controller_id: int = betterproto.uint32_field(6)
    from_: "GcgZoneType" = betterproto.enum_field(3)
    card_guid_list: List[int] = betterproto.uint32_field(15)
    fail_guid_list: List[int] = betterproto.uint32_field(10)
    to: "GcgZoneType" = betterproto.enum_field(12)
    reason: "GcgReason" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class MpBlockNotify(betterproto.Message):
    end_time: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MpLevelEntityInfo(betterproto.Message):
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(2)
    entity_id: int = betterproto.uint32_field(11)
    authority_peer_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MpPlayGuestReplyInviteReq(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(6)
    is_agree: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class MpPlayGuestReplyInviteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    mp_play_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class MpPlayGuestReplyNotify(betterproto.Message):
    is_agree: bool = betterproto.bool_field(7)
    mp_play_id: int = betterproto.uint32_field(12)
    uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MpPlayInviteResultNotify(betterproto.Message):
    all_agree: bool = betterproto.bool_field(10)
    mp_play_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MpPlayOwnerCheckReq(betterproto.Message):
    is_skip_match: bool = betterproto.bool_field(5)
    mp_play_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MpPlayOwnerCheckRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    is_skip_match: bool = betterproto.bool_field(14)
    wrong_uid: int = betterproto.uint32_field(15)
    mp_play_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MpPlayOwnerInviteNotify(betterproto.Message):
    cd: int = betterproto.uint32_field(6)
    is_remain_reward: bool = betterproto.bool_field(9)
    mp_play_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MpPlayOwnerStartInviteReq(betterproto.Message):
    is_skip_match: bool = betterproto.bool_field(13)
    mp_play_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MpPlayOwnerStartInviteRsp(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(3)
    is_skip_match: bool = betterproto.bool_field(7)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class MpPlayPrepareInterruptNotify(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MpPlayPrepareNotify(betterproto.Message):
    prepare_end_time: int = betterproto.uint32_field(2)
    mp_play_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpPlayRewardInfo(betterproto.Message):
    resin: int = betterproto.uint32_field(1)
    remain_uid_list: List[int] = betterproto.uint32_field(2)
    qualify_uid_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MsgParam(betterproto.Message):
    int_param: int = betterproto.uint32_field(10, group="param")
    flt_param: float = betterproto.float_field(7, group="param")
    str_param: str = betterproto.string_field(15, group="param")


@dataclass(eq=False, repr=False)
class MultistagePlayEndNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(2)
    play_index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MultistagePlayFinishStageReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    play_index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MultistagePlayFinishStageRsp(betterproto.Message):
    play_index: int = betterproto.uint32_field(7)
    group_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MultistagePlayInfo(betterproto.Message):
    stage_index: int = betterproto.uint32_field(13)
    begin_time: int = betterproto.uint32_field(8)
    duration: int = betterproto.uint32_field(15)
    play_index: int = betterproto.uint32_field(3)
    stage_type: int = betterproto.uint32_field(9)
    group_id: int = betterproto.uint32_field(12)
    play_type: int = betterproto.uint32_field(10)
    mechanicus_info: "MechanicusInfo" = betterproto.message_field(1387, group="detail")
    fleur_fair_info: "FleurFairInfo" = betterproto.message_field(2006, group="detail")
    hide_and_seek_info: "HideAndSeekInfo" = betterproto.message_field(
        1418, group="detail"
    )
    chess_info: "ChessInfo" = betterproto.message_field(1939, group="detail")
    irodori_chess_info: "IrodoriChessInfo" = betterproto.message_field(
        452, group="detail"
    )
    char_amusement_info: "CharAmusementInfo" = betterproto.message_field(
        1200, group="detail"
    )
    brick_breaker_info: "BrickBreakerInfo" = betterproto.message_field(
        1701, group="detail"
    )
    coin_collect_info: "CoinCollectInfo" = betterproto.message_field(
        1451, group="detail"
    )
    lan_v3_boat_info: "LanV3BoatInfo" = betterproto.message_field(424, group="detail")


@dataclass(eq=False, repr=False)
class MultistagePlayInfoNotify(betterproto.Message):
    info: "MultistagePlayInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class MultistagePlaySettleNotify(betterproto.Message):
    play_index: int = betterproto.uint32_field(15)
    group_id: int = betterproto.uint32_field(1)
    mechanicus_settle_info: "MechanicusSettleInfo" = betterproto.message_field(
        1241, group="detail"
    )
    chess_settle_info: "ChessSettleInfo" = betterproto.message_field(
        200, group="detail"
    )
    irodori_chess_settle_info: "IrodoriChessSettleInfo" = betterproto.message_field(
        96, group="detail"
    )


@dataclass(eq=False, repr=False)
class MultistagePlayStageEndNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(9)
    play_index: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class MultistageSettleWatcherInfo(betterproto.Message):
    cur_progress: int = betterproto.uint32_field(1)
    total_progress: int = betterproto.uint32_field(8)
    watcher_id: int = betterproto.uint32_field(5)
    is_inverse: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class MuqadasPotionActivityDetailInfo(betterproto.Message):
    kmhabponajo: List["MuqadasPotionLevelData"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class MuqadasPotionActivityEnterDungeonReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MuqadasPotionActivityEnterDungeonRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class MuqadasPotionCaptureWeaknessReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(10)
    capture_weakness_count: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class MuqadasPotionCaptureWeaknessRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class MuqadasPotionDungeonSettleNotify(betterproto.Message):
    level_id: int = betterproto.uint32_field(11)
    capture_weakness_count: int = betterproto.uint32_field(7)
    final_score: int = betterproto.uint32_field(14)
    is_success: bool = betterproto.bool_field(3)
    is_new_record: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class MuqadasPotionInfo(betterproto.Message):
    muqadas_potion_level_data_list: int = betterproto.uint32_field(13)
    score: int = betterproto.uint32_field(14)
    unk3300_lkeicolmpii: int = betterproto.uint32_field(3)
    capture_weakness_count: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MuqadasPotionLevelData(betterproto.Message):
    level_id: int = betterproto.uint32_field(14)
    is_open: bool = betterproto.bool_field(10)
    max_score: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MuqadasPotionRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MuqadasPotionRestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class MusicBriefInfo(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(8)
    unk3300_ccmmpahimdo: int = betterproto.uint32_field(88)
    unk3300_plnofohfape: int = betterproto.uint32_field(15)
    unk3300_hkbhaimobko: List[int] = betterproto.uint32_field(1363)
    unk3300_fkigpajfplg: bool = betterproto.bool_field(5)
    import_from_ugc_guid: int = betterproto.uint64_field(6)
    music_id: int = betterproto.uint32_field(14)
    unk3300_jeebfpfehhg: List[int] = betterproto.uint32_field(1062)
    unk3300_mbkdgbnfpoa: int = betterproto.uint32_field(1837)
    unk3300_ojokfbjalij: int = betterproto.uint32_field(7)
    unk3300_egigiookbab: int = betterproto.uint32_field(287)
    unk3300_obbmcfadnin: int = betterproto.uint32_field(2)
    unk3300_pbenmahhgil: int = betterproto.uint32_field(9)
    unk3300_ncdkcnolgkb: bool = betterproto.bool_field(4)
    version: int = betterproto.uint32_field(1)
    creator_nickname: str = betterproto.string_field(3)
    unk3300_gdnapnainba: bool = betterproto.bool_field(11)
    max_score: int = betterproto.uint32_field(12)
    unk3300_kmmblimkjcm: int = betterproto.uint32_field(10)
    is_psn_platform: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class MusicGameActivityDetailInfo(betterproto.Message):
    unk3300_aagcdcoipjm: List["MusicBriefInfo"] = betterproto.message_field(2)
    unk3300_okhaacghmap: List["MusicBriefInfo"] = betterproto.message_field(6)
    music_game_record_map: Dict[int, "MusicGameRecord"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class MusicGameInfo(betterproto.Message):
    unk3300_aagcdcoipjm: List["MusicBriefInfo"] = betterproto.message_field(2)
    unk3300_okhaacghmap: List["MusicBriefInfo"] = betterproto.message_field(6)
    music_game_record_map: Dict[int, "MusicGameRecord"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class MusicGameRecord(betterproto.Message):
    is_unlock: bool = betterproto.bool_field(8)
    max_score: int = betterproto.uint32_field(15)
    max_combo: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MusicGameSettleReq(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(4)
    unk3300_hhbcepnlcll: List[int] = betterproto.uint32_field(1626)
    is_save_score: bool = betterproto.bool_field(11)
    music_basic_id: int = betterproto.uint32_field(7)
    score: int = betterproto.uint32_field(2)
    unk3300_ebojmgocple: int = betterproto.uint32_field(493)
    unk3300_mlldapciddo: List[int] = betterproto.uint32_field(5)
    speed: float = betterproto.float_field(484)
    combo: int = betterproto.uint32_field(15)
    unk3300_bhigamndfml: bool = betterproto.bool_field(527)
    max_combo: int = betterproto.uint32_field(12)
    unk3300_ipodkencaok: int = betterproto.uint32_field(252)
    correct_hit: int = betterproto.uint32_field(13)
    unk3300_gjmiidioomm: int = betterproto.uint32_field(108)
    unk3300_mdhejnfhbbi: int = betterproto.uint32_field(9)
    unk3300_dmlnkoloaah: bool = betterproto.bool_field(497)
    unk3300_ahaghahgpld: int = betterproto.uint32_field(3)
    unk3300_hepjncaoemp: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class MusicGameSettleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    is_unlock_next_level: bool = betterproto.bool_field(1)
    ugc_guid: int = betterproto.uint64_field(7)
    music_basic_id: int = betterproto.uint32_field(4)
    is_new_record: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class MusicGameStartReq(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(5)
    music_basic_id: int = betterproto.uint32_field(7)
    is_save_score: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class MusicGameStartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    ugc_guid: int = betterproto.uint64_field(8)
    music_basic_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class MusicInfo(betterproto.Message):
    fbmomkmdima: Dict[int, "FleurFairMusicRecord"] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class MusicRecord(betterproto.Message):
    music_track_list: List["UgcMusicTrack"] = betterproto.message_field(3)
    music_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Naleofhpmkn(betterproto.Message):
    aeppldffjcf: int = betterproto.uint32_field(5)
    ilhofemcpji: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class Namohgafbjp(betterproto.Message):
    block_id: int = betterproto.uint32_field(14)
    khhhdmmmcjn: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class NavMeshStatsNotify(betterproto.Message):
    infos: List["PbNavMeshStatsInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class Nbojkbnkijj(betterproto.Message):
    loemgoiedea: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class Ncfcilacfag(betterproto.Message):
    ability_override: "AbilityString" = betterproto.message_field(4)
    jbgcmjfopeh: float = betterproto.float_field(15)
    ability_name: "AbilityString" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class Nclbhfkhble(betterproto.Message):
    bcingedoaop: List["Iaenjeillbg"] = betterproto.message_field(9)
    game_id: int = betterproto.uint32_field(8)
    plkdeiooihe: List["Dfaipjmkbcc"] = betterproto.message_field(6)
    fjjbdhjmoca: int = betterproto.uint32_field(12)
    cpmjjejogbm: List["Njapcnddmbh"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class Nepieolfeci(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    macodnmfgja: str = betterproto.string_field(2)
    gmjigokbahm: bool = betterproto.bool_field(3)
    pdpkmnchadl: str = betterproto.string_field(4)
    mogadedkbci: bool = betterproto.bool_field(5)
    jkfdibhoggm: List["Pldkichaheb"] = betterproto.message_field(6)
    idbdfgaalao: "Gjphkjffmom" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class NewCard(betterproto.Message):
    card: "GcgCard" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class Nfbojdfglhh(betterproto.Message):
    ngkifhhgeji: List[int] = betterproto.uint32_field(14)
    mibdohmpbej: bool = betterproto.bool_field(9)
    speed: float = betterproto.float_field(11)
    ddgbmfnfahg: str = betterproto.string_field(13)
    entity_id: int = betterproto.uint32_field(1)
    kafblnnckhe: bool = betterproto.bool_field(15)
    eknhofiihcl: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class Nfhbhhjajda(betterproto.Message):
    canfkdfcgnl: bool = betterproto.bool_field(4)
    fdeoedhpmkj: bool = betterproto.bool_field(12)
    bddkjnapbfc: bool = betterproto.bool_field(3)
    skill_id: int = betterproto.uint32_field(15)
    ooonppjmjga: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class Nghlnabndej(betterproto.Message):
    hpjakbogomm: int = betterproto.uint32_field(13)
    pomnjomifhi: int = betterproto.uint32_field(2)
    gmfajmjacpm: int = betterproto.uint32_field(15)
    phase: int = betterproto.uint32_field(4)
    keoilfncimn: int = betterproto.uint32_field(6)
    mpooncgnhaa: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class Nhiemmbibgh(betterproto.Message):
    entity_id: int = betterproto.uint32_field(5)
    mbbjimmgikj: float = betterproto.float_field(2)
    dkdecebeebb: float = betterproto.float_field(14)
    eknhofiihcl: "Vector" = betterproto.message_field(12)
    speed: float = betterproto.float_field(6)


@dataclass(eq=False, repr=False)
class NicknameAuditConfigNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class NightCrowGadgetInfo(betterproto.Message):
    argument_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class NightCrowGadgetObservationMatchReq(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(7)
    target_gadget_state: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class NightCrowGadgetObservationMatchRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class Ninfmjdpcej(betterproto.Message):
    gookfcglmjd: float = betterproto.float_field(13)


@dataclass(eq=False, repr=False)
class Njapcnddmbh(betterproto.Message):
    op_seq: int = betterproto.uint32_field(13)
    controller_id: int = betterproto.uint32_field(14)
    gm_msg: str = betterproto.string_field(12, group="detail")
    duel: "Duel" = betterproto.message_field(5, group="detail")


@dataclass(eq=False, repr=False)
class Nmpkcmgangk(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    input_type: str = betterproto.string_field(2)
    lliofconmpa: str = betterproto.string_field(3)
    jkfdibhoggm: "Acbdkpgmcnh" = betterproto.message_field(4)
    kdabaandpba: bool = betterproto.bool_field(5)
    mmbahlklfkf: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class NoDamageSkillResult(betterproto.Message):
    unk3300_nnjaoehnppd: int = betterproto.uint32_field(3)
    unk3300_nigdciglake: int = betterproto.uint32_field(1)
    unk3300_lpglocddpcl: int = betterproto.uint32_field(13)
    detail_list: List["GcgDamageDetail"] = betterproto.message_field(9)
    unk3300_epndciajojp: int = betterproto.uint32_field(5)
    skill_id: int = betterproto.uint32_field(15)
    target_card_guid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class Nojmhfdcpfh(betterproto.Message):
    first_publish_time: int = betterproto.uint32_field(1)
    last_publish_time: int = betterproto.uint32_field(2)
    brick_statistics_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class NormalUidOpNotify(betterproto.Message):
    duration: int = betterproto.uint32_field(1)
    param_list: List[int] = betterproto.uint32_field(12)
    param_uid_list: List[int] = betterproto.uint32_field(7)
    param_index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class Npc(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    parent_quest_id: int = betterproto.uint32_field(3)
    block_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class NpcData(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    costume_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class NpcPositionInfo(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    pos: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class NpcTalkReq(betterproto.Message):
    npc_entity_id: int = betterproto.uint32_field(9)
    entity_id: int = betterproto.uint32_field(11)
    talk_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class NpcTalkRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    npc_entity_id: int = betterproto.uint32_field(11)
    cur_talk_id: int = betterproto.uint32_field(1)
    entity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class NpcTalkStateNotify(betterproto.Message):
    is_ban: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class Obcihdjglck(betterproto.Message):
    hhfmfeegcei: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Obdfgkekjjk(betterproto.Message):
    play_index: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class Obfapfphoic(betterproto.Message):
    lhbmbokddkp: str = betterproto.string_field(1)
    mjomnfiadem: str = betterproto.string_field(2)
    lgjfdbchnnm: int = betterproto.uint32_field(3)
    jmmpcpapobk: str = betterproto.string_field(4)
    oiohjhhmkle: str = betterproto.string_field(5)
    product_id: str = betterproto.string_field(6)
    channel_id: str = betterproto.string_field(7)
    nlmgkehpnmi: str = betterproto.string_field(8)
    afmembcinei: str = betterproto.string_field(9)
    mbdifigklgo: str = betterproto.string_field(10)
    device_uuid: str = betterproto.string_field(11)
    dealbhfkalh: str = betterproto.string_field(12)
    bhfcgolfbeg: str = betterproto.string_field(13)
    kbgbegffhhc: str = betterproto.string_field(14)


@dataclass(eq=False, repr=False)
class ObstacleInfo(betterproto.Message):
    center: "Vector" = betterproto.message_field(4)
    extents: "Vector3Int" = betterproto.message_field(12)
    shape: "ObstacleInfoShapeType" = betterproto.enum_field(5)
    obstacle_id: int = betterproto.int32_field(9)
    rotation: "MathQuaternion" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ObstacleModifyNotify(betterproto.Message):
    add_obstacles: List["ObstacleInfo"] = betterproto.message_field(14)
    remove_obstacle_ids: List[int] = betterproto.int32_field(7)
    scene_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class Oeicffkncnj(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    jkplafpenlg: List["Bgpgpmljnlp"] = betterproto.message_field(2)
    jkfdibhoggm: List["Pldkichaheb"] = betterproto.message_field(3)
    ojmkoemmlpa: "Gmjdgjiddci" = betterproto.message_field(4)
    idbdfgaalao: "Gjphkjffmom" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class OfferingInfo(betterproto.Message):
    offering_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class OfferingInteractReq(betterproto.Message):
    offering_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class OfferingInteractRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    offering_data: "PlayerOfferingData" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class OfficialCustomDungeon(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(3)
    win_times: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class Oilihlejjgp(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class Omnaamaiboh(betterproto.Message):
    is_finished: bool = betterproto.bool_field(2)
    is_open: bool = betterproto.bool_field(4)
    stage_id: int = betterproto.uint32_field(12)
    level_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class OneoffGatherPointDetectorDataNotify(betterproto.Message):
    oneoff_gather_point_detector_data_list: List[
        "DetectorData"
    ] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class Ongllfpmbnl(betterproto.Message):
    ckgefmkgkhh: int = betterproto.int64_field(1)
    cmhoaideaep: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class OnlinePlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    player_level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    mp_setting_type: "MpSettingType" = betterproto.enum_field(5)
    cur_player_num_in_world: int = betterproto.uint32_field(6)
    world_level: int = betterproto.uint32_field(7)
    online_id: str = betterproto.string_field(8)
    name_card_id: int = betterproto.uint32_field(9)
    blacklist_uid_list: List[int] = betterproto.uint32_field(10)
    signature: str = betterproto.string_field(11)
    profile_picture: "ProfilePicture" = betterproto.message_field(12)
    psn_id: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class OpActivityDataNotify(betterproto.Message):
    op_activity_info_list: List["OpActivityInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class OpActivityInfo(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(8)
    activity_id: int = betterproto.uint32_field(15)
    is_has_change: bool = betterproto.bool_field(3)
    bonus_info: "BonusInfo" = betterproto.message_field(11, group="detail")
    end_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class OpActivityStateNotify(betterproto.Message):
    finished_bonus_activity_id_list: List[int] = betterproto.uint32_field(11)
    opened_op_activity_info_list: List[
        "OpActivityTagBriefInfo"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class OpActivityTagBriefInfo(betterproto.Message):
    config_id: int = betterproto.uint32_field(10)
    has_reward: bool = betterproto.bool_field(11)
    op_activity_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OpActivityUpdateNotify(betterproto.Message):
    op_activity_info: "OpActivityInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class OpAttack(betterproto.Message):
    skill_id: int = betterproto.uint32_field(8)
    cost_dice_index_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class OpenBlossomCircleCampGuideNotify(betterproto.Message):
    circle_camp_id_list: List[int] = betterproto.uint32_field(13)
    refresh_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class OpenStateChangeNotify(betterproto.Message):
    open_state_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class OpenStateUpdateNotify(betterproto.Message):
    open_state_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class OpPass(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class OpPlayCard(betterproto.Message):
    replace_card_guid: int = betterproto.uint32_field(6)
    target_card_guid_list: List[int] = betterproto.uint32_field(11)
    card_guid: int = betterproto.uint32_field(14)
    cost_dice_index_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class OpReboot(betterproto.Message):
    cost_card_guid_list: List[int] = betterproto.uint32_field(9)
    dice_index_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class OpRedraw(betterproto.Message):
    card_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class OpReroll(betterproto.Message):
    dice_index_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OpSelectOnStage(betterproto.Message):
    card_guid: int = betterproto.uint32_field(6)
    cost_dice_index_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class OpSurrender(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class OpTimer(betterproto.Message):
    time_stamp: int = betterproto.uint64_field(9)
    begin_time: int = betterproto.uint64_field(10)
    controller_id: int = betterproto.uint32_field(6)
    phase: "GcgPhaseType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class OrderDisplayNotify(betterproto.Message):
    order_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class OrderFinishNotify(betterproto.Message):
    add_mcoin: int = betterproto.uint32_field(4)
    card_product_remain_days: int = betterproto.uint32_field(3)
    order_id: int = betterproto.uint32_field(5)
    item_list: List["ItemParam"] = betterproto.message_field(8)
    product_id: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class OtherCustomDungeonBrief(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(2)
    abstract: "CustomDungeonAbstract" = betterproto.message_field(15)
    social: "CustomDungeonSocial" = betterproto.message_field(11)
    is_psn_platform: bool = betterproto.bool_field(10)
    dungeon_id: int = betterproto.uint32_field(5)
    is_adventure_dungeon: bool = betterproto.bool_field(12)
    tag_list: List[int] = betterproto.uint32_field(6)
    setting: "CustomDungeonSetting" = betterproto.message_field(4)
    battle_min_cost_time: int = betterproto.uint32_field(7)
    creator_detail: "SocialDetail" = betterproto.message_field(8)
    is_stored: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class OtherPlayerEnterHomeNotify(betterproto.Message):
    reason: "Reason" = betterproto.enum_field(15)
    nickname: str = betterproto.string_field(11)


@dataclass(eq=False, repr=False)
class OutStuckCustomDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class OutStuckCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class ParamList(betterproto.Message):
    param_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ParentQuest(betterproto.Message):
    random_info: "ParentQuestRandomInfo" = betterproto.message_field(7)
    quest_var: List[int] = betterproto.int32_field(8)
    child_quest_list: List["ChildQuest"] = betterproto.message_field(10)
    is_finished: bool = betterproto.bool_field(9)
    is_random: bool = betterproto.bool_field(11)
    parent_quest_id: int = betterproto.uint32_field(1)
    time_var_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    parent_quest_state: int = betterproto.uint32_field(15)
    video_key: int = betterproto.uint64_field(2)
    inference_page_list: List["InferencePageInfo"] = betterproto.message_field(5)
    quest_var_seq: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ParentQuestInferenceDataNotify(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(8)
    inference_page_list: List["InferencePageInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class ParentQuestRandomInfo(betterproto.Message):
    entrance_id: int = betterproto.uint32_field(1)
    factor_list: List[int] = betterproto.uint32_field(3)
    template_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ParkourLevelInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(10)
    pos: "Vector" = betterproto.message_field(5)
    best_record: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class Pass(betterproto.Message):
    controller_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PathfindingEnterSceneReq(betterproto.Message):
    activity_id: List[int] = betterproto.uint32_field(8)
    unk3300_jhlkdohpifb: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(11)
    is_editor: bool = betterproto.bool_field(13)
    version: int = betterproto.uint32_field(6)
    unk3300_mggfoilelkh: int = betterproto.uint32_field(3)
    obstacles: List["ObstacleInfo"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class PathfindingEnterSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class PathfindingPingNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class Pbcgipfkdbd(betterproto.Message):
    oiibnieamib: str = betterproto.string_field(1)
    entity_id: str = betterproto.string_field(2)
    lang: str = betterproto.string_field(3)
    khjppnapjib: str = betterproto.string_field(4)
    fecoacjadfm: str = betterproto.string_field(5)
    uid: int = betterproto.uint32_field(6)
    fcjijbicndj: List["Dkcaehhpagd"] = betterproto.message_field(7)
    pmbjacpclfc: List["Mmjfcjaibbg"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class PbNavMeshPoly(betterproto.Message):
    edge_types: List["EdgeType"] = betterproto.enum_field(1)
    area: int = betterproto.int32_field(5)
    vects: List[int] = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class PbNavMeshStatsInfo(betterproto.Message):
    unk3300_dhjkkjlkdhb: int = betterproto.int32_field(1)
    unk3300_eeonkadbjme: int = betterproto.int32_field(11)
    unk3300_imlhljaoblf: int = betterproto.int32_field(12)
    unk3300_mokpjbiphni: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class PbNavMeshTile(betterproto.Message):
    polys: List["PbNavMeshPoly"] = betterproto.message_field(11)
    vecs: List["Vector"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Pccgjpeiaoe(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    ingcalgldlb: List["Nmpkcmgangk"] = betterproto.message_field(2)
    jkfdibhoggm: "Dnefmccifdh" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class Pdkbcplnaoj(betterproto.Message):
    lfpempoopmd: float = betterproto.float_field(8)
    dfadhemafpn: float = betterproto.float_field(11)
    element_type: int = betterproto.uint32_field(1)
    bhgooledknh: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class Pdopjigdnpf(betterproto.Message):
    block_id: int = betterproto.uint32_field(1)
    benoomjlmom: List["Ffjppijojli"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Pekdgmpdebd(betterproto.Message):
    pos: "Vector" = betterproto.message_field(9)
    rot: "Vector" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PerformOperationNotify(betterproto.Message):
    rot: "Vector" = betterproto.message_field(1)
    operate_type: "OperateType" = betterproto.enum_field(5)
    pos: "Vector" = betterproto.message_field(14)
    index: int = betterproto.uint32_field(10)
    entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PersistentDungeonSwitchAvatarReq(betterproto.Message):
    cur_avatar_guid: int = betterproto.uint64_field(14)
    avatar_team_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class PersistentDungeonSwitchAvatarRsp(betterproto.Message):
    cur_avatar_guid: int = betterproto.uint64_field(9)
    avatar_team_guid_list: List[int] = betterproto.uint64_field(13)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class PersonalLineAllDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PersonalLineAllDataRsp(betterproto.Message):
    ongoing_personal_line_list: List[int] = betterproto.uint32_field(5)
    legendary_key_count: int = betterproto.uint32_field(7)
    cur_finished_daily_task_count: int = betterproto.uint32_field(2)
    can_be_unlocked_personal_line_list: List[int] = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(11)
    locked_personal_line_list: List[
        "LockedPersonallineData"
    ] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class PersonalLineNewUnlockNotify(betterproto.Message):
    personal_line_id_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class PersonalSceneJumpReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PersonalSceneJumpRsp(betterproto.Message):
    dest_scene_id: int = betterproto.uint32_field(3)
    dest_pos: "Vector" = betterproto.message_field(2)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class Pgkpojfappo(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    value: List["Dbibejbeoee"] = betterproto.message_field(2)
    jkfdibhoggm: "Kcppelgejfe" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PhaseChange(betterproto.Message):
    allow_controller_map: List["Uint32Pair"] = betterproto.message_field(7)
    after_phase: "GcgPhaseType" = betterproto.enum_field(13)
    before_phase: "GcgPhaseType" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class PhaseContinue(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PhotoActivityClientViewReq(betterproto.Message):
    pos_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PhotoActivityClientViewRsp(betterproto.Message):
    pos_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class PhotoActivityFinishReq(betterproto.Message):
    is_succ: bool = betterproto.bool_field(11)
    check_root_id: int = betterproto.uint32_field(3)
    pos_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PhotoActivityFinishRsp(betterproto.Message):
    pos_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class PhotoInfo(betterproto.Message):
    photo_pos_data_list: List["PhotoPosData"] = betterproto.message_field(13)
    left_monsters: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class PhotoPosData(betterproto.Message):
    is_open: bool = betterproto.bool_field(2)
    is_view: bool = betterproto.bool_field(9)
    pos_id: int = betterproto.uint32_field(10)
    open_time: int = betterproto.uint32_field(1)
    center: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class Piddmanonbk(betterproto.Message):
    override_map: List["AbilityScalarValueEntry"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Pidfkdhmhka(betterproto.Message):
    lfphpeioogl: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PingReq(betterproto.Message):
    seq: int = betterproto.uint32_field(11)
    sc_data: bytes = betterproto.bytes_field(13)
    total_tick_time: float = betterproto.double_field(4)
    ue_time: float = betterproto.float_field(15)
    client_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PingRsp(betterproto.Message):
    seq: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(11)
    client_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Pjbeiejceig(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    klihkgbocdg: List["Nepieolfeci"] = betterproto.message_field(2)
    jkfdibhoggm: List["Pldkichaheb"] = betterproto.message_field(3)
    version: str = betterproto.string_field(4)
    ojmkoemmlpa: "Gmjdgjiddci" = betterproto.message_field(5)
    ddahbnggdhk: List["Khibimbjobk"] = betterproto.message_field(6)
    idbdfgaalao: "Gjphkjffmom" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class Pkiipccagah(betterproto.Message):
    fkncgjlkmef: str = betterproto.string_field(1)
    gdeakhcppgc: int = betterproto.uint32_field(2)
    lnlcfafpemp: int = betterproto.uint32_field(3)
    dkdbnljbgml: str = betterproto.string_field(4)
    oaaaldcjfak: str = betterproto.string_field(5)
    ldkcaaolmie: str = betterproto.string_field(6)
    obdacilmepj: int = betterproto.uint32_field(7)
    hnkkkglenlh: int = betterproto.uint32_field(8)
    agidilehddc: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class PlaceInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlantFlowerAcceptAllGiveFlowerReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class PlantFlowerAcceptAllGiveFlowerRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(1)
    accept_flower_result_info_list: List[
        "PlantFlowerAcceptFlowerResultInfo"
    ] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class PlantFlowerAcceptFlowerResultInfo(betterproto.Message):
    unk3300_palejediajp: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    uid: int = betterproto.uint32_field(10)
    unk3300_ilaaddcopke: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlantFlowerAcceptGiveFlowerReq(betterproto.Message):
    uid: int = betterproto.uint32_field(8)
    schedule_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlantFlowerAcceptGiveFlowerRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(12)
    accept_flower_result_info: "PlantFlowerAcceptFlowerResultInfo" = (
        betterproto.message_field(14)
    )


@dataclass(eq=False, repr=False)
class PlantFlowerActivityDetailInfo(betterproto.Message):
    unk3300_elaibmdibfj: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    day_index: int = betterproto.uint32_field(8)
    is_today_has_awarded: bool = betterproto.bool_field(2)
    left_monsters: bool = betterproto.bool_field(1)
    unk3300_epmkdfoblfk: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    today_seed_reward_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlantFlowerEditFlowerCombinationReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(2)
    flower_combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(3)
    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlantFlowerEditFlowerCombinationRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    schedule_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class PlantFlowerFriendFlowerWishData(betterproto.Message):
    profile_picture: "ProfilePicture" = betterproto.message_field(15)
    nickname: str = betterproto.string_field(3)
    uid: int = betterproto.uint32_field(6)
    flower_num_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlantFlowerGetCanGiveFriendFlowerReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PlantFlowerGetCanGiveFriendFlowerRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(13)
    flower_num_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class PlantFlowerGetFriendFlowerWishListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlantFlowerGetFriendFlowerWishListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    schedule_id: int = betterproto.uint32_field(7)
    friend_flower_wish_list: List[
        "PlantFlowerFriendFlowerWishData"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlantFlowerGetRecvFlowerListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PlantFlowerGetRecvFlowerListRsp(betterproto.Message):
    recv_flower_list: List["PlantFlowerRecvFlowerData"] = betterproto.message_field(12)
    retcode: int = betterproto.int32_field(10)
    schedule_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class PlantFlowerGetSeedInfoReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PlantFlowerGetSeedInfoRsp(betterproto.Message):
    seed_reward_id: int = betterproto.uint32_field(3)
    schedule_id: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class PlantFlowerGiveFriendFlowerReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    flower_num_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    schedule_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PlantFlowerGiveFriendFlowerRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(1)
    limit_flower_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PlantFlowerHaveRecvFlowerNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlantFlowerInfo(betterproto.Message):
    unk3300_elaibmdibfj: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    day_index: int = betterproto.uint32_field(8)
    is_today_has_awarded: bool = betterproto.bool_field(2)
    left_monsters: bool = betterproto.bool_field(1)
    unk3300_epmkdfoblfk: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    today_seed_reward_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlantFlowerRecvFlowerData(betterproto.Message):
    nickname: str = betterproto.string_field(12)
    uid: int = betterproto.uint32_field(8)
    profile_picture: "ProfilePicture" = betterproto.message_field(3)
    flower_num_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlantFlowerSetFlowerWishReq(betterproto.Message):
    flower_num_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    schedule_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlantFlowerSetFlowerWishRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class PlantFlowerTakeSeedRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlantFlowerTakeSeedRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    schedule_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PlatformChangeRouteNotify(betterproto.Message):
    scene_time: int = betterproto.uint32_field(9)
    platform: "PlatformInfo" = betterproto.message_field(6)
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlatformInfo(betterproto.Message):
    route_id: int = betterproto.uint32_field(1)
    start_index: int = betterproto.int32_field(2)
    start_route_time: int = betterproto.uint32_field(3)
    start_scene_time: int = betterproto.uint32_field(4)
    start_pos: "Vector" = betterproto.message_field(7)
    is_started: bool = betterproto.bool_field(8)
    start_rot: "MathQuaternion" = betterproto.message_field(9)
    stop_scene_time: int = betterproto.uint32_field(10)
    pos_offset: "Vector" = betterproto.message_field(11)
    rot_offset: "MathQuaternion" = betterproto.message_field(12)
    moving_platform_type: "MovingPlatformType" = betterproto.enum_field(13)
    is_active: bool = betterproto.bool_field(14)
    route: "Route" = betterproto.message_field(15)
    point_id: int = betterproto.uint32_field(16)


@dataclass(eq=False, repr=False)
class PlatformStartRouteNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)
    scene_time: int = betterproto.uint32_field(6)
    platform: "PlatformInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class PlatformStopRouteNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(12)
    platform: "PlatformInfo" = betterproto.message_field(6)
    scene_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerAllowEnterMpAfterAgreeMatchNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterHomeNotify(betterproto.Message):
    src_player_info: "OnlinePlayerInfo" = betterproto.message_field(7)
    src_app_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterHomeResultNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(2)
    reason: "Reason" = betterproto.enum_field(3)
    is_agreed: bool = betterproto.bool_field(10)
    target_nickname: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterHomeResultReq(betterproto.Message):
    apply_uid: int = betterproto.uint32_field(5)
    is_agreed: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterHomeResultRsp(betterproto.Message):
    apply_uid: int = betterproto.uint32_field(12)
    is_agreed: bool = betterproto.bool_field(10)
    retcode: int = betterproto.int32_field(15)
    param: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpAfterMatchAgreedNotify(betterproto.Message):
    matchserver_id: int = betterproto.uint32_field(9)
    src_player_info: "OnlinePlayerInfo" = betterproto.message_field(8)
    match_type: "MatchType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpNotify(betterproto.Message):
    src_thread_index: int = betterproto.uint32_field(14)
    src_player_info: "OnlinePlayerInfo" = betterproto.message_field(11)
    src_app_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultNotify(betterproto.Message):
    is_agreed: bool = betterproto.bool_field(7)
    target_nickname: str = betterproto.string_field(14)
    reason: "PlayerApplyEnterMpResultNotifyReason" = betterproto.enum_field(10)
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultReq(betterproto.Message):
    apply_uid: int = betterproto.uint32_field(4)
    is_agreed: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultRsp(betterproto.Message):
    apply_uid: int = betterproto.uint32_field(10)
    is_agreed: bool = betterproto.bool_field(9)
    retcode: int = betterproto.int32_field(2)
    param: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpRsp(betterproto.Message):
    param: int = betterproto.uint32_field(5)
    target_uid: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class PlayerCancelMatchReq(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class PlayerCancelMatchRsp(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class PlayerChatCdNotify(betterproto.Message):
    over_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerChatNotify(betterproto.Message):
    channel_id: int = betterproto.uint32_field(14)
    chat_info: "ChatInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class PlayerChatReq(betterproto.Message):
    channel_id: int = betterproto.uint32_field(5)
    chat_info: "ChatInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class PlayerChatRsp(betterproto.Message):
    chat_forbidden_endtime: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class PlayerCompoundMaterialBoostReq(betterproto.Message):
    compound_queue_data_list: List["CompoundQueueData"] = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(15)
    ikceidbkdla: List["ItemParam"] = betterproto.message_field(14)
    obkcgkalonf: "CompoundBoostTakeStatusType" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class PlayerCompoundMaterialBoostRsp(betterproto.Message):
    uid: int = betterproto.uint32_field(9)
    akkcmakdlck: int = betterproto.uint32_field(1)
    game_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PlayerCompoundMaterialReq(betterproto.Message):
    count: int = betterproto.uint32_field(3)
    compound_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerCompoundMaterialRsp(betterproto.Message):
    compound_queue_data: "CompoundQueueData" = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class PlayerConfirmMatchReq(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(12)
    is_agreed: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class PlayerConfirmMatchRsp(betterproto.Message):
    is_agreed: bool = betterproto.bool_field(6)
    match_type: "MatchType" = betterproto.enum_field(12)
    match_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class PlayerCookArgsReq(betterproto.Message):
    recipe_id: int = betterproto.uint32_field(5)
    assist_avatar: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PlayerCookArgsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    qte_range_ratio: float = betterproto.float_field(6)


@dataclass(eq=False, repr=False)
class PlayerCookReq(betterproto.Message):
    recipe_id: int = betterproto.uint32_field(15)
    assist_avatar: int = betterproto.uint32_field(6)
    qte_quality: int = betterproto.uint32_field(13)
    cook_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerCookRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    extra_item_list: List["ItemParam"] = betterproto.message_field(13)
    item_list: List["ItemParam"] = betterproto.message_field(9)
    recipe_data: "CookRecipeData" = betterproto.message_field(5)
    cook_count: int = betterproto.uint32_field(12)
    qte_quality: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerDataNotify(betterproto.Message):
    nick_name: str = betterproto.string_field(11)
    region_id: int = betterproto.uint32_field(9)
    server_time: int = betterproto.uint64_field(3)
    is_first_login_today: bool = betterproto.bool_field(7)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class PlayerDeathZoneNotify(betterproto.Message):
    cur_death_zone_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class PlayerEnterDungeonReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(2)
    point_id: int = betterproto.uint32_field(9)
    enter_pos_info: "DungeonEnterPosInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PlayerEnterDungeonRsp(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    dungeon_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class PlayerEnterSceneInfoNotify(betterproto.Message):
    mp_level_entity_info: "MpLevelEntityInfo" = betterproto.message_field(7)
    team_enter_info: "TeamEnterSceneInfo" = betterproto.message_field(5)
    cur_avatar_entity_id: int = betterproto.uint32_field(8)
    enter_scene_token: int = betterproto.uint32_field(13)
    avatar_enter_info: List["AvatarEnterSceneInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class PlayerEnterSceneNotify(betterproto.Message):
    is_first_login_enter_scene: bool = betterproto.bool_field(10)
    enter_scene_token: int = betterproto.uint32_field(2)
    prev_scene_id: int = betterproto.uint32_field(4)
    world_type: int = betterproto.uint32_field(1090)
    is_skip_ui: bool = betterproto.bool_field(317)
    scene_id: int = betterproto.uint32_field(3)
    pos: "Vector" = betterproto.message_field(13)
    world_level: int = betterproto.uint32_field(5)
    scene_transaction: str = betterproto.string_field(647)
    enter_reason: int = betterproto.uint32_field(74)
    type: "EnterType" = betterproto.enum_field(9)
    dungeon_id: int = betterproto.uint32_field(11)
    scene_tag_id_list: List[int] = betterproto.uint32_field(8)
    prev_pos: "Vector" = betterproto.message_field(12)
    scene_begin_time: int = betterproto.uint64_field(15)
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerEyePointStateNotify(betterproto.Message):
    unk3300_kfohoblmmlb: bool = betterproto.bool_field(1)
    eye_point_pos: "Vector" = betterproto.message_field(14)
    unk3300_eopfnbbbgpk: int = betterproto.uint32_field(11)
    unk3300_gnfjioeghoe: int = betterproto.uint32_field(2)
    unk3300_biheknfdddi: int = betterproto.uint32_field(4)
    fix_lod_level: int = betterproto.int32_field(6)
    unk3300_jgemkkjahka: int = betterproto.uint32_field(5)
    unk3300_nipfcfcbfae: bool = betterproto.bool_field(10)
    sphere_radius: float = betterproto.float_field(152, group="region_size")
    cubic_size: "Vector" = betterproto.message_field(879, group="region_size")
    cylinder_size: "CylinderSize" = betterproto.message_field(1320, group="region_size")
    polygon_size: "PolygonSize" = betterproto.message_field(1996, group="region_size")


@dataclass(eq=False, repr=False)
class PlayerFishingDataNotify(betterproto.Message):
    last_fish_rod_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerForceExitReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerForceExitRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class PlayerGameTimeByLuaNotify(betterproto.Message):
    gpbkdlaodce: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class PlayerGameTimeNotify(betterproto.Message):
    game_time: int = betterproto.uint32_field(1)
    is_home: bool = betterproto.bool_field(3)
    uid: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PlayerGcgMatchConfirmNotify(betterproto.Message):
    is_agree: bool = betterproto.bool_field(6)
    match_id: int = betterproto.uint32_field(8)
    uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlayerGcgMatchDismissNotify(betterproto.Message):
    reason: "MatchReason" = betterproto.enum_field(8)
    uid_list: List[int] = betterproto.uint32_field(7)
    match_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerGeneralMatchConfirmNotify(betterproto.Message):
    is_agree: bool = betterproto.bool_field(7)
    match_id: int = betterproto.uint32_field(14)
    uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PlayerGeneralMatchDismissNotify(betterproto.Message):
    match_id: int = betterproto.uint32_field(6)
    reason: "MatchReason" = betterproto.enum_field(13)
    uid_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PlayerGetForceQuitBanInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerGetForceQuitBanInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    expire_time: int = betterproto.uint32_field(9)
    match_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class PlayerHomeCompInfo(betterproto.Message):
    seen_module_id_list: List[int] = betterproto.uint32_field(2)
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(4)
    unlocked_module_id_list: List[int] = betterproto.uint32_field(10)
    levelup_reward_got_level_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlayerHomeCompInfoNotify(betterproto.Message):
    comp_info: "PlayerHomeCompInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PlayerInjectFixNotify(betterproto.Message):
    id: int = betterproto.uint32_field(14)
    inject_fix: bytes = betterproto.bytes_field(6)


@dataclass(eq=False, repr=False)
class PlayerInvestigationAllInfoNotify(betterproto.Message):
    investigation_target_list: List["InvestigationTarget"] = betterproto.message_field(
        6
    )
    investigation_list: List["Investigation"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerInvestigationNotify(betterproto.Message):
    investigation_list: List["Investigation"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class PlayerInvestigationTargetNotify(betterproto.Message):
    investigation_target_list: List["InvestigationTarget"] = betterproto.message_field(
        12
    )


@dataclass(eq=False, repr=False)
class PlayerIpRegionNotify(betterproto.Message):
    is_force_set: bool = betterproto.bool_field(3)
    client_game_time: int = betterproto.uint32_field(1)
    game_time: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PlayerLevelRewardUpdateNotify(betterproto.Message):
    level_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PlayerLocationInfo(betterproto.Message):
    rot: "Vector" = betterproto.message_field(7)
    pos: "Vector" = betterproto.message_field(4)
    uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PlayerLoginReq(betterproto.Message):
    token: str = betterproto.string_field(6)
    unk3300_ndlanbeigeg: int = betterproto.uint32_field(323)
    target_uid: int = betterproto.uint32_field(4)
    checksum_client_version: str = betterproto.string_field(1738)
    account_uid: str = betterproto.string_field(9)
    is_editor: bool = betterproto.bool_field(13)
    birthday: str = betterproto.string_field(1280)
    extra_bin_data: bytes = betterproto.bytes_field(78)
    reg_platform: int = betterproto.uint32_field(119)
    gm_uid: int = betterproto.uint32_field(246)
    checksum: str = betterproto.string_field(1715)
    platform_type: int = betterproto.uint32_field(12)
    tracking_io_info: "TrackingIoInfo" = betterproto.message_field(710)
    unk3300_offhpafifgd: int = betterproto.uint32_field(1762)
    device_info: str = betterproto.string_field(14)
    target_home_owner_uid: int = betterproto.uint32_field(216)
    platform: str = betterproto.string_field(2)
    channel_id: int = betterproto.uint32_field(324)
    country_code: str = betterproto.string_field(1616)
    login_rand: int = betterproto.uint64_field(8)
    online_id: str = betterproto.string_field(54)
    sub_channel_id: int = betterproto.uint32_field(1709)
    device_uuid: str = betterproto.string_field(15)
    unk3300_oobhaiiiphh: int = betterproto.uint32_field(2024)
    client_verison_hash: str = betterproto.string_field(1765)
    adjust_tracking_info: "AdjustTrackingInfo" = betterproto.message_field(442)
    account_type: int = betterproto.uint32_field(7)
    psn_id: str = betterproto.string_field(1568)
    tag: int = betterproto.uint32_field(1223)
    unk3300_pmgfbmjnncl: int = betterproto.uint32_field(1394)
    system_version: str = betterproto.string_field(3)
    is_guest: bool = betterproto.bool_field(10)
    client_version: str = betterproto.string_field(11)
    is_transfer: bool = betterproto.bool_field(2037)
    environment_error_code: bytes = betterproto.bytes_field(1015)
    device_name: str = betterproto.string_field(1)
    security_library_md5: str = betterproto.string_field(378)
    language_type: int = betterproto.uint32_field(5)
    security_cmd_reply: bytes = betterproto.bytes_field(907)
    security_library_version: str = betterproto.string_field(684)
    client_data_version: int = betterproto.uint32_field(426)
    cps: str = betterproto.string_field(821)


@dataclass(eq=False, repr=False)
class PlayerLoginRsp(betterproto.Message):
    is_audit: bool = betterproto.bool_field(201)
    unk3300_iihdkknjpgd: bool = betterproto.bool_field(6)
    client_md5: str = betterproto.string_field(1070)
    player_data_version: int = betterproto.uint32_field(9)
    client_version_suffix: str = betterproto.string_field(624)
    login_rand: int = betterproto.uint64_field(8)
    feature_block_info_list: List["FeatureBlockInfo"] = betterproto.message_field(2035)
    is_use_ability_hash: bool = betterproto.bool_field(15)
    is_sc_open: bool = betterproto.bool_field(1852)
    player_data: bytes = betterproto.bytes_field(14)
    total_tick_time: float = betterproto.double_field(1769)
    block_info_map: Dict[int, "BlockInfo"] = betterproto.map_field(
        982, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    country_code: str = betterproto.string_field(238)
    res_version_config: "ResVersionConfig" = betterproto.message_field(777)
    client_silence_data_version: int = betterproto.uint32_field(2)
    client_silence_version_suffix: str = betterproto.string_field(935)
    unk3300_ejkcnndfaai: bool = betterproto.bool_field(1254)
    client_silence_md5: str = betterproto.string_field(979)
    is_data_need_relogin: bool = betterproto.bool_field(1021)
    short_ability_hash_map: List["ShortAbilityHashPair"] = betterproto.message_field(
        1199
    )
    target_uid: int = betterproto.uint32_field(3)
    game_biz: str = betterproto.string_field(4)
    is_transfer: bool = betterproto.bool_field(956)
    retcode: int = betterproto.int32_field(1)
    ability_hash_map: Dict[str, int] = betterproto.map_field(
        5, betterproto.TYPE_STRING, betterproto.TYPE_INT32
    )
    unk3300_iadliimgdmc: bool = betterproto.bool_field(1435)
    sc_info: bytes = betterproto.bytes_field(151)
    unk3300_hgfnecijdln: bool = betterproto.bool_field(10)
    client_data_version: int = betterproto.uint32_field(7)
    target_home_owner_uid: int = betterproto.uint32_field(787)
    register_cps: str = betterproto.string_field(552)
    birthday: str = betterproto.string_field(163)
    next_res_version_config: "ResVersionConfig" = betterproto.message_field(1331)
    ability_hash_code: int = betterproto.int32_field(13)
    next_resource_url: str = betterproto.string_field(1095)


@dataclass(eq=False, repr=False)
class PlayerLogoutNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class PlayerLogoutReq(betterproto.Message):
    reason: "Reason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class PlayerLogoutRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class PlayerLuaShellNotify(betterproto.Message):
    lua_shell: bytes = betterproto.bytes_field(5)
    use_type: int = betterproto.uint32_field(8)
    shell_type: "LuaShellType" = betterproto.enum_field(7)
    id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlayerMatchAgreedResultNotify(betterproto.Message):
    reason: "Reason" = betterproto.enum_field(5)
    match_type: "MatchType" = betterproto.enum_field(12)
    target_uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlayerMatchInfoNotify(betterproto.Message):
    host_uid: int = betterproto.uint32_field(1)
    estimate_match_cost_time: int = betterproto.uint32_field(13)
    mechanicus_difficult_level: int = betterproto.uint32_field(2)
    match_param_list: List[int] = betterproto.uint32_field(10)
    match_begin_time: int = betterproto.uint32_field(14)
    mp_play_id: int = betterproto.uint32_field(6)
    match_type: "MatchType" = betterproto.enum_field(5)
    match_id: int = betterproto.uint32_field(8)
    dungeon_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlayerMatchStopNotify(betterproto.Message):
    host_uid: int = betterproto.uint32_field(4)
    reason: "MatchReason" = betterproto.enum_field(9)


@dataclass(eq=False, repr=False)
class PlayerMatchSuccNotify(betterproto.Message):
    general_match_info: "GeneralMatchInfo" = betterproto.message_field(10)
    mechanicus_difficult_level: int = betterproto.uint32_field(7)
    host_uid: int = betterproto.uint32_field(5)
    dungeon_id: int = betterproto.uint32_field(8)
    confirm_end_time: int = betterproto.uint32_field(9)
    mp_play_id: int = betterproto.uint32_field(14)
    match_type: "MatchType" = betterproto.enum_field(12)
    gcg_match_info: "GcgMatchInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PlayerNicknameAuditDataNotify(betterproto.Message):
    nickname: str = betterproto.string_field(11)


@dataclass(eq=False, repr=False)
class PlayerNicknameNotify(betterproto.Message):
    submit_limit: int = betterproto.uint32_field(7)
    is_open: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class PlayerOfferingData(betterproto.Message):
    is_new_max_level: bool = betterproto.bool_field(11)
    offering_id: int = betterproto.uint32_field(8)
    is_first_interact: bool = betterproto.bool_field(4)
    taken_level_reward_list: List[int] = betterproto.uint32_field(7)
    level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerOfferingDataNotify(betterproto.Message):
    offering_data_list: List["PlayerOfferingData"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class PlayerOfferingReq(betterproto.Message):
    offering_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PlayerOfferingRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    offering_data: "PlayerOfferingData" = betterproto.message_field(15)
    item_list: List["ItemParam"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class PlayerPreEnterMpNotify(betterproto.Message):
    state: "State" = betterproto.enum_field(7)
    uid: int = betterproto.uint32_field(10)
    nickname: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class PlayerPropChangeNotify(betterproto.Message):
    prop_delta: int = betterproto.uint32_field(8)
    prop_type: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlayerPropChangeReasonNotify(betterproto.Message):
    prop_type: int = betterproto.uint32_field(6)
    old_value: float = betterproto.float_field(12)
    cur_value: float = betterproto.float_field(9)
    reason: "PropChangeReason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class PlayerPropNotify(betterproto.Message):
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class PlayerQuitDungeonReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(6)
    is_quit_immediately: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class PlayerQuitDungeonRsp(betterproto.Message):
    point_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class PlayerQuitFromHomeNotify(betterproto.Message):
    reason: "QuitReason" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class PlayerQuitFromMpNotify(betterproto.Message):
    reason: "QuitReason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class PlayerRandomCookReq(betterproto.Message):
    material_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerRandomCookRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class PlayerRechargeDataNotify(betterproto.Message):
    card_product_remain_days: int = betterproto.uint32_field(14)
    product_price_tier_list: List["ProductPriceTier"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class PlayerReportReq(betterproto.Message):
    content: str = betterproto.string_field(10)
    reason: "ReportReasonType" = betterproto.enum_field(8)
    target_uid: int = betterproto.uint32_field(6)
    target_home_module_id: int = betterproto.uint32_field(12)
    target_home_module_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class PlayerReportRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    cd_time: int = betterproto.uint32_field(13)
    target_uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerRoutineDataNotify(betterproto.Message):
    routine_info_list: List["PlayerRoutineInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class PlayerRoutineInfo(betterproto.Message):
    routine_type: int = betterproto.uint32_field(2)
    finished_num: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PlayerRttInfo(betterproto.Message):
    rtt: int = betterproto.uint32_field(7)
    uid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PlayerSetLanguageReq(betterproto.Message):
    language_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerSetLanguageRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class PlayerSetOnlyMpWithPsPlayerReq(betterproto.Message):
    is_only: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class PlayerSetOnlyMpWithPsPlayerRsp(betterproto.Message):
    is_only: bool = betterproto.bool_field(10)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class PlayerSetPauseReq(betterproto.Message):
    is_paused: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class PlayerSetPauseRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class PlayerSignatureAuditDataNotify(betterproto.Message):
    info: "ContentAuditInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PlayerSignatureNotify(betterproto.Message):
    signature: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class PlayerStartMatchReq(betterproto.Message):
    mechanicus_difficult_level: int = betterproto.uint32_field(10)
    match_param_list: List[int] = betterproto.uint32_field(15)
    mp_play_id: int = betterproto.uint32_field(5)
    dungeon_id: int = betterproto.uint32_field(12)
    match_id: int = betterproto.uint32_field(11)
    match_type: "MatchType" = betterproto.enum_field(13)


@dataclass(eq=False, repr=False)
class PlayerStartMatchRsp(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(7)
    dungeon_id: int = betterproto.uint32_field(3)
    punish_end_time: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(6)
    param: int = betterproto.uint32_field(5)
    match_id: int = betterproto.uint32_field(2)
    mp_play_id: int = betterproto.uint32_field(9)
    mechanicus_difficult_level: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlayerStoreNotify(betterproto.Message):
    item_list: List["Item"] = betterproto.message_field(5)
    weight_limit: int = betterproto.uint32_field(6)
    store_type: "StoreType" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class PlayerTimeNotify(betterproto.Message):
    player_time: int = betterproto.uint64_field(13)
    server_time: int = betterproto.uint64_field(15)
    is_paused: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class PlayerWidgetInfo(betterproto.Message):
    slot_list: List["WidgetSlotData"] = betterproto.message_field(15)
    uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class PlayerWorldLocationInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(4)
    player_loc: "PlayerLocationInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerWorldSceneInfo(betterproto.Message):
    scene_tag_id_list: List[int] = betterproto.uint32_field(13)
    is_locked: bool = betterproto.bool_field(5)
    scene_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class PlayerWorldSceneInfoListNotify(betterproto.Message):
    info_list: List["PlayerWorldSceneInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PlayProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayTeamEntityInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    player_uid: int = betterproto.uint32_field(2)
    authority_peer_id: int = betterproto.uint32_field(3)
    gadget_config_id: int = betterproto.uint32_field(5)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class Pldkichaheb(betterproto.Message):
    create_time: str = betterproto.string_field(1)
    value: "Hpakaieakfi" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Plnhndnpflg(betterproto.Message):
    pos: "Vector" = betterproto.message_field(8)
    rot: "Vector" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class Pmbhginmkbk(betterproto.Message):
    lahjfbdcfko: float = betterproto.float_field(1)


@dataclass(eq=False, repr=False)
class Pmbpgkeonag(betterproto.Message):
    aapdkabicbn: "Vector" = betterproto.message_field(10)
    damage: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class Poededpkgph(betterproto.Message):
    blnaldeiekj: List["Mgkfockhahi"] = betterproto.message_field(1)
    create_time: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class Pohlfognpii(betterproto.Message):
    ilkmhdhocho: "Nndiacogjbl" = betterproto.enum_field(1)
    nihndjkngei: bool = betterproto.bool_field(2)
    fmbboaeleok: "Mpmjbkdblne" = betterproto.enum_field(6)
    jfbkdomplkl: bool = betterproto.bool_field(5)
    aicefchaici: bool = betterproto.bool_field(3)
    ibllmkacilh: bool = betterproto.bool_field(10)
    kcllbppiboo: List["Idoelhbancp"] = betterproto.message_field(999)


@dataclass(eq=False, repr=False)
class PolygonRegionSize(betterproto.Message):
    height: float = betterproto.float_field(13)
    point_list: List["VectorPlane"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class PolygonSize(betterproto.Message):
    height: float = betterproto.float_field(13)
    point_list: List["VectorPlane"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class PostEnterSceneReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PostEnterSceneRsp(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class PotionActivityDetailInfo(betterproto.Message):
    stage_list: List["PotionStageData"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class PotionAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint64_field(10)
    is_trial: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class PotionDungeonAvatar(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(13)
    is_trial: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class PotionDungeonResultInfo(betterproto.Message):
    mode_id: int = betterproto.uint32_field(12)
    difficulty_level: int = betterproto.uint32_field(1)
    left_time: int = betterproto.uint32_field(6)
    level_id: int = betterproto.uint32_field(2)
    final_score: int = betterproto.uint32_field(10)
    stage_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PotionEnterDungeonNotify(betterproto.Message):
    difficulty_level: int = betterproto.uint32_field(5)
    stage_id: int = betterproto.uint32_field(8)
    dungeon_avatar_list: List["PotionDungeonAvatar"] = betterproto.message_field(1)
    level_id: int = betterproto.uint32_field(14)
    mode_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PotionEnterDungeonReq(betterproto.Message):
    mode_id: int = betterproto.uint32_field(14)
    avatar_info_list: List["PotionAvatarInfo"] = betterproto.message_field(8)
    level_id: int = betterproto.uint32_field(6)
    buff_id_list: List[int] = betterproto.uint32_field(11)
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PotionEnterDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class PotionInfo(betterproto.Message):
    stage_list: List["PotionStageData"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class PotionLevelData(betterproto.Message):
    score: int = betterproto.uint32_field(12)
    level_id: int = betterproto.uint32_field(6)
    difficulty_level: int = betterproto.uint32_field(10)
    mode_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class PotionResetChallengeReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PotionResetChallengeRsp(betterproto.Message):
    stage_data: "PotionStageData" = betterproto.message_field(7)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class PotionRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PotionRestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class PotionSaveDungeonResultReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(14)
    level_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PotionSaveDungeonResultRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class PotionStageData(betterproto.Message):
    unk3300_nlmepppmcki: List[int] = betterproto.uint32_field(9)
    stage_id: int = betterproto.uint32_field(14)
    unk3300_bmehjhfcpma: List[int] = betterproto.uint32_field(12)
    level_list: List["PotionLevelData"] = betterproto.message_field(1)
    is_open: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class Pplpkpfhken(betterproto.Message):
    himcohkddah: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PrivateChatNotify(betterproto.Message):
    chat_info: "ChatInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class PrivateChatReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(11)
    text: str = betterproto.string_field(15, group="content")
    icon: int = betterproto.uint32_field(9, group="content")


@dataclass(eq=False, repr=False)
class PrivateChatRsp(betterproto.Message):
    chat_forbidden_endtime: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class ProductPriceTier(betterproto.Message):
    product_id: str = betterproto.string_field(10)
    price_tier: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class ProfilePicture(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    costume_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ProfilePictureChangeNotify(betterproto.Message):
    profile_picture: "ProfilePicture" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ProjectorOptionReq(betterproto.Message):
    op_type: int = betterproto.uint32_field(15)
    entity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ProjectorOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    entity_id: int = betterproto.uint32_field(10)
    op_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PropPair(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    prop_value: "PropValue" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PropValue(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    ival: int = betterproto.int64_field(2, group="value")
    fval: float = betterproto.float_field(3, group="value")
    val: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class ProudSkillChangeNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(14)
    avatar_guid: int = betterproto.uint64_field(6)
    proud_skill_list: List[int] = betterproto.uint32_field(10)
    skill_depot_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ProudSkillExtraLevelNotify(betterproto.Message):
    talent_index: int = betterproto.uint32_field(4)
    avatar_guid: int = betterproto.uint64_field(2)
    talent_type: int = betterproto.uint32_field(5)
    extra_level: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ProudSkillUpgradeReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(2)
    proud_skill_id: int = betterproto.uint32_field(8)
    old_proud_skill_level: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ProudSkillUpgradeRsp(betterproto.Message):
    proud_skill_id: int = betterproto.uint32_field(8)
    avatar_guid: int = betterproto.uint64_field(11)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class PsnBlackListNotify(betterproto.Message):
    psn_blacklist: List["FriendBrief"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class PsnFriendListNotify(betterproto.Message):
    psn_friend_list: List["FriendBrief"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class PsPlayerApplyEnterMpReq(betterproto.Message):
    target_psn_id: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class PsPlayerApplyEnterMpRsp(betterproto.Message):
    param: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(2)
    target_psn_id: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class PublishCustomDungeonReq(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(10)
    tag_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PublishCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class PublishUgcReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(9)
    ugc_guid: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class PublishUgcRsp(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(8)
    retcode: int = betterproto.int32_field(14)
    ugc_guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class PullPrivateChatReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    from_sequence: int = betterproto.uint32_field(4)
    pull_num: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PullPrivateChatRsp(betterproto.Message):
    chat_info: List["ChatInfo"] = betterproto.message_field(9)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class PullRecentChatReq(betterproto.Message):
    begin_sequence: int = betterproto.uint32_field(14)
    pull_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PullRecentChatRsp(betterproto.Message):
    chat_info: List["ChatInfo"] = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class PushTipsAllDataNotify(betterproto.Message):
    push_tips_list: List["PushTipsData"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class PushTipsChangeNotify(betterproto.Message):
    push_tips_list: List["PushTipsData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PushTipsData(betterproto.Message):
    push_tips_id: int = betterproto.uint32_field(13)
    state: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PushTipsReadFinishReq(betterproto.Message):
    push_tips_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PushTipsReadFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    push_tips_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PveIntentionChange(betterproto.Message):
    change_type: "GcgIntentionChangeType" = betterproto.enum_field(6)
    change_intention_list: List["GcgMsgPveIntention"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PveIntentionInfo(betterproto.Message):
    intention_map: Dict[int, "GcgMsgPveIntention"] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class QueryCodexMonsterBeKilledNumReq(betterproto.Message):
    codex_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QueryCodexMonsterBeKilledNumRsp(betterproto.Message):
    be_killed_num_list: List[int] = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(6)
    codex_id_list: List[int] = betterproto.uint32_field(4)
    be_captured_num_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class QueryCurrRegionHttpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    msg: str = betterproto.string_field(2)
    region_info: "RegionInfo" = betterproto.message_field(3)
    force_udpate: "ForceUdpate" = betterproto.message_field(4, group="detail")
    stop_server: "StopServer" = betterproto.message_field(5, group="detail")
    client_secret_key: bytes = betterproto.bytes_field(11)
    region_custom_config_encrypted: bytes = betterproto.bytes_field(12)
    client_region_custom_config_encrypted: bytes = betterproto.bytes_field(13)


@dataclass(eq=False, repr=False)
class QueryFilter(betterproto.Message):
    area_mask: int = betterproto.int32_field(9)
    type_id: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class QueryPathReq(betterproto.Message):
    query_id: int = betterproto.int32_field(13)
    destination_pos: List["Vector"] = betterproto.message_field(4)
    unk3300_lhngpjfomik: "Vector3Int" = betterproto.message_field(5)
    query_type: "OptionType" = betterproto.enum_field(12)
    filter: "QueryFilter" = betterproto.message_field(2)
    unk3300_clgjbbjdoln: "Vector3Int" = betterproto.message_field(15)
    scene_id: int = betterproto.uint32_field(7)
    source_pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class QueryPathRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    corners: List["Vector"] = betterproto.message_field(11)
    query_status: "QueryPathRspPathStatusType" = betterproto.enum_field(6)
    query_id: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class Quest(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    start_time: int = betterproto.uint32_field(4)
    is_random: bool = betterproto.bool_field(5)
    parent_quest_id: int = betterproto.uint32_field(6)
    quest_config_id: int = betterproto.uint32_field(7)
    start_game_time: int = betterproto.uint32_field(8)
    accept_time: int = betterproto.uint32_field(9)
    lacked_npc_list: List[int] = betterproto.uint32_field(10)
    finish_progress_list: List[int] = betterproto.uint32_field(11)
    fail_progress_list: List[int] = betterproto.uint32_field(12)
    lacked_npc_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    lacked_place_list: List[int] = betterproto.uint32_field(14)
    lacked_place_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class QuestCreateEntityReq(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(4)
    is_rewind: bool = betterproto.bool_field(12)
    entity: "CreateEntityInfo" = betterproto.message_field(11)
    quest_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class QuestCreateEntityRsp(betterproto.Message):
    is_rewind: bool = betterproto.bool_field(14)
    parent_quest_id: int = betterproto.uint32_field(7)
    entity: "CreateEntityInfo" = betterproto.message_field(12)
    entity_id: int = betterproto.uint32_field(6)
    quest_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class QuestDelNotify(betterproto.Message):
    quest_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class QuestDestroyEntityReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(10)
    quest_id: int = betterproto.uint32_field(12)
    scene_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class QuestDestroyEntityRsp(betterproto.Message):
    entity_id: int = betterproto.uint32_field(9)
    scene_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(8)
    quest_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class QuestDestroyNpcReq(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(4)
    npc_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class QuestDestroyNpcRsp(betterproto.Message):
    npc_id: int = betterproto.uint32_field(4)
    parent_quest_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class QuestGlobalVar(betterproto.Message):
    value: int = betterproto.int32_field(14)
    key: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class QuestGlobalVarNotify(betterproto.Message):
    var_list: List["QuestGlobalVar"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class QuestListNotify(betterproto.Message):
    quest_list: List["Quest"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class QuestListUpdateNotify(betterproto.Message):
    quest_list: List["Quest"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class QuestProgressUpdateNotify(betterproto.Message):
    quest_id: int = betterproto.uint32_field(9)
    fail_progress_list: List[int] = betterproto.uint32_field(11)
    finish_progress_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QuestRenameAvatarReq(betterproto.Message):
    is_check: bool = betterproto.bool_field(6)
    rename_id: int = betterproto.uint32_field(9)
    avatar_name: str = betterproto.string_field(11)


@dataclass(eq=False, repr=False)
class QuestRenameAvatarRsp(betterproto.Message):
    avatar_name: str = betterproto.string_field(15)
    is_check: bool = betterproto.bool_field(2)
    rename_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class QuestTransmitReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(10)
    point_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuestTransmitRsp(betterproto.Message):
    point_id: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(7)
    quest_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestTimeVarNotify(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(5)
    time_var_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarNotify(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(11)
    parent_quest_var_seq: int = betterproto.uint32_field(14)
    quest_var: List[int] = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarReq(betterproto.Message):
    parent_quest_var_seq: int = betterproto.uint32_field(9)
    parent_quest_id: int = betterproto.uint32_field(12)
    quest_var_op_list: List["QuestVarOp"] = betterproto.message_field(4)
    quest_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    parent_quest_var_seq: int = betterproto.uint32_field(15)
    parent_quest_id: int = betterproto.uint32_field(4)
    quest_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class QuestVarOp(betterproto.Message):
    index: int = betterproto.uint32_field(14)
    value: int = betterproto.int32_field(6)
    is_add: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class QuickOpenActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class QuickOpenActivityRsp(betterproto.Message):
    activity_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class QuickUseWidgetReq(betterproto.Message):
    location_info: "LocationInfo" = betterproto.message_field(1542, group="param")
    camera_info: "CameraInfo" = betterproto.message_field(1754, group="param")
    creator_info: "CreatorInfo" = betterproto.message_field(825, group="param")
    thunder_bird_feather_info: "ThunderBirdFeatherInfo" = betterproto.message_field(
        1365, group="param"
    )


@dataclass(eq=False, repr=False)
class QuickUseWidgetRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    material_id: int = betterproto.uint32_field(6)
    detector_data: "DetectorData" = betterproto.message_field(1, group="param")
    client_collector_data: "ClientCollectorData" = betterproto.message_field(
        7, group="param"
    )
    sky_crystal_detector_quick_use_result: "SkyCrystalDetectorQuickUseResult" = (
        betterproto.message_field(139827, group="param")
    )


@dataclass(eq=False, repr=False)
class RacingGalleryInfo(betterproto.Message):
    record_list: List["HomeRacingGalleryRecord"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RacingGallerySettleInfo(betterproto.Message):
    use_time: int = betterproto.uint32_field(9)
    reason: "GalleryStopReason" = betterproto.enum_field(3)
    winner_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ReactionBegin(betterproto.Message):
    skill_id: int = betterproto.uint32_field(8)
    card_guid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReactionEnd(betterproto.Message):
    skill_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ReadMailNotify(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ReadNicknameAuditReq(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ReadNicknameAuditRsp(betterproto.Message):
    mbbjhalknla: int = betterproto.uint32_field(13)
    fdabeplffil: bool = betterproto.bool_field(8)
    nnnnclfpean: int = betterproto.uint32_field(9)
    ejkmamgnbgj: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReadPrivateChatReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ReadPrivateChatRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class ReadSignatureAuditReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReadSignatureAuditRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class ReceivedTrialAvatarActivityRewardReq(betterproto.Message):
    trial_avatar_index_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReceivedTrialAvatarActivityRewardRsp(betterproto.Message):
    activity_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(5)
    trial_avatar_index_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RechargeReq(betterproto.Message):
    mcoin_product: "ShopMcoinProduct" = betterproto.message_field(11)
    card_product: "ShopCardProduct" = betterproto.message_field(5)
    play_product: "PlayProduct" = betterproto.message_field(6)
    concert_product: "ShopConcertProduct" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RechargeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    product_id: str = betterproto.string_field(11)
    is_show_minors_hint: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class RedeemLegendaryKeyReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RedeemLegendaryKeyRsp(betterproto.Message):
    legendary_key_count: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class RedPointData(betterproto.Message):
    red_point_type: int = betterproto.uint32_field(1)
    is_show: bool = betterproto.bool_field(2)
    content_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReformFireworksReq(betterproto.Message):
    fireworks_reform_data: "FireworksReformData" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ReformFireworksRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class RefreshBackgroundAvatarReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RefreshBackgroundAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    hp_full_time_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT64, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class RefreshEntityAuthNotify(betterproto.Message):
    entity_id_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class RefreshRogueDiaryCardReq(betterproto.Message):
    refresh_card_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RefreshRogueDiaryCardRsp(betterproto.Message):
    rand_card_list: List[int] = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class RefreshRoguelikeDungeonCardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RefreshRoguelikeDungeonCardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    res_card_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class RegionalPlayInfoNotify(betterproto.Message):
    play_name: str = betterproto.string_field(8)
    var_list: List["RegionalPlayVar"] = betterproto.message_field(11)
    play_type: int = betterproto.uint32_field(14)
    is_enabled: bool = betterproto.bool_field(2)
    is_in_region: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class RegionalPlayVar(betterproto.Message):
    base_value: float = betterproto.float_field(4)
    max_value: float = betterproto.float_field(15)
    type: int = betterproto.uint32_field(8)
    value: float = betterproto.float_field(12)


@dataclass(eq=False, repr=False)
class RegionInfo(betterproto.Message):
    gateserver_ip: str = betterproto.string_field(1)
    gateserver_port: int = betterproto.uint32_field(2)
    pay_callback_url: str = betterproto.string_field(3)
    area_type: str = betterproto.string_field(7)
    resource_url: str = betterproto.string_field(8)
    data_url: str = betterproto.string_field(9)
    feedback_url: str = betterproto.string_field(10)
    bulletin_url: str = betterproto.string_field(11)
    resource_url_bak: str = betterproto.string_field(12)
    data_url_bak: str = betterproto.string_field(13)
    client_data_version: int = betterproto.uint32_field(14)
    handbook_url: str = betterproto.string_field(16)
    client_silence_data_version: int = betterproto.uint32_field(18)
    client_data_md5: str = betterproto.string_field(19)
    client_silence_data_md5: str = betterproto.string_field(20)
    res_version_config: "ResVersionConfig" = betterproto.message_field(22)
    secret_key: bytes = betterproto.bytes_field(23)
    official_community_url: str = betterproto.string_field(24)
    client_version_suffix: str = betterproto.string_field(26)
    client_silence_version_suffix: str = betterproto.string_field(27)
    use_gateserver_domain_name: bool = betterproto.bool_field(28)
    gateserver_domain_name: str = betterproto.string_field(29)
    user_center_url: str = betterproto.string_field(30)
    account_bind_url: str = betterproto.string_field(31)
    cdkey_url: str = betterproto.string_field(32)
    privacy_policy_url: str = betterproto.string_field(33)
    next_resource_url: str = betterproto.string_field(34)
    next_res_version_config: "ResVersionConfig" = betterproto.message_field(35)
    game_biz: str = betterproto.string_field(36)


@dataclass(eq=False, repr=False)
class RegionSearch(betterproto.Message):
    region_search_id: int = betterproto.uint32_field(1)
    state: "RegionSearchState" = betterproto.enum_field(15)
    is_entered: bool = betterproto.bool_field(6)
    progress: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class RegionSearchChangeRegionNotify(betterproto.Message):
    region_id: int = betterproto.uint32_field(8)
    event: "RegionEvent" = betterproto.enum_field(12)


@dataclass(eq=False, repr=False)
class RegionSearchInfo(betterproto.Message):
    id: int = betterproto.uint32_field(7)
    region_search_list: List["RegionSearch"] = betterproto.message_field(4)
    is_entered: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class RegionSearchNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    region_search_list: List["RegionSearchInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class Reliquary(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    promote_level: int = betterproto.uint32_field(3)
    main_prop_id: int = betterproto.uint32_field(4)
    append_prop_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ReliquaryDecomposeReq(betterproto.Message):
    target_count: int = betterproto.uint32_field(5)
    config_id: int = betterproto.uint32_field(13)
    guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ReliquaryDecomposeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    guid_list: List[int] = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class ReliquaryFilterStateNotify(betterproto.Message):
    reliquary_filter_state_map: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ReliquaryFilterStateSaveNotify(betterproto.Message):
    reliquary_filter_state_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ReliquaryPromoteReq(betterproto.Message):
    item_guid: int = betterproto.uint64_field(10)
    target_guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class ReliquaryPromoteRsp(betterproto.Message):
    cur_append_prop_list: List[int] = betterproto.uint32_field(12)
    target_reliquary_guid: int = betterproto.uint64_field(2)
    retcode: int = betterproto.int32_field(6)
    old_append_prop_list: List[int] = betterproto.uint32_field(11)
    old_promote_level: int = betterproto.uint32_field(7)
    cur_promote_level: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ReliquaryRequest(betterproto.Message):
    equip_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ReliquaryResponse(betterproto.Message):
    nbbpegfkpac: List[
        "GameplayRecommendationReliquaryMainPropData"
    ] = betterproto.message_field(12)
    equip_type: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ReliquaryUpgradeReq(betterproto.Message):
    food_reliquary_guid_list: List[int] = betterproto.uint64_field(13)
    target_reliquary_guid: int = betterproto.uint64_field(14)
    item_param_list: List["ItemParam"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ReliquaryUpgradeRsp(betterproto.Message):
    old_append_prop_list: List[int] = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(8)
    power_up_rate: int = betterproto.uint32_field(9)
    target_reliquary_guid: int = betterproto.uint64_field(12)
    cur_append_prop_list: List[int] = betterproto.uint32_field(4)
    old_level: int = betterproto.uint32_field(15)
    cur_level: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class RemotePlayerWidgetNotify(betterproto.Message):
    player_widget_info_list: List["PlayerWidgetInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class RemoveBlacklistReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class RemoveBlacklistRsp(betterproto.Message):
    target_uid: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RemoveCards(betterproto.Message):
    card_guid_list: List[int] = betterproto.uint32_field(14)
    zone: "GcgZoneType" = betterproto.enum_field(9)
    controller_id: int = betterproto.uint32_field(4)
    reason: "GcgReason" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class RemoveCustomDungeonReq(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class RemoveCustomDungeonRsp(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(9)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class RemoveRandTaskInfoNotify(betterproto.Message):
    rand_task_id: int = betterproto.uint32_field(9)
    is_succ: bool = betterproto.bool_field(7)
    reason: "FinishReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class ReplayCustomDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReplayCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class ReportFightAntiCheatNotify(betterproto.Message):
    unk3300_abckmppmnch: int = betterproto.uint32_field(12)
    unk3300_mifnaaadbbp: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ReportTrackingIoInfoNotify(betterproto.Message):
    unk3300_cnpigdoejpb: str = betterproto.string_field(5)
    rydevicetype: str = betterproto.string_field(8)
    unk3300_djhkhefpcdk: str = betterproto.string_field(3)
    client_tz: str = betterproto.string_field(2)
    unk3300_pibfpdamjle: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class RequestLiveInfoReq(betterproto.Message):
    live_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class RequestLiveInfoRsp(betterproto.Message):
    unk3300_dnggioiklhc: str = betterproto.string_field(3)
    retcode: int = betterproto.int32_field(15)
    live_id: int = betterproto.uint32_field(11)
    unk3300_bdogcpkplok: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ReserveRogueDiaryAvatarReq(betterproto.Message):
    reserve_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ReserveRogueDiaryAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class ResetRogueDiaryPlayReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ResetRogueDiaryPlayRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class ResinCardData(betterproto.Message):
    config_id: int = betterproto.uint32_field(14)
    remain_reward_days: int = betterproto.uint32_field(10)
    expire_time: int = betterproto.uint32_field(5)
    last_daily_reward_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ResinCardDataUpdateNotify(betterproto.Message):
    today_start_time: int = betterproto.uint32_field(15)
    card_data_list: List["ResinCardData"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class ResinChangeNotify(betterproto.Message):
    cur_value: int = betterproto.uint32_field(12)
    next_add_timestamp: int = betterproto.uint32_field(4)
    cur_buy_count: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class RestartCoinCollectPlaySingleModeReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(13)
    multistage_play_index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RestartCoinCollectPlaySingleModeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    level_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class RestartEffigyChallengeReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RestartEffigyChallengeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class ResumeRogueDiaryDungeonReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ResumeRogueDiaryDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class ResVersionConfig(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    relogin: bool = betterproto.bool_field(2)
    md5: str = betterproto.string_field(3)
    release_total_size: str = betterproto.string_field(4)
    version_suffix: str = betterproto.string_field(5)
    branch: str = betterproto.string_field(6)
    next_script_version: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class RetryCurRogueDiaryDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RetryCurRogueDiaryDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class ReunionActivateNotify(betterproto.Message):
    reunion_brief_info: "ReunionBriefInfo" = betterproto.message_field(7)
    is_activate: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ReunionBriefInfo(betterproto.Message):
    privilege_id: int = betterproto.uint32_field(15)
    finish_time: int = betterproto.uint32_field(5)
    mission_id: int = betterproto.uint32_field(11)
    unk3300_odklpomkkpd: bool = betterproto.bool_field(14)
    privilege_info: "ReunionPrivilegeInfo" = betterproto.message_field(8)
    unk3300_mhhlejiffim: bool = betterproto.bool_field(13)
    version: str = betterproto.string_field(7)
    first_gift_reward_id: int = betterproto.uint32_field(9)
    first_day_start_time: int = betterproto.uint32_field(1)
    start_time: int = betterproto.uint32_field(10)
    sign_in_config_id: int = betterproto.uint32_field(6)
    unk3300_okgaaedenei: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ReunionBriefInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReunionBriefInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    is_activate: bool = betterproto.bool_field(11)
    reunion_brief_info: "ReunionBriefInfo" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ReunionDailyRefreshNotify(betterproto.Message):
    reunion_brief_info: "ReunionBriefInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ReunionMissionInfo(betterproto.Message):
    mission_id: int = betterproto.uint32_field(7)
    is_taken_reward_list: List[bool] = betterproto.bool_field(15)
    is_taken_reward: bool = betterproto.bool_field(3)
    cur_score: int = betterproto.uint32_field(4)
    is_finished: bool = betterproto.bool_field(2)
    watcher_list: List["ReunionWatcherInfo"] = betterproto.message_field(13)
    cur_day_watcher_list: List["ReunionWatcherInfo"] = betterproto.message_field(1)
    next_refresh_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ReunionPrivilegeChangeNotify(betterproto.Message):
    privilege_info: "ReunionPrivilegeInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ReunionPrivilegeInfo(betterproto.Message):
    unk3300_alolacfgmhi: int = betterproto.uint32_field(7)
    privilege_id: int = betterproto.uint32_field(12)
    unk3300_gjbeafpmfaa: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ReunionSettleNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReunionSignInInfo(betterproto.Message):
    unk3300_nfnokbnblge: int = betterproto.uint32_field(9)
    config_id: int = betterproto.uint32_field(13)
    reward_day_list: List[int] = betterproto.uint32_field(5)
    unk3300_mnjelidkmcf: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ReunionWatcherInfo(betterproto.Message):
    reward_unlock_time: int = betterproto.uint32_field(7)
    cur_progress: int = betterproto.uint32_field(11)
    watcher_id: int = betterproto.uint32_field(12)
    total_progress: int = betterproto.uint32_field(10)
    is_taken_reward: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class Reward(betterproto.Message):
    reward_id: int = betterproto.uint32_field(1)
    item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RobotPushPlayerDataNotify(betterproto.Message):
    bin: bytes = betterproto.bytes_field(6)


@dataclass(eq=False, repr=False)
class RockBoardExploreInfo(betterproto.Message):
    stage_data_list: List["RockBoardExploreStageData"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class RockBoardExploreStageData(betterproto.Message):
    is_finish: bool = betterproto.bool_field(1)
    stage_id: int = betterproto.uint32_field(9)
    is_open: bool = betterproto.bool_field(6)
    open_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class RogueAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(15)
    is_alive: bool = betterproto.bool_field(5)
    egkmacmbgbe: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class RogueCellInfo(betterproto.Message):
    cell_config_id: int = betterproto.uint32_field(8)
    state: "RogueCellState" = betterproto.enum_field(2)
    cell_id: int = betterproto.uint32_field(4)
    cell_type: int = betterproto.uint32_field(3)
    dungeon_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RogueCellUpdateNotify(betterproto.Message):
    cell_info: "RogueCellInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class RogueDiaryAvatar(betterproto.Message):
    disable_status_list: List["RogueDiaryAvatarDisableStatus"] = betterproto.enum_field(
        4
    )
    level: int = betterproto.uint32_field(2)
    tired_round: int = betterproto.uint32_field(9)
    avatar: "ActivityDungeonAvatar" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class RogueDiaryCoinAddNotify(betterproto.Message):
    num: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class RogueDiaryDungeonInfoNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(6)
    unk3300_mmbejgdfcge: List[int] = betterproto.uint32_field(13)
    time: int = betterproto.uint32_field(7)
    cur_round: int = betterproto.uint32_field(12)
    coin: int = betterproto.uint32_field(14)
    unk3300_dkcfglakpjl: List[int] = betterproto.uint32_field(11)
    difficulty: int = betterproto.uint32_field(4)
    room_list: List["RogueDiaryRoomInfo"] = betterproto.message_field(5)
    dungeon_id: int = betterproto.uint32_field(15)
    cur_room: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RogueDiaryDungeonRecord(betterproto.Message):
    finish_time: int = betterproto.uint32_field(9)
    max_round: int = betterproto.uint32_field(12)
    is_finish: bool = betterproto.bool_field(7)
    difficulty: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class RogueDiaryDungeonSettleNotify(betterproto.Message):
    is_finish: bool = betterproto.bool_field(2)
    explore_time: int = betterproto.uint32_field(3)
    cur_round: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class RogueDiaryInfo(betterproto.Message):
    cur_progress: "RogueDiaryProgress" = betterproto.message_field(5)
    stage_list: List["RogueDiaryStageInfo"] = betterproto.message_field(8)
    left_monsters: bool = betterproto.bool_field(1)
    is_have_progress: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class RogueDiaryProgress(betterproto.Message):
    is_enter_dungeon: bool = betterproto.bool_field(5)
    optional_card_list: List[int] = betterproto.uint32_field(12)
    cur_round: int = betterproto.uint32_field(7)
    stage_id: int = betterproto.uint32_field(3)
    difficulty: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class RogueDiaryRepairInfoNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(10)
    avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(13)
    select_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(7)
    rand_card_list: List[int] = betterproto.uint32_field(12)
    select_card_list: List[int] = betterproto.uint32_field(1)
    chosen_card_list: List[int] = betterproto.uint32_field(8)
    trial_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(3)
    room_list: List["RogueDiaryRoomInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class RogueDiaryReviveAvatarReq(betterproto.Message):
    revive_avatar: "RogueDiaryAvatar" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class RogueDiaryReviveAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class RogueDiaryRoomInfo(betterproto.Message):
    unk3300_eebeocmaikn: List["Uint32Pair"] = betterproto.message_field(8)
    is_boss: bool = betterproto.bool_field(4)
    config_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class RogueDiaryStageInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(3)
    best_record: "RogueDiaryDungeonRecord" = betterproto.message_field(4)
    is_have_try: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class RogueDiaryTiredAvatarNotify(betterproto.Message):
    is_need_show: bool = betterproto.bool_field(12)
    unk3300_bgejglbmfii: int = betterproto.uint32_field(10)
    unk3300_dmembbpeigk: int = betterproto.uint32_field(8)
    optional_tired_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class RogueDungeonPlayerCellChangeNotify(betterproto.Message):
    cell_id: int = betterproto.uint32_field(9)
    old_cell_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RogueEffectRecord(betterproto.Message):
    is_new: bool = betterproto.bool_field(3)
    source_id: int = betterproto.uint32_field(5)
    count: int = betterproto.uint32_field(1)
    extra_param_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class RogueFinishRepairReq(betterproto.Message):
    chosen_card_list: List[int] = betterproto.uint32_field(4)
    chosen_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class RogueFinishRepairRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class RogueHealAvatarsReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(12)
    cell_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class RogueHealAvatarsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    cell_id: int = betterproto.uint32_field(12)
    dungeon_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class RoguelikeCardGachaNotify(betterproto.Message):
    is_can_refresh: bool = betterproto.bool_field(9)
    card_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class RoguelikeDungeonSettleInfo(betterproto.Message):
    unk3300_bplkjmiokhm: bool = betterproto.bool_field(5)
    unk3300_pbelmojkkhp: int = betterproto.uint32_field(11)
    cur_level: int = betterproto.uint32_field(7)
    unk3300_ahieengkpfa: bool = betterproto.bool_field(15)
    stage_id: int = betterproto.uint32_field(10)
    unk3300_gmmecmpdjmi: int = betterproto.uint32_field(13)
    finished_challenge_cell_num_map: Dict[
        int, "RoguelikeSettleCoinInfo"
    ] = betterproto.map_field(2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)


@dataclass(eq=False, repr=False)
class RoguelikeDungoenInfo(betterproto.Message):
    stage_list: List["RogueStageInfo"] = betterproto.message_field(6)
    equipped_rune_list: List[int] = betterproto.uint32_field(12)
    shikigami_list: List["RoguelikeShikigamiRecord"] = betterproto.message_field(1)
    rune_list: List[int] = betterproto.uint32_field(11)
    left_monsters: bool = betterproto.bool_field(10)
    content_close_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class RoguelikeEffectDataNotify(betterproto.Message):
    curse_list: List["RogueEffectRecord"] = betterproto.message_field(11)
    card_list: List["RogueEffectRecord"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RoguelikeEffectViewReq(betterproto.Message):
    unk3300_lmiiaepbknb: List[int] = betterproto.uint32_field(12)
    unk3300_fkgjgijhkji: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class RoguelikeEffectViewRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RoguelikeGadgetInfo(betterproto.Message):
    cell_config_id: int = betterproto.uint32_field(1)
    cell_type: int = betterproto.uint32_field(2)
    cell_state: int = betterproto.uint32_field(3)
    cell_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RoguelikeGiveUpReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class RoguelikeGiveUpRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(14)
    settle_info: "RoguelikeDungeonSettleInfo" = betterproto.message_field(
        2, group="info"
    )


@dataclass(eq=False, repr=False)
class RoguelikeMistClearNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RoguelikeRefreshCardCostUpdateNotify(betterproto.Message):
    item_id: int = betterproto.uint32_field(4)
    item_count: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class RoguelikeResourceBonusPropUpdateNotify(betterproto.Message):
    bonus_resource_prop: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class RoguelikeRuneRecord(betterproto.Message):
    unk3300_jlolmlfaphh: int = betterproto.uint32_field(7)
    unk3300_igbojlppkon: int = betterproto.uint32_field(12)
    rune_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class RoguelikeRuneRecordUpdateNotify(betterproto.Message):
    rune_record_list: List["RoguelikeRuneRecord"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class RoguelikeSelectAvatarAndEnterDungeonReq(betterproto.Message):
    onstage_avatar_guid_list: List[int] = betterproto.uint64_field(5)
    stage_id: int = betterproto.uint32_field(12)
    backstage_avatar_guid_list: List[int] = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class RoguelikeSelectAvatarAndEnterDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    stage_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RoguelikeSettleCoinInfo(betterproto.Message):
    unk3300_mfkoimoncla: int = betterproto.uint32_field(12)
    coin_c: int = betterproto.uint32_field(7)
    unk3300_lfekgbbamhe: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class RoguelikeShikigamiRecord(betterproto.Message):
    id: int = betterproto.uint32_field(8)
    level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RoguelikeTakeStageFirstPassRewardReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class RoguelikeTakeStageFirstPassRewardRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class RogueResumeDungeonReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RogueResumeDungeonRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class RogueShowAvatarTeamInfo(betterproto.Message):
    avatar_list: List["RogueAvatarInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RogueStageInfo(betterproto.Message):
    unk3300_ohhbepoicli: int = betterproto.uint32_field(8)
    rune_record_list: List["RoguelikeRuneRecord"] = betterproto.message_field(3)
    max_passed_level: int = betterproto.uint32_field(4)
    coin_c_num: int = betterproto.uint32_field(14)
    unk3300_gghmfknhpaj: int = betterproto.uint32_field(15)
    revise_monster_level: int = betterproto.uint32_field(520)
    avatar_team: "RogueShowAvatarTeamInfo" = betterproto.message_field(10)
    unk3300_hpkfhllcjbm: int = betterproto.uint32_field(1765)
    is_explored: bool = betterproto.bool_field(12)
    is_passed: bool = betterproto.bool_field(9)
    is_in_combat: bool = betterproto.bool_field(2)
    is_taken_reward: bool = betterproto.bool_field(7)
    stage_id: int = betterproto.uint32_field(13)
    cur_level: int = betterproto.uint32_field(6)
    is_open: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class RogueSwitchAvatarReq(betterproto.Message):
    cur_avatar_guid: int = betterproto.uint64_field(15)
    onstage_avatar_guid_list: List[int] = betterproto.uint64_field(14)
    cell_id: int = betterproto.uint32_field(8)
    dungeon_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RogueSwitchAvatarRsp(betterproto.Message):
    backstage_avatar_guid_list: List[int] = betterproto.uint64_field(2)
    onstage_avatar_guid_list: List[int] = betterproto.uint64_field(13)
    cell_id: int = betterproto.uint32_field(12)
    cur_avatar_guid: int = betterproto.uint64_field(3)
    retcode: int = betterproto.int32_field(15)
    dungeon_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class Route(betterproto.Message):
    route_points: List["RoutePoint"] = betterproto.message_field(1)
    route_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RoutePoint(betterproto.Message):
    position: "Vector" = betterproto.message_field(1)
    arrive_range: float = betterproto.float_field(2)
    has_reach_event: bool = betterproto.bool_field(3)
    velocity: float = betterproto.float_field(11, group="move_params")
    time: float = betterproto.float_field(12, group="move_params")
    vector: "Vector" = betterproto.message_field(21, group="rotate_params")
    rotation_speed: "MathQuaternion" = betterproto.message_field(
        22, group="rotate_params"
    )
    axis_speed: "MathQuaternion" = betterproto.message_field(23, group="rotate_params")


@dataclass(eq=False, repr=False)
class RoutePointChangeInfo(betterproto.Message):
    target_velocity: float = betterproto.float_field(7)
    point_index: int = betterproto.uint32_field(11)
    wait_time: float = betterproto.float_field(15)


@dataclass(eq=False, repr=False)
class SalesmanDeliverItemReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SalesmanDeliverItemRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class SalesmanInfo(betterproto.Message):
    status: "SalesmanStatusType" = betterproto.enum_field(4)
    unk3300_foffaeebbnp: int = betterproto.uint32_field(7)
    unk3300_dijfocbgiam: int = betterproto.uint32_field(6)
    day_index: int = betterproto.uint32_field(8)
    unk3300_jnalbacfnfn: bool = betterproto.bool_field(15)
    selected_reward_id_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    unk3300_knjcbgfklfd: int = betterproto.uint32_field(11)
    unk3300_djfcefkgkpi: bool = betterproto.bool_field(5)
    day_reward_id: int = betterproto.uint32_field(2)
    unk3300_lpabhmopfce: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SalesmanTakeRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(7)
    position: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SalesmanTakeRewardRsp(betterproto.Message):
    reward_id: int = betterproto.uint32_field(14)
    schedule_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(7)
    position: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SalesmanTakeSpecialRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SalesmanTakeSpecialRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    schedule_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SalvageChallengeInfo(betterproto.Message):
    is_unlock: bool = betterproto.bool_field(2)
    challenge_type: int = betterproto.uint32_field(14)
    bundle_info: "BundleInfo" = betterproto.message_field(8, group="challenge_detail")
    score_challenge_info: "ScoreChallengeInfo" = betterproto.message_field(
        5, group="challenge_detail"
    )
    boss_challenge_id: int = betterproto.uint32_field(1, group="challenge_detail")


@dataclass(eq=False, repr=False)
class SalvageEscortGallerySettleInfo(betterproto.Message):
    reason: "SalvageEscortStopReason" = betterproto.enum_field(6)
    time_remain: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SalvageEscortInfo(betterproto.Message):
    unk3300_fgdpfnpennc: int = betterproto.uint32_field(6)
    unk3300_hdmpoajlped: int = betterproto.uint32_field(2)
    max_monster_count: int = betterproto.uint32_field(4)
    monster_count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SalvageEscortRestartReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SalvageEscortRestartRsp(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class SalvageEscortSettleInfo(betterproto.Message):
    settle_info: "SalvageEscortGallerySettleInfo" = betterproto.message_field(8)
    is_new_record: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class SalvageEscortSettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(5)
    settle_info: "SalvageEscortSettleInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SalvagePreventGallerySettleInfo(betterproto.Message):
    time_remain: int = betterproto.uint32_field(10)
    final_score: int = betterproto.uint32_field(6)
    reason: "SalvagePreventStopReason" = betterproto.enum_field(2)
    monster_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SalvagePreventInfo(betterproto.Message):
    monster_count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SalvagePreventRestartReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SalvagePreventRestartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    gallery_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SalvagePreventSettleInfo(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(4)
    settle_info: "SalvagePreventGallerySettleInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class SalvagePreventSettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(5)
    settle_info: "SalvagePreventSettleInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class SalvageScoreChallengeInfo(betterproto.Message):
    oichdaoampp: int = betterproto.uint32_field(13)
    max_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SalvageStageInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(10)
    stage_id: int = betterproto.uint32_field(15)
    exceeded_item_type_list: List["SalvageChallengeInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class SamLampInfo(betterproto.Message):
    days: int = betterproto.uint32_field(11)
    progress: int = betterproto.uint32_field(3)
    factor: int = betterproto.uint32_field(10)
    contribution: int = betterproto.uint32_field(9)
    phase_id: int = betterproto.uint32_field(7)
    unk3300_odbffaiipmb: List[int] = betterproto.uint32_field(14)
    unk3300_fghdjjclnfn: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SaveCoopDialogReq(betterproto.Message):
    unk3300_amkddjepakm: int = betterproto.uint32_field(1)
    unk3300_kmbgniicnaf: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SaveCoopDialogRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    unk3300_kmbgniicnaf: int = betterproto.uint32_field(2)
    unk3300_amkddjepakm: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SaveCustomDungeonRoomReq(betterproto.Message):
    setting: "CustomDungeonSetting" = betterproto.message_field(14)
    custom_dungeon_room: "CustomDungeonRoom" = betterproto.message_field(15)
    is_update_setting: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SaveCustomDungeonRoomRsp(betterproto.Message):
    error_block_list: List["CustomDungeonBlock"] = betterproto.message_field(4)
    retcode: int = betterproto.int32_field(8)
    room_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SaveMainCoopReq(betterproto.Message):
    id: int = betterproto.uint32_field(4)
    normal_var_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    save_point_id: int = betterproto.uint32_field(13)
    temp_var_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    self_confidence: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SaveMainCoopRsp(betterproto.Message):
    save_point_id_list: List[int] = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(10)
    id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SaveUgcReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(1)
    music_record: "MusicRecord" = betterproto.message_field(15, group="record")


@dataclass(eq=False, repr=False)
class SaveUgcRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    ugc_guid: int = betterproto.uint64_field(12)
    ugc_type: "UgcType" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class SceneAreaUnlockNotify(betterproto.Message):
    area_list: List[int] = betterproto.uint32_field(12)
    scene_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SceneAreaWeatherNotify(betterproto.Message):
    climate_type: int = betterproto.uint32_field(10)
    trans_duration: float = betterproto.float_field(5)
    weather_gadget_id: int = betterproto.uint32_field(15)
    weather_value_map: Dict[int, str] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_STRING
    )
    weather_area_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SceneAudioNotify(betterproto.Message):
    type: int = betterproto.int32_field(14)
    param3: List[str] = betterproto.string_field(12)
    param2: List[float] = betterproto.float_field(4)
    source_uid: int = betterproto.uint32_field(5)
    param1: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SceneAvatarInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    peer_id: int = betterproto.uint32_field(4)
    equip_id_list: List[int] = betterproto.uint32_field(5)
    skill_depot_id: int = betterproto.uint32_field(6)
    talent_id_list: List[int] = betterproto.uint32_field(7)
    weapon: "SceneWeaponInfo" = betterproto.message_field(8)
    reliquary_list: List["SceneReliquaryInfo"] = betterproto.message_field(9)
    core_proud_skill_level: int = betterproto.uint32_field(11)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(12)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    server_buff_list: List["ServerBuff"] = betterproto.message_field(15)
    team_resonance_list: List[int] = betterproto.uint32_field(16)
    wearing_flycloak_id: int = betterproto.uint32_field(17)
    born_time: int = betterproto.uint32_field(18)
    costume_id: int = betterproto.uint32_field(19)
    cur_vehicle_info: "CurVehicleInfo" = betterproto.message_field(20)
    excel_info: "AvatarExcelInfo" = betterproto.message_field(21)
    anim_hash: int = betterproto.uint32_field(22)


@dataclass(eq=False, repr=False)
class SceneAvatarStaminaStepReq(betterproto.Message):
    rot: "Vector" = betterproto.message_field(4)
    use_client_rot: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class SceneAvatarStaminaStepRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    use_client_rot: bool = betterproto.bool_field(3)
    rot: "Vector" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class SceneCreateEntityReq(betterproto.Message):
    is_destroy_when_disconnect: bool = betterproto.bool_field(13)
    entity: "CreateEntityInfo" = betterproto.message_field(9)
    reason: "CreateReason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SceneCreateEntityRsp(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)
    entity: "CreateEntityInfo" = betterproto.message_field(4)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SceneDataNotify(betterproto.Message):
    level_config_name_list: List[str] = betterproto.string_field(6)
    scene_tag_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SceneDestroyEntityReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SceneDestroyEntityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneEntitiesMoveCombineNotify(betterproto.Message):
    entity_move_info_list: List["EntityMoveInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class SceneEntitiesMovesReq(betterproto.Message):
    entity_move_info_list: List["EntityMoveInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class SceneEntitiesMovesRsp(betterproto.Message):
    entity_move_fail_info_list: List["EntityMoveFailInfo"] = betterproto.message_field(
        5
    )


@dataclass(eq=False, repr=False)
class SceneEntityAiInfo(betterproto.Message):
    is_ai_open: bool = betterproto.bool_field(1)
    born_pos: "Vector" = betterproto.message_field(2)
    skill_cd_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    servant_info: "ServantInfo" = betterproto.message_field(4)
    ai_threat_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    skill_group_cd_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cur_tactic: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SceneEntityAppearNotify(betterproto.Message):
    entity_list: List["SceneEntityInfo"] = betterproto.message_field(10)
    appear_type: "VisionType" = betterproto.enum_field(3)
    param: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SceneEntityDisappearNotify(betterproto.Message):
    entity_list: List[int] = betterproto.uint32_field(13)
    param: int = betterproto.uint32_field(10)
    disappear_type: "VisionType" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class SceneEntityDrownReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SceneEntityDrownRsp(betterproto.Message):
    entity_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class SceneEntityInfo(betterproto.Message):
    entity_type: "ProtEntityType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    name: str = betterproto.string_field(3)
    motion_info: "MotionInfo" = betterproto.message_field(4)
    prop_list: List["PropPair"] = betterproto.message_field(5)
    fight_prop_list: List["FightPropPair"] = betterproto.message_field(6)
    life_state: int = betterproto.uint32_field(7)
    animator_para_list: List[
        "AnimatorParameterValueInfoPair"
    ] = betterproto.message_field(9)
    last_move_scene_time_ms: int = betterproto.uint32_field(17)
    last_move_reliable_seq: int = betterproto.uint32_field(18)
    entity_client_data: "EntityClientData" = betterproto.message_field(19)
    entity_environment_info_list: List[
        "EntityEnvironmentInfo"
    ] = betterproto.message_field(20)
    entity_authority_info: "EntityAuthorityInfo" = betterproto.message_field(21)
    tag_list: List[str] = betterproto.string_field(22)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(23)
    avatar: "SceneAvatarInfo" = betterproto.message_field(10, group="entity")
    monster: "SceneMonsterInfo" = betterproto.message_field(11, group="entity")
    npc: "SceneNpcInfo" = betterproto.message_field(12, group="entity")
    gadget: "SceneGadgetInfo" = betterproto.message_field(13, group="entity")


@dataclass(eq=False, repr=False)
class SceneEntityMoveNotify(betterproto.Message):
    motion_info: "MotionInfo" = betterproto.message_field(14)
    entity_id: int = betterproto.uint32_field(1)
    scene_time: int = betterproto.uint32_field(7)
    reliable_seq: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SceneEntityMoveReq(betterproto.Message):
    motion_info: "MotionInfo" = betterproto.message_field(5)
    reliable_seq: int = betterproto.uint32_field(3)
    entity_id: int = betterproto.uint32_field(1)
    scene_time: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SceneEntityMoveRsp(betterproto.Message):
    scene_time: int = betterproto.uint32_field(4)
    entity_id: int = betterproto.uint32_field(10)
    reliable_seq: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(15)
    fail_motion: "MotionInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class SceneEntityUpdateNotify(betterproto.Message):
    appear_type: "VisionType" = betterproto.enum_field(10)
    param: int = betterproto.uint32_field(2)
    entity_list: List["SceneEntityInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class SceneFishInfo(betterproto.Message):
    fish_id: int = betterproto.uint32_field(1)
    fish_pool_entity_id: int = betterproto.uint32_field(2)
    fish_pool_pos: "Vector" = betterproto.message_field(3)
    fish_pool_gadget_id: int = betterproto.uint32_field(4)
    last_shock_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SceneForceLockNotify(betterproto.Message):
    force_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SceneForceUnlockNotify(betterproto.Message):
    is_add: bool = betterproto.bool_field(8)
    force_id_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SceneGadgetInfo(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    owner_entity_id: int = betterproto.uint32_field(4)
    born_type: "GadgetBornType" = betterproto.enum_field(5)
    gadget_state: int = betterproto.uint32_field(6)
    gadget_type: int = betterproto.uint32_field(7)
    is_show_cutscene: bool = betterproto.bool_field(8)
    authority_peer_id: int = betterproto.uint32_field(9)
    is_enable_interact: bool = betterproto.bool_field(10)
    interact_id: int = betterproto.uint32_field(11)
    mark_flag: int = betterproto.uint32_field(21)
    prop_owner_entity_id: int = betterproto.uint32_field(22)
    platform: "PlatformInfo" = betterproto.message_field(23)
    interact_uid_list: List[int] = betterproto.uint32_field(24)
    draft_id: int = betterproto.uint32_field(25)
    gadget_talk_state: int = betterproto.uint32_field(26)
    play_info: "GadgetPlayInfo" = betterproto.message_field(100)
    trifle_item: "Item" = betterproto.message_field(12, group="content")
    gather_gadget: "GatherGadgetInfo" = betterproto.message_field(13, group="content")
    worktop: "WorktopInfo" = betterproto.message_field(14, group="content")
    client_gadget: "ClientGadgetInfo" = betterproto.message_field(15, group="content")
    weather: "WeatherInfo" = betterproto.message_field(17, group="content")
    ability_gadget: "AbilityGadgetInfo" = betterproto.message_field(18, group="content")
    statue_gadget: "StatueGadgetInfo" = betterproto.message_field(19, group="content")
    boss_chest: "BossChestInfo" = betterproto.message_field(20, group="content")
    blossom_chest: "BlossomChestInfo" = betterproto.message_field(41, group="content")
    mp_play_reward: "MpPlayRewardInfo" = betterproto.message_field(42, group="content")
    general_reward: "GadgetGeneralRewardInfo" = betterproto.message_field(
        43, group="content"
    )
    offering_info: "OfferingInfo" = betterproto.message_field(44, group="content")
    foundation_info: "FoundationInfo" = betterproto.message_field(45, group="content")
    vehicle_info: "VehicleInfo" = betterproto.message_field(46, group="content")
    shell_info: "EchoShellInfo" = betterproto.message_field(47, group="content")
    screen_info: "ScreenInfo" = betterproto.message_field(48, group="content")
    fish_pool_info: "FishPoolInfo" = betterproto.message_field(59, group="content")
    custom_gadget_tree_info: "CustomGadgetTreeInfo" = betterproto.message_field(
        60, group="content"
    )
    roguelike_gadget_info: "RoguelikeGadgetInfo" = betterproto.message_field(
        61, group="content"
    )
    night_crow_gadget_info: "NightCrowGadgetInfo" = betterproto.message_field(
        62, group="content"
    )
    deshret_obelisk_gadget_info: "DeshretObeliskGadgetInfo" = betterproto.message_field(
        63, group="content"
    )
    coin_collect_operator_info: "CoinCollectOperatorInfo" = betterproto.message_field(
        64, group="content"
    )


@dataclass(eq=False, repr=False)
class SceneGalleryInfo(betterproto.Message):
    end_time: int = betterproto.uint32_field(15)
    start_time: int = betterproto.uint32_field(5)
    balloon_info: "BalloonInfo" = betterproto.message_field(14, group="info")
    fall_info: "FallInfo" = betterproto.message_field(1, group="info")
    flower_info: "FlowerInfo" = betterproto.message_field(6, group="info")
    bullet_info: "BulletInfo" = betterproto.message_field(10, group="info")
    broken_floor_info: "BrokenFloorInfo" = betterproto.message_field(9, group="info")
    hide_and_seek_info: "HideAndSeekInfo" = betterproto.message_field(13, group="info")
    buoyant_combat_info: "BuoyantCombatInfo" = betterproto.message_field(
        461, group="info"
    )
    bounce_conjuring_info: "BounceConjuringInfo" = betterproto.message_field(
        403, group="info"
    )
    handball_info: "HandballInfo" = betterproto.message_field(1637, group="info")
    sumo_info: "SumoInfo" = betterproto.message_field(1000, group="info")
    salvage_prevent_info: "SalvagePreventInfo" = betterproto.message_field(
        521, group="info"
    )
    salvage_escort_info: "SalvageEscortInfo" = betterproto.message_field(
        33, group="info"
    )
    home_balloon_info: "HomeBalloonInfo" = betterproto.message_field(1858, group="info")
    crystal_link_info: "CrystalLinkInfo" = betterproto.message_field(177, group="info")
    irodori_master_info: "IrodoriMasterInfo" = betterproto.message_field(
        1317, group="info"
    )
    luminance_stone_challenge_info: "LuminanceStoneChallengeInfo" = (
        betterproto.message_field(401, group="info")
    )
    home_seek_furniture_info: "HomeSeekFurnitureInfo" = betterproto.message_field(
        530, group="info"
    )
    island_party_down_hill_info: "IslandPartyDownHillInfo" = betterproto.message_field(
        1026, group="info"
    )
    summer_time_v2_boat_info: "SummerTimeV2BoatInfo" = betterproto.message_field(
        1460, group="info"
    )
    island_party_raft_info: "IslandPartyRaftInfo" = betterproto.message_field(
        294, group="info"
    )
    island_party_sail_info: "IslandPartySailInfo" = betterproto.message_field(
        592, group="info"
    )
    instable_spray_info: "InstableSprayInfo" = betterproto.message_field(
        127, group="info"
    )
    muqadas_potion_info: "MuqadasPotionInfo" = betterproto.message_field(
        615, group="info"
    )
    treasure_seelie_info: "TreasureSeelieInfo" = betterproto.message_field(
        1420, group="info"
    )
    vintage_hunting_info: "VintageHuntingInfo" = betterproto.message_field(
        1361, group="info"
    )
    wind_field_info: "WindFieldInfo" = betterproto.message_field(1448, group="info")
    fungus_fighter_training_info: "FungusFighterTrainingInfo" = (
        betterproto.message_field(291, group="info")
    )
    effigy_challenge_info: "EffigyChallengeInfo" = betterproto.message_field(
        290, group="info"
    )
    fungus_fighter_capture_info: "FungusFighterCaptureInfo" = betterproto.message_field(
        1362, group="info"
    )
    char_amusement_info: "CharAmusementInfo" = betterproto.message_field(
        1649, group="info"
    )
    coin_collect_info: "CoinCollectInfo" = betterproto.message_field(963, group="info")
    team_chain_info: "TeamChainInfo" = betterproto.message_field(990, group="info")
    duel_heart_info: "DuelHeartInfo" = betterproto.message_field(789, group="info")
    boat_multi_info: "BoatMultiInfo" = betterproto.message_field(1222, group="info")
    stage: "GalleryStageType" = betterproto.enum_field(2)
    owner_uid: int = betterproto.uint32_field(7)
    gallery_id: int = betterproto.uint32_field(3)
    pre_start_end_time: int = betterproto.uint32_field(8)
    player_count: int = betterproto.uint32_field(11)
    progress_info_list: List["SceneGalleryProgressInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class SceneGalleryInfoNotify(betterproto.Message):
    gallery_info: "SceneGalleryInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class SceneGalleryInstableSprayBuffInfo(betterproto.Message):
    buff_id: int = betterproto.uint32_field(9)
    unk3300_ephaabknlhc: int = betterproto.uint64_field(3)
    unk3300_kkdflbmkgef: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class SceneGalleryProgressInfo(betterproto.Message):
    progress_stage_list: List[int] = betterproto.uint32_field(8)
    key: str = betterproto.string_field(1)
    progress: int = betterproto.uint32_field(13)
    ui_form: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneGalleryVintageHuntingSettleNotify(betterproto.Message):
    has_new_watcher: bool = betterproto.bool_field(1)
    stage_id: int = betterproto.uint32_field(2)
    unk3300_koakhmlfpgm: int = betterproto.uint32_field(9)
    is_new_record: bool = betterproto.bool_field(6)
    unk3300_ehgdikoglkl: int = betterproto.uint32_field(5)
    first_stage_info: "FirstStageInfo" = betterproto.message_field(15, group="info")
    second_stage_info: "SecondStageInfo" = betterproto.message_field(8, group="info")
    third_stage_info: "ThirdStageInfo" = betterproto.message_field(4, group="info")


@dataclass(eq=False, repr=False)
class SceneInitFinishReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SceneInitFinishRsp(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class SceneKickPlayerNotify(betterproto.Message):
    kicker_uid: int = betterproto.uint32_field(8)
    target_uid: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SceneKickPlayerReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneKickPlayerRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    target_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SceneMonsterInfo(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    weapon_list: List["SceneWeaponInfo"] = betterproto.message_field(4)
    authority_peer_id: int = betterproto.uint32_field(5)
    affix_list: List[int] = betterproto.uint32_field(6)
    is_elite: bool = betterproto.bool_field(7)
    owner_entity_id: int = betterproto.uint32_field(8)
    summoned_tag: int = betterproto.uint32_field(9)
    summon_tag_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    pose_id: int = betterproto.uint32_field(11)
    born_type: "MonsterBornType" = betterproto.enum_field(12)
    block_id: int = betterproto.uint32_field(13)
    mark_flag: int = betterproto.uint32_field(14)
    title_id: int = betterproto.uint32_field(15)
    special_name_id: int = betterproto.uint32_field(16)
    attack_target_id: int = betterproto.uint32_field(17)
    monster_route: "MonsterRoute" = betterproto.message_field(18)
    ai_config_id: int = betterproto.uint32_field(19)
    level_route_id: int = betterproto.uint32_field(20)
    init_pose_id: int = betterproto.uint32_field(21)
    is_light: bool = betterproto.bool_field(22)
    kill_num: int = betterproto.uint32_field(23)
    fish_info: "SceneFishInfo" = betterproto.message_field(50, group="content")
    fishtank_fish_info: "FishtankFishInfo" = betterproto.message_field(
        51, group="content"
    )


@dataclass(eq=False, repr=False)
class SceneNpcInfo(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    parent_quest_id: int = betterproto.uint32_field(3)
    block_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ScenePlayBattleInfo(betterproto.Message):
    prepare_end_time: int = betterproto.uint32_field(11)
    type: int = betterproto.uint32_field(1)
    mode: int = betterproto.uint32_field(8)
    progress: int = betterproto.uint32_field(6)
    start_time: int = betterproto.uint32_field(15)
    play_type: int = betterproto.uint32_field(14)
    duration: int = betterproto.uint32_field(2)
    progress_stage_list: List[int] = betterproto.uint32_field(9)
    state: int = betterproto.uint32_field(4)
    play_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ScenePlayBattleInfoListNotify(betterproto.Message):
    battle_info_list: List["ScenePlayBattleInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ScenePlayBattleInfoNotify(betterproto.Message):
    battle_info: "ScenePlayBattleInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ScenePlayBattleInterruptNotify(betterproto.Message):
    play_type: int = betterproto.uint32_field(4)
    interrupt_state: int = betterproto.uint32_field(12)
    play_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ScenePlayBattleResultNotify(betterproto.Message):
    settle_reward_info_list: List[
        "ScenePlayBattleSettleRewardInfo"
    ] = betterproto.message_field(9)
    play_id: int = betterproto.uint32_field(2)
    settle_player_info_list: List[
        "ScenePlayBattleSettlePlayerInfo"
    ] = betterproto.message_field(4)
    cost_time: int = betterproto.uint32_field(8)
    play_type: int = betterproto.uint32_field(13)
    is_win: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class ScenePlayBattleSettlePlayerInfo(betterproto.Message):
    nickname: str = betterproto.string_field(9)
    online_id: str = betterproto.string_field(11)
    statistic_id: int = betterproto.uint32_field(3)
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(1)
    uid: int = betterproto.uint32_field(6)
    profile_picture: "ProfilePicture" = betterproto.message_field(13)
    head_image: int = betterproto.uint32_field(4)
    param: int = betterproto.int64_field(12)


@dataclass(eq=False, repr=False)
class ScenePlayBattleSettleRewardInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(8)
    reward_item_list: List["ItemParam"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ScenePlayBattleUidOpNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(4)
    param_index: int = betterproto.uint32_field(7)
    param_target_list: List[int] = betterproto.uint32_field(9)
    uid_list: List[int] = betterproto.uint32_field(1)
    play_id: int = betterproto.uint32_field(11)
    param_list: List[int] = betterproto.uint32_field(2)
    play_type: int = betterproto.uint32_field(5)
    op: int = betterproto.uint32_field(13)
    param_str: str = betterproto.string_field(12)
    param_duration: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ScenePlayerBackgroundAvatarRefreshNotify(betterproto.Message):
    param: int = betterproto.uint32_field(1)
    entity_list: List["SceneEntityInfo"] = betterproto.message_field(14)
    appear_type: "VisionType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class ScenePlayerInfo(betterproto.Message):
    name: str = betterproto.string_field(10)
    uid: int = betterproto.uint32_field(13)
    peer_id: int = betterproto.uint32_field(5)
    scene_id: int = betterproto.uint32_field(4)
    is_connected: bool = betterproto.bool_field(7)
    online_player_info: "OnlinePlayerInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ScenePlayerInfoNotify(betterproto.Message):
    player_info_list: List["ScenePlayerInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class ScenePlayerLocationNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    vehicle_loc_list: List["VehicleLocationInfo"] = betterproto.message_field(3)
    player_loc_list: List["PlayerLocationInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class ScenePlayerSoundNotify(betterproto.Message):
    sound_name: str = betterproto.string_field(11)
    play_pos: "Vector" = betterproto.message_field(6)
    play_type: "PlaySoundType" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class ScenePlayGuestReplyInviteReq(betterproto.Message):
    play_id: int = betterproto.uint32_field(9)
    is_agree: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class ScenePlayGuestReplyInviteRsp(betterproto.Message):
    is_agree: bool = betterproto.bool_field(1)
    retcode: int = betterproto.int32_field(7)
    play_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ScenePlayGuestReplyNotify(betterproto.Message):
    guest_uid: int = betterproto.uint32_field(15)
    play_id: int = betterproto.uint32_field(12)
    is_agree: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class ScenePlayInfo(betterproto.Message):
    entry_id: int = betterproto.uint32_field(1)
    play_id: int = betterproto.uint32_field(8)
    is_open: bool = betterproto.bool_field(2)
    play_type: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ScenePlayInfoListNotify(betterproto.Message):
    play_info_list: List["ScenePlayInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ScenePlayInviteResultNotify(betterproto.Message):
    play_id: int = betterproto.uint32_field(10)
    is_all_agree: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class ScenePlayOutofRegionNotify(betterproto.Message):
    play_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ScenePlayOwnerCheckReq(betterproto.Message):
    play_id: int = betterproto.uint32_field(13)
    is_skip_match: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class ScenePlayOwnerCheckRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    param_list: List[int] = betterproto.uint32_field(14)
    is_skip_match: bool = betterproto.bool_field(7)
    play_id: int = betterproto.uint32_field(8)
    wrong_uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ScenePlayOwnerInviteNotify(betterproto.Message):
    is_remain_reward: bool = betterproto.bool_field(13)
    invite_cd: int = betterproto.uint32_field(3)
    play_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ScenePlayOwnerStartInviteReq(betterproto.Message):
    is_skip_match: bool = betterproto.bool_field(11)
    play_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ScenePlayOwnerStartInviteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    play_id: int = betterproto.uint32_field(7)
    is_skip_match: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class ScenePointUnlockNotify(betterproto.Message):
    locked_point_list: List[int] = betterproto.uint32_field(5)
    scene_id: int = betterproto.uint32_field(12)
    point_list: List[int] = betterproto.uint32_field(9)
    hide_point_list: List[int] = betterproto.uint32_field(15)
    unhide_point_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SceneReliquaryInfo(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    level: int = betterproto.uint32_field(3)
    promote_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneRouteChangeInfo(betterproto.Message):
    is_forward: bool = betterproto.bool_field(7)
    point_list: List["RoutePointChangeInfo"] = betterproto.message_field(14)
    type: int = betterproto.uint32_field(11)
    route_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SceneRouteChangeNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(10)
    route_list: List["SceneRouteChangeInfo"] = betterproto.message_field(12)
    scene_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SceneTeamAvatar(betterproto.Message):
    is_reconnect: bool = betterproto.bool_field(8)
    ability_control_block: "AbilityControlBlock" = betterproto.message_field(10)
    entity_id: int = betterproto.uint32_field(13)
    weapon_entity_id: int = betterproto.uint32_field(15)
    is_on_scene: bool = betterproto.bool_field(776)
    weapon_guid: int = betterproto.uint64_field(3)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(14)
    weapon_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(6)
    scene_id: int = betterproto.uint32_field(4)
    is_player_cur_avatar: bool = betterproto.bool_field(7)
    avatar_guid: int = betterproto.uint64_field(9)
    scene_avatar_info: "SceneAvatarInfo" = betterproto.message_field(5)
    avatar_info: "AvatarInfo" = betterproto.message_field(2)
    scene_entity_info: "SceneEntityInfo" = betterproto.message_field(1)
    player_uid: int = betterproto.uint32_field(11)
    avatar_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class SceneTeamUpdateNotify(betterproto.Message):
    is_in_mp: bool = betterproto.bool_field(15)
    scene_team_avatar_list: List["SceneTeamAvatar"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class SceneTimeNotify(betterproto.Message):
    is_paused: bool = betterproto.bool_field(4)
    scene_time: int = betterproto.uint64_field(10)
    scene_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SceneTransToPointReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(3)
    point_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SceneTransToPointRsp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(4)
    point_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SceneWeaponInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    gadget_id: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(3)
    guid: int = betterproto.uint64_field(4)
    level: int = betterproto.uint32_field(5)
    promote_level: int = betterproto.uint32_field(6)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(7)
    affix_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class SceneWeatherForcastReq(betterproto.Message):
    weather_area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneWeatherForcastRsp(betterproto.Message):
    oefhbiaidaa: List[int] = betterproto.uint32_field(13)
    kcclfhokmpp: int = betterproto.uint64_field(10)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class ScoreChallengeInfo(betterproto.Message):
    oichdaoampp: int = betterproto.uint32_field(13)
    max_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ScreenInfo(betterproto.Message):
    live_id: int = betterproto.uint32_field(1)
    projector_entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SeaLampActivityInfo(betterproto.Message):
    left_monsters: bool = betterproto.bool_field(1)
    unk3300_bajigngjalg: bool = betterproto.bool_field(3)
    section_info_list: List["SeaLampSectionInfo"] = betterproto.message_field(2)
    first_day_start_time: int = betterproto.uint32_field(10)
    popularity: int = betterproto.uint32_field(5)
    unk3300_jmpcjgjhpih: bool = betterproto.bool_field(14)
    day_index: int = betterproto.uint32_field(4)
    mechanicus_id: int = betterproto.uint32_field(12)
    sea_lamp_coin: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SeaLampCoinNotify(betterproto.Message):
    sea_lamp_coin: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SeaLampContributeItemReq(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(13)
    activity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SeaLampContributeItemRsp(betterproto.Message):
    add_progress: int = betterproto.uint32_field(4)
    unk3300_aiinhbhnhoi: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(12)
    unk3300_lphaloglgal: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SeaLampFlyLampNotify(betterproto.Message):
    item_num: int = betterproto.uint32_field(7)
    pos: "Vector" = betterproto.message_field(5)
    param: int = betterproto.int32_field(10)
    item_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SeaLampFlyLampReq(betterproto.Message):
    pos: "Vector" = betterproto.message_field(14)
    item_id: int = betterproto.uint32_field(4)
    item_num: int = betterproto.uint32_field(1)
    param: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class SeaLampFlyLampRsp(betterproto.Message):
    item_num: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(3)
    item_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SeaLampInfo(betterproto.Message):
    left_monsters: bool = betterproto.bool_field(1)
    unk3300_bajigngjalg: bool = betterproto.bool_field(3)
    section_info_list: List["SeaLampSectionInfo"] = betterproto.message_field(2)
    first_day_start_time: int = betterproto.uint32_field(10)
    popularity: int = betterproto.uint32_field(5)
    unk3300_jmpcjgjhpih: bool = betterproto.bool_field(14)
    day_index: int = betterproto.uint32_field(4)
    mechanicus_id: int = betterproto.uint32_field(12)
    sea_lamp_coin: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SeaLampPopularityNotify(betterproto.Message):
    popularity: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SeaLampSectionInfo(betterproto.Message):
    section_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SeaLampTakeContributionRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(12)
    config_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SeaLampTakeContributionRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    config_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SeaLampTakePhaseRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    phase_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SeaLampTakePhaseRewardRsp(betterproto.Message):
    phase_id: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class SeaLampV3Info(betterproto.Message):
    race_info: "Bdkpjamlncl" = betterproto.message_field(4)
    camp_info: "Meidianhedd" = betterproto.message_field(11)
    jpegcngalgi: "Fkjcfglhnpm" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SealBattleBeginNotify(betterproto.Message):
    seal_radius: int = betterproto.uint32_field(12)
    seal_max_progress: int = betterproto.uint32_field(2)
    seal_entity_id: int = betterproto.uint32_field(15)
    battle_type: "SealBattleType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class SealBattleEndNotify(betterproto.Message):
    seal_entity_id: int = betterproto.uint32_field(3)
    is_win: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class SealBattleProgressNotify(betterproto.Message):
    max_progress: int = betterproto.uint32_field(15)
    seal_radius: int = betterproto.uint32_field(8)
    progress: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(14)
    seal_entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SearchCustomDungeonReq(betterproto.Message):
    dungeon_code: str = betterproto.string_field(12)


@dataclass(eq=False, repr=False)
class SearchCustomDungeonRsp(betterproto.Message):
    custom_dungeon_brief: "OtherCustomDungeonBrief" = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class SecondStageInfo(betterproto.Message):
    animal_count_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    total_num: int = betterproto.uint32_field(14)
    capture_animal_num: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SeekFurnitureGalleryInfo(betterproto.Message):
    record_list: List["HomeSeekFurnitureOneRecord"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SeeMonsterReq(betterproto.Message):
    monster_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SeeMonsterRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class SegmentCrcInfo(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    crc: str = betterproto.string_field(12)
    offset: int = betterproto.uint32_field(5)
    module: int = betterproto.uint32_field(14)
    size: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SegmentInfo(betterproto.Message):
    size: int = betterproto.uint32_field(6)
    offset: int = betterproto.uint32_field(9)
    module: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SelectAsterMidDifficultyReq(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(7)
    schedule_id: int = betterproto.uint32_field(2)
    difficulty_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SelectAsterMidDifficultyRsp(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(1)
    difficulty_id: int = betterproto.uint32_field(3)
    schedule_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SelectEffigyChallengeConditionReq(betterproto.Message):
    difficulty_id: int = betterproto.uint32_field(11)
    challenge_id: int = betterproto.uint32_field(2)
    condition_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SelectEffigyChallengeConditionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    condition_id_list: List[int] = betterproto.uint32_field(1)
    challenge_id: int = betterproto.uint32_field(11)
    difficulty_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SelectOnStage(betterproto.Message):
    reason: "GcgReason" = betterproto.enum_field(13)
    card_guid: int = betterproto.uint32_field(5)
    controller_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SelectOnStageByEffect(betterproto.Message):
    skill_id: int = betterproto.uint32_field(4)
    card_guid: int = betterproto.uint32_field(2)
    controller_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SelectRoguelikeDungeonCardReq(betterproto.Message):
    card_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SelectRoguelikeDungeonCardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    card_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SelectWorktopOptionReq(betterproto.Message):
    option_id: int = betterproto.uint32_field(1)
    gadget_entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SelectWorktopOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    gadget_entity_id: int = betterproto.uint32_field(3)
    option_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ServantInfo(betterproto.Message):
    master_entity_id: int = betterproto.uint32_field(1)
    born_slot_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerAnnounceNotify(betterproto.Message):
    announce_data_list: List["AnnounceData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ServerAnnounceRevokeNotify(betterproto.Message):
    config_id_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ServerBuff(betterproto.Message):
    server_buff_uid: int = betterproto.uint32_field(1)
    server_buff_id: int = betterproto.uint32_field(2)
    server_buff_type: int = betterproto.uint32_field(3)
    instanced_modifier_id: int = betterproto.uint32_field(4)
    is_modifier_added: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ServerBuffChangeNotify(betterproto.Message):
    server_buff_list: List["ServerBuff"] = betterproto.message_field(12)
    avatar_guid_list: List[int] = betterproto.uint64_field(10)
    server_buff_change_type: "ServerBuffChangeNotifyServerBuffChangeType" = (
        betterproto.enum_field(4)
    )
    entity_id_list: List[int] = betterproto.uint32_field(1)
    is_creature_buff: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ServerCombatEndNotify(betterproto.Message):
    combat_end_type_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ServerCondMeetQuestListUpdateNotify(betterproto.Message):
    add_quest_id_list: List[int] = betterproto.uint32_field(2)
    del_quest_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ServerDisconnectClientNotify(betterproto.Message):
    data: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ServerGlobalValueChangeNotify(betterproto.Message):
    value: float = betterproto.float_field(10)
    key_hash: int = betterproto.uint32_field(6)
    entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ServerLogNotify(betterproto.Message):
    server_log: str = betterproto.string_field(10)
    log_level: "ServerLogLevel" = betterproto.enum_field(15)
    log_type: "ServerLogType" = betterproto.enum_field(9)


@dataclass(eq=False, repr=False)
class ServerMassiveEntity(betterproto.Message):
    entity_type: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(2)
    runtime_id: int = betterproto.uint32_field(3)
    authority_peer_id: int = betterproto.uint32_field(4)
    obj_id: int = betterproto.int64_field(5)
    water_info: "WaterInfo" = betterproto.message_field(6, group="entity_info")
    grass_info: "GrassInfo" = betterproto.message_field(7, group="entity_info")
    box_info: "BoxInfo" = betterproto.message_field(8, group="entity_info")


@dataclass(eq=False, repr=False)
class ServerMessageNotify(betterproto.Message):
    index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ServerTimeNotify(betterproto.Message):
    server_time: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class ServerTryCancelGeneralMatchNotify(betterproto.Message):
    match_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerUpdateGlobalValueNotify(betterproto.Message):
    value: float = betterproto.float_field(2)
    update_type: "UpdateType" = betterproto.enum_field(8)
    key_hash: int = betterproto.uint32_field(10)
    entity_id: int = betterproto.uint32_field(3)
    delta: float = betterproto.float_field(12)


@dataclass(eq=False, repr=False)
class SetBattlePassViewedReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SetBattlePassViewedRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    schedule_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetChatEmojiCollectionReq(betterproto.Message):
    chat_emoji_collection_data: "ChatEmojiCollectionData" = betterproto.message_field(
        11
    )


@dataclass(eq=False, repr=False)
class SetChatEmojiCollectionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class SetCodexPushtipsReadReq(betterproto.Message):
    type_id: int = betterproto.uint32_field(10)
    codex_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetCodexPushtipsReadRsp(betterproto.Message):
    codex_id: int = betterproto.uint32_field(14)
    type_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class SetCoopChapterViewedReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SetCoopChapterViewedRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    chapter_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SetCurExpeditionChallengeIdReq(betterproto.Message):
    id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SetCurExpeditionChallengeIdRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SetEntityClientDataNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(15)
    entity_client_data: "EntityClientData" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class SetEquipLockStateReq(betterproto.Message):
    target_equip_guid: int = betterproto.uint64_field(10)
    is_locked: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SetEquipLockStateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    is_locked: bool = betterproto.bool_field(4)
    target_equip_guid: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class SetFriendEnterHomeOptionReq(betterproto.Message):
    option: "FriendEnterHomeOption" = betterproto.enum_field(12)


@dataclass(eq=False, repr=False)
class SetFriendEnterHomeOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class SetFriendRemarkNameReq(betterproto.Message):
    uid: int = betterproto.uint32_field(11)
    remark_name: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class SetFriendRemarkNameRsp(betterproto.Message):
    remark_name: str = betterproto.string_field(12)
    uid: int = betterproto.uint32_field(14)
    is_clear_remark: bool = betterproto.bool_field(6)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SetH5ActivityRedDotTimestampReq(betterproto.Message):
    client_red_dot_timestamp: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SetH5ActivityRedDotTimestampRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class SetIsAutoUnlockSpecificEquipReq(betterproto.Message):
    is_auto_unlock_specific_equip: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SetIsAutoUnlockSpecificEquipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class SetLimitOptimizationNotify(betterproto.Message):
    is_active: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class SetNameCardReq(betterproto.Message):
    name_card_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SetNameCardRsp(betterproto.Message):
    name_card_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class SetOpenStateReq(betterproto.Message):
    value: int = betterproto.uint32_field(14)
    key: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SetOpenStateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    value: int = betterproto.uint32_field(15)
    key: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SetPlayerBirthdayReq(betterproto.Message):
    birthday: "Birthday" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class SetPlayerBirthdayRsp(betterproto.Message):
    birthday: "Birthday" = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class SetPlayerBornDataReq(betterproto.Message):
    nick_name: str = betterproto.string_field(10)
    avatar_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SetPlayerBornDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class SetPlayerHeadImageReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SetPlayerHeadImageRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    avatar_id: int = betterproto.uint32_field(2)
    profile_picture: "ProfilePicture" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class SetPlayerNameReq(betterproto.Message):
    nick_name: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class SetPlayerNameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    nick_name: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class SetPlayerPropReq(betterproto.Message):
    prop_list: List["PropValue"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class SetPlayerPropRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class SetPlayerSignatureReq(betterproto.Message):
    signature: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class SetPlayerSignatureRsp(betterproto.Message):
    signature: str = betterproto.string_field(13)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class SetSceneWeatherAreaReq(betterproto.Message):
    weather_gadget_id: int = betterproto.uint32_field(15)
    weather_value_map: Dict[int, str] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_STRING
    )


@dataclass(eq=False, repr=False)
class SetSceneWeatherAreaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SetUpAvatarTeamReq(betterproto.Message):
    cur_avatar_guid: int = betterproto.uint64_field(9)
    team_id: int = betterproto.uint32_field(4)
    avatar_team_guid_list: List[int] = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class SetUpAvatarTeamRsp(betterproto.Message):
    team_id: int = betterproto.uint32_field(5)
    avatar_team_guid_list: List[int] = betterproto.uint64_field(6)
    cur_avatar_guid: int = betterproto.uint64_field(2)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class SetUpLunchBoxWidgetReq(betterproto.Message):
    lunch_box_data: "LunchBoxData" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class SetUpLunchBoxWidgetRsp(betterproto.Message):
    lunch_box_data: "LunchBoxData" = betterproto.message_field(15)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class SetWidgetSlotReq(betterproto.Message):
    tag_list: List["WidgetSlotTag"] = betterproto.enum_field(13)
    op: "WidgetSlotOp" = betterproto.enum_field(3)
    material_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SetWidgetSlotRsp(betterproto.Message):
    tag_list: List["WidgetSlotTag"] = betterproto.enum_field(7)
    retcode: int = betterproto.int32_field(5)
    material_id: int = betterproto.uint32_field(12)
    op: "WidgetSlotOp" = betterproto.enum_field(9)


@dataclass(eq=False, repr=False)
class ShapeBox(betterproto.Message):
    center: "Vector" = betterproto.message_field(1)
    axis0: "Vector" = betterproto.message_field(2)
    axis1: "Vector" = betterproto.message_field(3)
    axis2: "Vector" = betterproto.message_field(4)
    extents: "Vector" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ShapeSphere(betterproto.Message):
    center: "Vector" = betterproto.message_field(1)
    radius: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class ShareCdInfo(betterproto.Message):
    share_cd_id: int = betterproto.uint32_field(13)
    cd_start_time: int = betterproto.uint64_field(1)
    index: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ShellInfo(betterproto.Message):
    shell_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Shop(betterproto.Message):
    mcoin_product_list: List["ShopMcoinProduct"] = betterproto.message_field(6)
    city_id: int = betterproto.uint32_field(10)
    concert_product_list: List["ShopConcertProduct"] = betterproto.message_field(13)
    next_refresh_time: int = betterproto.uint32_field(14)
    card_product_list: List["ShopCardProduct"] = betterproto.message_field(9)
    city_reputation_level: int = betterproto.uint32_field(4)
    shop_type: int = betterproto.uint32_field(5)
    goods_list: List["ShopGoods"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class ShopCardProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    mcoin_base: int = betterproto.uint32_field(3)
    hcoin_per_day: int = betterproto.uint32_field(4)
    days: int = betterproto.uint32_field(5)
    remain_reward_days: int = betterproto.uint32_field(6)
    card_product_type: int = betterproto.uint32_field(7)
    resin_card: "ShopCardProductResinCard" = betterproto.message_field(
        101, group="extra_card_data"
    )


@dataclass(eq=False, repr=False)
class ShopCardProductResinCard(betterproto.Message):
    base_item_list: List["ItemParam"] = betterproto.message_field(1)
    per_day_item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ShopConcertProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    obtain_count: int = betterproto.uint32_field(3)
    obtain_limit: int = betterproto.uint32_field(4)
    begin_time: int = betterproto.uint32_field(5)
    end_time: int = betterproto.uint32_field(6)
    buy_times: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ShopGoods(betterproto.Message):
    unk3300_mbgomhnbhmg: int = betterproto.uint32_field(655)
    max_level: int = betterproto.uint32_field(3)
    hcoin: int = betterproto.uint32_field(13)
    secondary_sheet_id: int = betterproto.uint32_field(363)
    scoin: int = betterproto.uint32_field(11)
    goods_id: int = betterproto.uint32_field(2)
    buy_limit: int = betterproto.uint32_field(10)
    pre_goods_id_list: List[int] = betterproto.uint32_field(12)
    goods_item: "ItemParam" = betterproto.message_field(6)
    cost_item_list: List["ItemParam"] = betterproto.message_field(7)
    single_limit: int = betterproto.uint32_field(424)
    next_refresh_time: int = betterproto.uint32_field(1)
    unk3300_njcpajbceph: int = betterproto.uint32_field(182)
    bought_num: int = betterproto.uint32_field(4)
    unk3300_omkifimdgdn: int = betterproto.uint32_field(636)
    min_level: int = betterproto.uint32_field(14)
    end_time: int = betterproto.uint32_field(15)
    begin_time: int = betterproto.uint32_field(8)
    disable_type: int = betterproto.uint32_field(9)
    mcoin: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ShopMcoinProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    mcoin_base: int = betterproto.uint32_field(3)
    mcoin_non_first: int = betterproto.uint32_field(4)
    mcoin_first: int = betterproto.uint32_field(5)
    bought_num: int = betterproto.uint32_field(6)
    is_audit: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class ShortAbilityHashPair(betterproto.Message):
    ability_name_hash: int = betterproto.fixed32_field(6)
    ability_config_hash: int = betterproto.fixed32_field(10)


@dataclass(eq=False, repr=False)
class ShowAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    talent_id_list: List[int] = betterproto.uint32_field(3)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    skill_depot_id: int = betterproto.uint32_field(5)
    core_proud_skill_level: int = betterproto.uint32_field(6)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(7)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    equip_list: List["ShowEquip"] = betterproto.message_field(10)
    fetter_info: "AvatarFetterInfo" = betterproto.message_field(11)
    costume_id: int = betterproto.uint32_field(12)
    excel_info: "AvatarExcelInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ShowClientGuideNotify(betterproto.Message):
    guide_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ShowClientTutorialNotify(betterproto.Message):
    tutorial_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ShowCommonTipsNotify(betterproto.Message):
    content: str = betterproto.string_field(4)
    close_time: int = betterproto.uint32_field(7)
    title: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class ShowEquip(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    reliquary: "Reliquary" = betterproto.message_field(2, group="detail")
    weapon: "Weapon" = betterproto.message_field(3, group="detail")


@dataclass(eq=False, repr=False)
class ShowMessageNotify(betterproto.Message):
    msg_id: "SvrMsgId" = betterproto.enum_field(7)
    params: List["MsgParam"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ShowTemplateReminderNotify(betterproto.Message):
    unk3300_aeniibbbpjc: bool = betterproto.bool_field(13)
    unk3300_labcnbegced: bool = betterproto.bool_field(11)
    param_uid_list: List[int] = betterproto.uint32_field(6)
    param_list: List[int] = betterproto.int32_field(12)
    template_reminder_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SignatureAuditConfigNotify(betterproto.Message):
    is_open: bool = betterproto.bool_field(11)
    submit_limit: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SignInData(betterproto.Message):
    day_count: int = betterproto.uint32_field(3)
    reward_item_list: List["ItemParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SignInInfo(betterproto.Message):
    config_id: int = betterproto.uint32_field(2)
    unk3300_mnjelidkmcf: int = betterproto.uint32_field(5)
    is_cond_satisfied: bool = betterproto.bool_field(13)
    reward_day_list: List[int] = betterproto.uint32_field(7)
    unk3300_nfnokbnblge: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(12)
    signin_data_list: List["SignInData"] = betterproto.message_field(14)
    schedule_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SignInInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SignInInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    sign_in_info_list: List["SignInInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SingleRestartBrickBreakerReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(2)
    is_dungeon: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class SingleRestartBrickBreakerRsp(betterproto.Message):
    is_dungeon: bool = betterproto.bool_field(4)
    retcode: int = betterproto.int32_field(6)
    level_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SingleStartBrickBreakerReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    is_dungeon: bool = betterproto.bool_field(15)
    chosen_skill_list: List[int] = betterproto.uint32_field(12)
    chosen_avatar_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SingleStartBrickBreakerRsp(betterproto.Message):
    is_dungeon: bool = betterproto.bool_field(15)
    level_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class SkillLimitsChange(betterproto.Message):
    card_limits_change_map: Dict[int, "GcgCardSkillLimitsInfo"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class SkillRequest(betterproto.Message):
    skill_depot_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SkillResponse(betterproto.Message):
    skill_id_list: List[int] = betterproto.uint32_field(8)
    skill_depot_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SkillResult(betterproto.Message):
    unk3300_nnjaoehnppd: int = betterproto.uint32_field(15)
    unk3300_epndciajojp: int = betterproto.uint32_field(2)
    ahkoidfnbgc: int = betterproto.uint32_field(3)
    target_card_guid: int = betterproto.uint32_field(7)
    unk3300_nigdciglake: int = betterproto.uint32_field(1)
    unk3300_pdbagjinfpf: int = betterproto.uint32_field(13)
    npllnhifdoo: int = betterproto.uint32_field(6)
    detail_list: List["GcgDamageDetail"] = betterproto.message_field(12)
    damage: int = betterproto.uint32_field(11)
    skill_id: int = betterproto.uint32_field(4)
    unk3300_lpglocddpcl: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SkyCrystalDetectorData(betterproto.Message):
    hint_center_pos: "Vector" = betterproto.message_field(6)
    group_id: int = betterproto.uint32_field(14)
    config_id: int = betterproto.uint32_field(8)
    is_hint_valid: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SkyCrystalDetectorDataUpdateNotify(betterproto.Message):
    sky_crystal_detector_data: "SkyCrystalDetectorData" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class SkyCrystalDetectorQuickUseResult(betterproto.Message):
    sky_crystal_detector_data: "SkyCrystalDetectorData" = betterproto.message_field(14)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class SocialDataNotify(betterproto.Message):
    is_have_first_share: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class SocialDetail(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    signature: str = betterproto.string_field(5)
    birthday: "Birthday" = betterproto.message_field(6)
    world_level: int = betterproto.uint32_field(7)
    reserved_list: List[int] = betterproto.uint32_field(8)
    online_state: "FriendOnlineState" = betterproto.enum_field(9)
    param: int = betterproto.uint32_field(10)
    is_friend: bool = betterproto.bool_field(11)
    is_mp_mode_available: bool = betterproto.bool_field(12)
    online_id: str = betterproto.string_field(13)
    name_card_id: int = betterproto.uint32_field(14)
    is_in_blacklist: bool = betterproto.bool_field(15)
    is_chat_no_disturb: bool = betterproto.bool_field(16)
    remark_name: str = betterproto.string_field(17)
    finish_achievement_num: int = betterproto.uint32_field(18)
    tower_floor_index: int = betterproto.uint32_field(19)
    tower_level_index: int = betterproto.uint32_field(20)
    is_show_avatar: bool = betterproto.bool_field(21)
    show_avatar_info_list: List["SocialShowAvatarInfo"] = betterproto.message_field(22)
    show_name_card_id_list: List[int] = betterproto.uint32_field(23)
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(24)
    profile_picture: "ProfilePicture" = betterproto.message_field(25)
    gpbkdlaodce: str = betterproto.string_field(26)


@dataclass(eq=False, repr=False)
class SocialShowAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    costume_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SpiceActivityFinishMakeSpiceReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(9)
    is_success: bool = betterproto.bool_field(12)
    left_material_id_list: List[int] = betterproto.uint32_field(1)
    left_turns: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SpiceActivityFinishMakeSpiceRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    is_success: bool = betterproto.bool_field(4)
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SpiceActivityGivingRecordNotify(betterproto.Message):
    unk3300_lakpmmipbmi: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(8)
    unk3300_cihiajegcbo: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SpiceActivityProcessFoodReq(betterproto.Message):
    normal_food_list: List["ItemParam"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class SpiceActivityProcessFoodRsp(betterproto.Message):
    special_food_list: List["ItemParam"] = betterproto.message_field(13)
    normal_food_list: List["ItemParam"] = betterproto.message_field(10)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class SpiceInfo(betterproto.Message):
    unk3300_cihiajegcbo: int = betterproto.uint32_field(8)
    spice_stage_data_list: List["SpiceStageData"] = betterproto.message_field(11)
    unk3300_lakpmmipbmi: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SpiceStageData(betterproto.Message):
    is_open: bool = betterproto.bool_field(10)
    success_times: int = betterproto.uint32_field(3)
    stage_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SpringUseReq(betterproto.Message):
    guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class SpringUseRsp(betterproto.Message):
    guid: int = betterproto.uint64_field(13)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class StakePlayInfo(betterproto.Message):
    record_list: List["HomeStakePlayRecord"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class StartArenaChallengeLevelReq(betterproto.Message):
    unk3300_fdfnflakong: int = betterproto.uint32_field(4)
    unk3300_dbhaghmmlai: int = betterproto.uint32_field(5)
    gadget_entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class StartArenaChallengeLevelRsp(betterproto.Message):
    unk3300_dbhaghmmlai: int = betterproto.uint32_field(1)
    gadget_entity_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(6)
    unk3300_fdfnflakong: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class StartBuoyantCombatGalleryReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(11)
    gallery_level: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class StartBuoyantCombatGalleryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    gallery_level: int = betterproto.uint32_field(8)
    gallery_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class StartCoopPointReq(betterproto.Message):
    coop_point: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class StartCoopPointRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    is_start: bool = betterproto.bool_field(5)
    start_main_coop: "MainCoop" = betterproto.message_field(7)
    coop_point: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class StartEffigyChallengeReq(betterproto.Message):
    difficulty_id: int = betterproto.uint32_field(13)
    condition_id_list: List[int] = betterproto.uint32_field(2)
    point_id: int = betterproto.uint32_field(9)
    challenge_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class StartEffigyChallengeRsp(betterproto.Message):
    point_id: int = betterproto.uint32_field(8)
    difficulty_id: int = betterproto.uint32_field(9)
    condition_id_list: List[int] = betterproto.uint32_field(2)
    challenge_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class StartFishingReq(betterproto.Message):
    rod_entity_id: int = betterproto.uint32_field(14)
    fish_pool_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class StartFishingRsp(betterproto.Message):
    fish_pool_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class StartRogueDiaryPlayReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(8)
    difficulty: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class StartRogueDiaryPlayRsp(betterproto.Message):
    trial_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(3)
    rand_card_list: List[int] = betterproto.uint32_field(2)
    avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class StartRogueDiaryRoomReq(betterproto.Message):
    is_select_hard: bool = betterproto.bool_field(4)
    room_difficulty: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class StartRogueDiaryRoomRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class StartRogueEliteCellChallengeReq(betterproto.Message):
    cell_id: int = betterproto.uint32_field(12)
    difficulty: "RogueEliteCellDifficultyType" = betterproto.enum_field(7)
    dungeon_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class StartRogueEliteCellChallengeRsp(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(8)
    cell_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class StartRogueNormalCellChallengeReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(7)
    cell_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class StartRogueNormalCellChallengeRsp(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(2)
    cell_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class StatueGadgetInfo(betterproto.Message):
    opened_statue_uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class StopReminderNotify(betterproto.Message):
    reminder_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class StopServer(betterproto.Message):
    stop_begin_time: int = betterproto.uint32_field(1)
    stop_end_time: int = betterproto.uint32_field(2)
    url: str = betterproto.string_field(3)
    content_msg: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class StopServerInfo(betterproto.Message):
    stop_begin_time: int = betterproto.uint32_field(1)
    stop_end_time: int = betterproto.uint32_field(2)
    url: str = betterproto.string_field(3)
    content_msg: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class StoreCustomDungeonReq(betterproto.Message):
    is_cancel_store: bool = betterproto.bool_field(5)
    dungeon_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class StoreCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class StoreItemChangeNotify(betterproto.Message):
    item_list: List["Item"] = betterproto.message_field(13)
    store_type: "StoreType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class StoreItemDelNotify(betterproto.Message):
    guid_list: List[int] = betterproto.uint64_field(6)
    store_type: "StoreType" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class StoreWeightLimitNotify(betterproto.Message):
    furniture_count_limit: int = betterproto.uint32_field(2)
    material_count_limit: int = betterproto.uint32_field(3)
    reliquary_count_limit: int = betterproto.uint32_field(5)
    weight_limit: int = betterproto.uint32_field(14)
    store_type: "StoreType" = betterproto.enum_field(11)
    weapon_count_limit: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class StrengthenPointData(betterproto.Message):
    unk3300_nnkpollbldo: int = betterproto.uint32_field(8)
    unk3300_hikdekipcpb: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SubmitInferenceWordReq(betterproto.Message):
    page_id: int = betterproto.uint32_field(13)
    word_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SubmitInferenceWordRsp(betterproto.Message):
    conclusion_id: int = betterproto.uint32_field(7)
    page_id: int = betterproto.uint32_field(13)
    word_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class SuiteData(betterproto.Message):
    suite_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SummerTimeDungeonInfo(betterproto.Message):
    unk3300_hjhodmoimkg: int = betterproto.uint32_field(8)
    unk3300_galedjlaipm: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(5)
    unk3300_gmkmnhibpep: int = betterproto.uint32_field(4)
    unk3300_eggfjcicobd: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SummerTimeFloatSignalPositionNotify(betterproto.Message):
    is_transfer_anchor: bool = betterproto.bool_field(11)
    float_signal_id: int = betterproto.uint32_field(3)
    position: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class SummerTimeFloatSignalUpdateNotify(betterproto.Message):
    position: "Vector" = betterproto.message_field(2)
    is_transfer_anchor: bool = betterproto.bool_field(11)
    float_signal_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SummerTimeInfo(betterproto.Message):
    sprint_boat_info: "SummerTimeSprintBoatInfo" = betterproto.message_field(11)
    content_close_time: int = betterproto.uint32_field(6)
    stage_map: Dict[int, "SummerTimeStageInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    left_monsters: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatInfo(betterproto.Message):
    record_list: List["SummerTimeSprintBoatRecord"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatRecord(betterproto.Message):
    watcher_id_list: List[int] = betterproto.uint32_field(5)
    start_time: int = betterproto.uint32_field(3)
    is_touched: bool = betterproto.bool_field(9)
    best_score: int = betterproto.uint32_field(2)
    group_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatRestartReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(10)
    group_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatRestartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    group_id: int = betterproto.uint32_field(6)
    schedule_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatSettleNotify(betterproto.Message):
    left_time: int = betterproto.uint32_field(11)
    score: int = betterproto.uint32_field(14)
    group_id: int = betterproto.uint32_field(1)
    unk3300_meekfjjioke: int = betterproto.uint32_field(3)
    unk3300_plfmjpnppli: int = betterproto.uint32_field(8)
    is_success: bool = betterproto.bool_field(2)
    total_num: int = betterproto.uint32_field(7)
    is_new_record: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class SummerTimeStageInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(6)
    is_open: bool = betterproto.bool_field(3)
    stage_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SummerTimeV2BoatGallerySettleInfo(betterproto.Message):
    param2: int = betterproto.uint32_field(15)
    gallery_id: int = betterproto.uint32_field(5)
    param3: int = betterproto.uint32_field(8)
    reason: "GalleryStopReason" = betterproto.enum_field(3)
    used_time: int = betterproto.uint32_field(4)
    param1: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SummerTimeV2BoatInfo(betterproto.Message):
    param3: int = betterproto.uint32_field(10)
    used_time: int = betterproto.uint32_field(6)
    param1: int = betterproto.uint32_field(4)
    param2: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SummerTimeV2BoatSettleNotify(betterproto.Message):
    settle_info: "SummerTimeV2BoatGallerySettleInfo" = betterproto.message_field(2)
    stage_id: int = betterproto.uint32_field(14)
    gallery_id: int = betterproto.uint32_field(10)
    is_new_record: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class SummerTimeV2BoatStageInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(3)
    is_open: bool = betterproto.bool_field(14)
    stage_id: int = betterproto.uint32_field(2)
    best_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SummerTimeV2DungeonSettleInfo(betterproto.Message):
    unk3300_jhbchfhagfo: int = betterproto.uint32_field(12)
    unk3300_bnnmnckehho: int = betterproto.uint32_field(9)
    is_success: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class SummerTimeV2DungeonStageInfo(betterproto.Message):
    is_prev_dungeon_succeed: bool = betterproto.bool_field(4)
    is_open: bool = betterproto.bool_field(14)
    open_time: int = betterproto.uint32_field(13)
    stage_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SummerTimeV2Info(betterproto.Message):
    left_monsters: bool = betterproto.bool_field(7)
    unk3300_bnnmnckehho: int = betterproto.uint32_field(10)
    boat_stage_info_list: List["SummerTimeV2BoatStageInfo"] = betterproto.message_field(
        6
    )
    unk3300_jhbchfhagfo: int = betterproto.uint32_field(14)
    dungeon_stage_info_list: List[
        "SummerTimeV2DungeonStageInfo"
    ] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class SummerTimeV2RestartBoatGalleryReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SummerTimeV2RestartBoatGalleryRsp(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class SummerTimeV2RestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SummerTimeV2RestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class SumoAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint64_field(9)
    is_trial: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SumoDungeonAvatar(betterproto.Message):
    is_alive: bool = betterproto.bool_field(10)
    is_trial: bool = betterproto.bool_field(5)
    avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class SumoDungeonSettleNotify(betterproto.Message):
    kill_elite_monster_num: int = betterproto.uint32_field(13)
    stage_id: int = betterproto.uint32_field(3)
    is_new_record: bool = betterproto.bool_field(15)
    kill_monster_num: int = betterproto.uint32_field(4)
    difficulty_id: int = betterproto.uint32_field(2)
    final_score: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SumoDungeonTeam(betterproto.Message):
    dungeon_avatar_list: List["SumoDungeonAvatar"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SumoEnterDungeonNotify(betterproto.Message):
    unk3300_bnjbighijoc: int = betterproto.uint32_field(8)
    activity_id: int = betterproto.uint32_field(6)
    stage_id: int = betterproto.uint32_field(15)
    unk3300_cbamlhdmkjf: int = betterproto.uint32_field(7)
    unk3300_djbjacghgdm: int = betterproto.uint32_field(14)
    dungeon_team_list: List["SumoDungeonTeam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SumoInfo(betterproto.Message):
    kill_elite_monster_num: int = betterproto.uint32_field(3)
    kill_normal_monster_num: int = betterproto.uint32_field(5)
    score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SumoLeaveDungeonNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SumoRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SumoRestartDungeonRsp(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(10)
    point_id: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class SumoSaveTeamReq(betterproto.Message):
    difficulty_id: int = betterproto.uint32_field(14)
    team_list: List["SumoTeamData"] = betterproto.message_field(2)
    stage_id: int = betterproto.uint32_field(7)
    activity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SumoSaveTeamRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(9)
    difficulty_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(12)
    activity_id: int = betterproto.uint32_field(3)
    team_list: List["SumoTeamData"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class SumoSelectTeamAndEnterDungeonReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(4)
    team_list: List["SumoTeamData"] = betterproto.message_field(8)
    stage_id: int = betterproto.uint32_field(15)
    difficulty_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SumoSelectTeamAndEnterDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    difficulty_id: int = betterproto.uint32_field(14)
    activity_id: int = betterproto.uint32_field(13)
    team_list: List["SumoTeamData"] = betterproto.message_field(2)
    stage_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SumoSetNoSwitchPunishTimeNotify(betterproto.Message):
    unk3300_bnjbighijoc: int = betterproto.uint32_field(11)
    dungeon_team_list: List["SumoDungeonTeam"] = betterproto.message_field(3)
    unk3300_cbamlhdmkjf: int = betterproto.uint32_field(14)
    stage_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(7)
    unk3300_djbjacghgdm: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SumoStageData(betterproto.Message):
    max_score: int = betterproto.uint32_field(5)
    stage_id: int = betterproto.uint32_field(9)
    open_time: int = betterproto.uint32_field(14)
    team_list: List["SumoTeamData"] = betterproto.message_field(13)
    is_open: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class SumoSwitchTeamReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(2)
    activity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SumoSwitchTeamRsp(betterproto.Message):
    unk3300_bnjbighijoc: int = betterproto.uint32_field(9)
    activity_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(3)
    stage_id: int = betterproto.uint32_field(8)
    unk3300_djbjacghgdm: int = betterproto.uint32_field(13)
    dungeon_team_list: List["SumoDungeonTeam"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SumoTeamData(betterproto.Message):
    avatar_info_list: List["SumoAvatarInfo"] = betterproto.message_field(10)
    skill_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SyncAction(betterproto.Message):
    henpegmkbie: "BreakoutAction" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class SyncCreateConnect(betterproto.Message):
    uid_info_list: List["BreakoutSyncConnectUidInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class SyncFinishGame(betterproto.Message):
    is_win: bool = betterproto.bool_field(1)
    server_game_time: int = betterproto.uint64_field(5)
    chbjiolfkil: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class SyncPing(betterproto.Message):
    client_game_time: int = betterproto.uint64_field(12)
    server_game_time: int = betterproto.uint64_field(7)


@dataclass(eq=False, repr=False)
class SyncScenePlayTeamEntityNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    entity_info_list: List["PlayTeamEntityInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class SyncSnapShot(betterproto.Message):
    bllachfilmo: "BreakoutSnapShot" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SyncTeamEntityNotify(betterproto.Message):
    team_entity_info_list: List["TeamEntityInfo"] = betterproto.message_field(14)
    scene_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeAchievementGoalRewardReq(betterproto.Message):
    id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TakeAchievementGoalRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    item_list: List["ItemParam"] = betterproto.message_field(6)
    id_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TakeAchievementRewardReq(betterproto.Message):
    id_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TakeAchievementRewardRsp(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(7)
    id_list: List[int] = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class TakeAsterSpecialRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TakeAsterSpecialRewardRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class TakeBackGivingItemReq(betterproto.Message):
    giving_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class TakeBackGivingItemRsp(betterproto.Message):
    info: "ContentAuditInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class TakeBattlePassMissionPointReq(betterproto.Message):
    mission_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeBattlePassMissionPointRsp(betterproto.Message):
    mission_id_list: List[int] = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class TakeBattlePassRewardReq(betterproto.Message):
    take_option_list: List["BattlePassRewardTakeOption"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TakeBattlePassRewardRsp(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(3)
    retcode: int = betterproto.int32_field(5)
    take_option_list: List["BattlePassRewardTakeOption"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class TakeCityReputationExploreRewardReq(betterproto.Message):
    explore_id_list: List[int] = betterproto.uint32_field(14)
    city_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeCityReputationExploreRewardRsp(betterproto.Message):
    city_id: int = betterproto.uint32_field(4)
    explore_id_list: List[int] = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(12)
    item_list: List["ItemParam"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class TakeCityReputationLevelRewardReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(8)
    level: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeCityReputationLevelRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    item_list: List["ItemParam"] = betterproto.message_field(12)
    city_id: int = betterproto.uint32_field(8)
    level: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TakeCityReputationParentQuestReq(betterproto.Message):
    parent_quest_list: List[int] = betterproto.uint32_field(1)
    city_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TakeCityReputationParentQuestRsp(betterproto.Message):
    parent_quest_list: List[int] = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(6)
    city_id: int = betterproto.uint32_field(13)
    item_list: List["ItemParam"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class TakeCompoundOutputReq(betterproto.Message):
    compound_id: int = betterproto.uint32_field(13)
    compound_group_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeCompoundOutputRsp(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class TakeCoopRewardReq(betterproto.Message):
    reward_config_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TakeCoopRewardRsp(betterproto.Message):
    reward_config_id: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class TakeDeliveryDailyRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TakeDeliveryDailyRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    schedule_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TakeEffigyFirstPassRewardReq(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeEffigyFirstPassRewardRsp(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class TakeEffigyRewardReq(betterproto.Message):
    reward_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeEffigyRewardRsp(betterproto.Message):
    reward_index: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class TakeFirstShareRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeFirstShareRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class TakeFurnitureMakeReq(betterproto.Message):
    index: int = betterproto.uint32_field(6)
    is_fast_finish: bool = betterproto.bool_field(15)
    make_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TakeFurnitureMakeRsp(betterproto.Message):
    return_item_list: List["ItemParam"] = betterproto.message_field(7)
    furniture_make_slot: "FurnitureMakeSlot" = betterproto.message_field(6)
    make_id: int = betterproto.uint32_field(4)
    output_item_list: List["ItemParam"] = betterproto.message_field(1)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class TakeHuntingOfferReq(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(1)
    city_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class TakeHuntingOfferRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    city_id: int = betterproto.uint32_field(8)
    hunting_pair: "HuntingPair" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class TakeInvestigationRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TakeInvestigationRewardRsp(betterproto.Message):
    id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class TakeInvestigationTargetRewardReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TakeInvestigationTargetRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    quest_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TakeMaterialDeleteReturnReq(betterproto.Message):
    type: "MaterialDeleteReturnType" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class TakeMaterialDeleteReturnRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class TakeoffEquipReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(8)
    slot: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeoffEquipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    slot: int = betterproto.uint32_field(3)
    avatar_guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class TakeOfferingLevelRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(2)
    offering_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TakeOfferingLevelRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    offering_id: int = betterproto.uint32_field(14)
    take_level: int = betterproto.uint32_field(1)
    item_list: List["ItemParam"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class TakePlayerLevelRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TakePlayerLevelRewardRsp(betterproto.Message):
    level: int = betterproto.uint32_field(7)
    reward_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class TakeRegionSearchRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(13)
    search_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class TakeRegionSearchRewardRsp(betterproto.Message):
    id: int = betterproto.uint32_field(15)
    search_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class TakeResinCardDailyRewardReq(betterproto.Message):
    product_config_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TakeResinCardDailyRewardRsp(betterproto.Message):
    item_vec: List["ItemParam"] = betterproto.message_field(15)
    product_config_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class TakeReunionFirstGiftRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeReunionFirstGiftRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    reward_id: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class TakeReunionMissionRewardReq(betterproto.Message):
    mission_id: int = betterproto.uint32_field(8)
    reward_index: int = betterproto.uint32_field(15)
    reward_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TakeReunionMissionRewardRsp(betterproto.Message):
    mission_info: "ReunionMissionInfo" = betterproto.message_field(12)
    reward_index: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(4)
    reward_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TakeReunionSignInRewardReq(betterproto.Message):
    reward_day: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeReunionSignInRewardRsp(betterproto.Message):
    sign_in_info: "ReunionSignInInfo" = betterproto.message_field(5)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class TakeReunionWatcherRewardReq(betterproto.Message):
    watcher_id: int = betterproto.uint32_field(4)
    mission_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TakeReunionWatcherRewardRsp(betterproto.Message):
    watcher_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(1)
    mission_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TanukiTravelActivityInfo(betterproto.Message):
    finished_level_index: int = betterproto.uint32_field(11)
    left_monsters: bool = betterproto.bool_field(2)
    tanuki_travel_level_data_list: List[
        "TanukiTravelLevelData"
    ] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class TanukiTravelFinishGuideQuestNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TanukiTravelLevelData(betterproto.Message):
    is_finish: bool = betterproto.bool_field(2)
    route_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class TaskVar(betterproto.Message):
    value_list: List[int] = betterproto.int32_field(15)
    key: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TaskVarNotify(betterproto.Message):
    task_var_list: List["TaskVar"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class TeamChainDungeonInfoNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class TeamChainEnterDungeonReq(betterproto.Message):
    gocbaipjdlk: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class TeamChainEnterDungeonRsp(betterproto.Message):
    team_info_list: List["Fbkjenfaakn"] = betterproto.message_field(11)
    stage_id: int = betterproto.uint32_field(13)
    difficulty: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TeamChainInfo(betterproto.Message):
    stage_data_list: List["Hcamgideafe"] = betterproto.message_field(10)
    jimipcpbhek: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class TeamChainRestartDungeonReq(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class TeamChainRestartDungeonRsp(betterproto.Message):
    team_info_list: List["Fbkjenfaakn"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TeamChainSettleInfo(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(13)
    stage_id: int = betterproto.uint32_field(4)
    total_score: int = betterproto.uint32_field(3)
    difficulty: int = betterproto.uint32_field(15)
    score_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TeamChainTakeCostumeRewardReq(betterproto.Message):
    ehbfihcdoli: List[int] = betterproto.uint32_field(12)
    stage_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TeamChainTakeCostumeRewardRsp(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TeamEnterSceneInfo(betterproto.Message):
    team_entity_id: int = betterproto.uint32_field(4)
    ability_control_block: "AbilityControlBlock" = betterproto.message_field(12)
    team_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class TeamEntityInfo(betterproto.Message):
    team_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(8)
    team_entity_id: int = betterproto.uint32_field(2)
    authority_peer_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TeamResonanceChangeNotify(betterproto.Message):
    info_list: List["AvatarTeamResonanceInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ThirdStageInfo(betterproto.Message):
    left_time: int = betterproto.uint32_field(7)
    is_success: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class ThunderBirdFeatherInfo(betterproto.Message):
    entity_id_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TokenChange(betterproto.Message):
    card_guid: int = betterproto.uint32_field(6)
    unk3300_llghgealddi: int = betterproto.uint32_field(5)
    unk3300_lcnkbfbjdfm: int = betterproto.uint32_field(15)
    token_type: int = betterproto.uint32_field(8)
    reason: "GcgReason" = betterproto.enum_field(12)


@dataclass(eq=False, repr=False)
class ToTheMoonAddObstacleReq(betterproto.Message):
    obstacle: "ToTheMoonObstacleInfo" = betterproto.message_field(6)
    scene_id: int = betterproto.uint32_field(7)
    query_id: int = betterproto.int32_field(5)
    use_edge: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class ToTheMoonAddObstacleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    query_id: int = betterproto.int32_field(8)
    dynamic_nodes: "DynamicNodes" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ToTheMoonEnterSceneReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(12)
    version: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ToTheMoonEnterSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class ToTheMoonObstacleInfo(betterproto.Message):
    center: "Vector" = betterproto.message_field(3)
    handle_id: int = betterproto.int32_field(5)
    rotation: "MathQuaternion" = betterproto.message_field(8)
    half_extents: "Vector" = betterproto.message_field(9)
    type: "ToTheMoonObstacleInfoShapeType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ToTheMoonObstaclesModifyNotify(betterproto.Message):
    use_edge: bool = betterproto.bool_field(10)
    scene_id: int = betterproto.uint32_field(11)
    remove_obstacle_ids: List[int] = betterproto.int32_field(4)
    add_obstacles: List["ToTheMoonObstacleInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class ToTheMoonPingNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ToTheMoonQueryPathReq(betterproto.Message):
    query_type: "OptionType" = betterproto.enum_field(15)
    query_id: int = betterproto.int32_field(3)
    source_pos: "Vector" = betterproto.message_field(12)
    scene_id: int = betterproto.uint32_field(6)
    astar_method: "AStarMethod" = betterproto.enum_field(1)
    filter_type: "FilterType" = betterproto.enum_field(8)
    fuzzy_range: int = betterproto.int32_field(7)
    unk3300_ofgonamnijg: bool = betterproto.bool_field(10)
    unk3300_bblmbiliogp: bool = betterproto.bool_field(2)
    destination_pos: "Vector" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ToTheMoonQueryPathRsp(betterproto.Message):
    query_id: int = betterproto.int32_field(11)
    query_status: "PathStatusType" = betterproto.enum_field(15)
    index: List[int] = betterproto.int64_field(10)
    retcode: int = betterproto.int32_field(1)
    corners: List["Vector"] = betterproto.message_field(3)
    level: List[int] = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class ToTheMoonRemoveObstacleReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(2)
    query_id: int = betterproto.int32_field(13)
    handle: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class ToTheMoonRemoveObstacleRsp(betterproto.Message):
    query_id: int = betterproto.int32_field(4)
    dynamic_nodes: "DynamicNodes" = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class TowerAllDataReq(betterproto.Message):
    is_interact: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class TowerAllDataRsp(betterproto.Message):
    unk3300_ohchcjgjidk: int = betterproto.uint32_field(7)
    cur_level_record: "TowerCurLevelRecord" = betterproto.message_field(1)
    is_first_interact: bool = betterproto.bool_field(8)
    tower_floor_record_list: List["TowerFloorRecord"] = betterproto.message_field(6)
    next_schedule_change_time: int = betterproto.uint32_field(15)
    tower_schedule_id: int = betterproto.uint32_field(9)
    floor_open_time_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    valid_tower_record_num: int = betterproto.uint32_field(5)
    skip_floor_granted_reward_item_map: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    schedule_start_time: int = betterproto.uint32_field(591)
    last_schedule_monthly_brief: "TowerMonthlyBrief" = betterproto.message_field(1482)
    unk3300_lekodcfpinj: int = betterproto.uint32_field(10)
    unk3300_hcdfjbhmhhf: int = betterproto.uint32_field(3)
    unk3300_jbackendhdg: int = betterproto.uint32_field(14)
    is_finished_entrance_floor: bool = betterproto.bool_field(2)
    monthly_brief: "TowerMonthlyBrief" = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class TowerBriefDataNotify(betterproto.Message):
    is_finished_entrance_floor: bool = betterproto.bool_field(2)
    total_star_num: int = betterproto.uint32_field(5)
    tower_schedule_id: int = betterproto.uint32_field(3)
    last_level_index: int = betterproto.uint32_field(4)
    schedule_start_time: int = betterproto.uint32_field(13)
    next_schedule_change_time: int = betterproto.uint32_field(12)
    last_floor_index: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class TowerBuffSelectReq(betterproto.Message):
    tower_buff_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TowerBuffSelectRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    tower_buff_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TowerCurLevelRecord(betterproto.Message):
    tower_team_list: List["TowerTeam"] = betterproto.message_field(13)
    cur_level_index: int = betterproto.uint32_field(14)
    buff_id_list: List[int] = betterproto.uint32_field(12)
    is_upper_part: bool = betterproto.bool_field(1)
    is_empty: bool = betterproto.bool_field(7)
    cur_floor_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TowerCurLevelRecordChangeNotify(betterproto.Message):
    cur_level_record: "TowerCurLevelRecord" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class TowerDailyRewardProgressChangeNotify(betterproto.Message):
    unk3300_ohchcjgjidk: int = betterproto.uint32_field(4)
    unk3300_jbackendhdg: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TowerEnterLevelReq(betterproto.Message):
    enter_point_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TowerEnterLevelRsp(betterproto.Message):
    level_index: int = betterproto.uint32_field(15)
    tower_buff_id_list: List[int] = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(3)
    floor_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TowerFightRecordPair(betterproto.Message):
    data: int = betterproto.uint32_field(12)
    avatar_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TowerFloorRecord(betterproto.Message):
    floor_star_reward_progress: int = betterproto.uint32_field(4)
    passed_level_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    passed_level_record_list: List["TowerLevelRecord"] = betterproto.message_field(7)
    floor_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TowerFloorRecordChangeNotify(betterproto.Message):
    is_finished_entrance_floor: bool = betterproto.bool_field(11)
    tower_floor_record_list: List["TowerFloorRecord"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class TowerGetFloorStarRewardReq(betterproto.Message):
    floor_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TowerGetFloorStarRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    floor_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TowerLevelEndNotify(betterproto.Message):
    finished_star_cond_list: List[int] = betterproto.uint32_field(9)
    next_floor_id: int = betterproto.uint32_field(12)
    is_success: bool = betterproto.bool_field(15)
    reward_item_list: List["ItemParam"] = betterproto.message_field(8)
    continue_state: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TowerLevelRecord(betterproto.Message):
    level_id: int = betterproto.uint32_field(11)
    satisfied_cond_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TowerLevelStarCondData(betterproto.Message):
    unk3300_jgolbfmjbcl: int = betterproto.uint32_field(5)
    unk3300_kbcfdfoajmm: bool = betterproto.bool_field(1)
    unk3300_cpbcnackaak: bool = betterproto.bool_field(2)
    cond_value: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TowerLevelStarCondNotify(betterproto.Message):
    floor_id: int = betterproto.uint32_field(13)
    level_index: int = betterproto.uint32_field(4)
    cond_data_list: List["TowerLevelStarCondData"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class TowerMiddleLevelChangeTeamNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TowerMonthlyBrief(betterproto.Message):
    best_level_index: int = betterproto.uint32_field(11)
    tower_schedule_id: int = betterproto.uint32_field(7)
    total_star_count: int = betterproto.uint32_field(14)
    best_floor_index: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TowerMonthlyCombatRecord(betterproto.Message):
    unk3300_kmclphedncj: "TowerFightRecordPair" = betterproto.message_field(10)
    unk3300_kikpmnpkldg: "TowerFightRecordPair" = betterproto.message_field(8)
    unk3300_oallhjpboho: "TowerFightRecordPair" = betterproto.message_field(1)
    unk3300_eigegogfjnd: "TowerFightRecordPair" = betterproto.message_field(11)
    unk3300_ccfhofciepf: "TowerFightRecordPair" = betterproto.message_field(4)
    most_reveal_avatar_list: List["TowerFightRecordPair"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class TowerMonthlyDetail(betterproto.Message):
    monthly_brief: "TowerMonthlyBrief" = betterproto.message_field(5)
    monthly_combat_record: "TowerMonthlyCombatRecord" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TowerRecordHandbookReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TowerRecordHandbookRsp(betterproto.Message):
    monthly_detail_list: List["TowerMonthlyDetail"] = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class TowerSurrenderReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TowerSurrenderRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class TowerTeam(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(4)
    tower_team_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TowerTeamSelectReq(betterproto.Message):
    tower_team_list: List["TowerTeam"] = betterproto.message_field(1)
    floor_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TowerTeamSelectRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class TrackingIoInfo(betterproto.Message):
    rydevicetype: str = betterproto.string_field(2)
    client_tz: str = betterproto.string_field(6)
    unk3300_ccogbicmhkg: str = betterproto.string_field(15)
    unk3300_nmdnlhlakam: str = betterproto.string_field(11)
    unk3300_pibfpdamjle: str = betterproto.string_field(5)
    unk3300_djhkhefpcdk: str = betterproto.string_field(9)
    unk3300_cnpigdoejpb: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class TreasureMapActivityDetailInfo(betterproto.Message):
    is_mp_challenge_touched: bool = betterproto.bool_field(6)
    total_mp_spot_num: int = betterproto.uint32_field(14)
    region_info_list: List["TreasureMapRegionInfo"] = betterproto.message_field(7)
    currency_num: int = betterproto.uint32_field(1)
    min_open_player_level: int = betterproto.uint32_field(3)
    active_region_index: int = betterproto.uint32_field(2)
    bonus_challenge_list: List[
        "TreasureMapBonusChallengeInfo"
    ] = betterproto.message_field(15)
    preview_reward_id: int = betterproto.uint32_field(12)
    treasure_close_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TreasureMapBonusChallengeInfo(betterproto.Message):
    is_active: bool = betterproto.bool_field(5)
    fragment_map: Dict[int, bool] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_BOOL
    )
    solution_id: int = betterproto.uint32_field(14)
    is_done: bool = betterproto.bool_field(2)
    config_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TreasureMapBonusChallengeNotify(betterproto.Message):
    info: "TreasureMapBonusChallengeInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class TreasureMapCurrencyNotify(betterproto.Message):
    currency_num: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class TreasureMapDetectorData(betterproto.Message):
    spot_list: List["Vector"] = betterproto.message_field(15)
    region_id: int = betterproto.uint32_field(6)
    radius: int = betterproto.uint32_field(7)
    center_pos: "Vector" = betterproto.message_field(8)
    is_region_detected: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class TreasureMapDetectorDataNotify(betterproto.Message):
    data: "TreasureMapDetectorData" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class TreasureMapGuideTaskDoneNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TreasureMapHostInfoNotify(betterproto.Message):
    mp_challenge_region_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TreasureMapInfo(betterproto.Message):
    is_mp_challenge_touched: bool = betterproto.bool_field(6)
    total_mp_spot_num: int = betterproto.uint32_field(14)
    region_info_list: List["TreasureMapRegionInfo"] = betterproto.message_field(7)
    currency_num: int = betterproto.uint32_field(1)
    min_open_player_level: int = betterproto.uint32_field(3)
    active_region_index: int = betterproto.uint32_field(2)
    bonus_challenge_list: List[
        "TreasureMapBonusChallengeInfo"
    ] = betterproto.message_field(15)
    preview_reward_id: int = betterproto.uint32_field(12)
    treasure_close_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TreasureMapMpChallengeNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TreasureMapPreTaskDoneNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TreasureMapRegionActiveNotify(betterproto.Message):
    active_region_index: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class TreasureMapRegionInfo(betterproto.Message):
    unk3300_lkemedpmigm: int = betterproto.uint32_field(5)
    unk3300_mnekjilfhoa: int = betterproto.uint32_field(12)
    start_time: int = betterproto.uint32_field(6)
    scene_id: int = betterproto.uint32_field(1)
    region_id: int = betterproto.uint32_field(14)
    region_radius: int = betterproto.uint32_field(8)
    unk3300_hhbhlphlhil: bool = betterproto.bool_field(15)
    unk3300_nibjoajlcji: bool = betterproto.bool_field(2)
    region_center_pos: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class TreasureMapRegionInfoNotify(betterproto.Message):
    region_info: "TreasureMapRegionInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class TreasureSeelieCollectOrbsNotify(betterproto.Message):
    current_num: int = betterproto.uint32_field(1)
    total_num: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TreasureSeelieInfo(betterproto.Message):
    progress: int = betterproto.uint32_field(11)
    goal: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TreasureSeelieRegionData(betterproto.Message):
    is_done: bool = betterproto.bool_field(8)
    jabbjfmhomi: int = betterproto.uint32_field(9)
    region_radius: float = betterproto.float_field(12)
    open_time: int = betterproto.uint32_field(5)
    is_open: bool = betterproto.bool_field(1)
    region_center_pos: "Vector" = betterproto.message_field(6)
    hljigeeodbh: int = betterproto.uint32_field(10)
    scene_id: int = betterproto.uint32_field(4)
    eipilegbijp: int = betterproto.uint32_field(3)
    region_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class TrialAvatarActivityRewardDetailInfo(betterproto.Message):
    trial_avatar_index_id: int = betterproto.uint32_field(5)
    opecleddeom: bool = betterproto.bool_field(2)
    reward_id: int = betterproto.uint32_field(7)
    jbghkencdaj: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class TrialAvatarFirstPassDungeonNotify(betterproto.Message):
    trial_avatar_index_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TrialAvatarGrantRecord(betterproto.Message):
    dglgipiglnd: int = betterproto.uint32_field(1)
    calgbbolcpn: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TrialAvatarInDungeonIndexNotify(betterproto.Message):
    trial_avatar_index_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TrialAvatarInfo(betterproto.Message):
    trial_avatar_id: int = betterproto.uint32_field(1)
    trial_equip_list: List["Item"] = betterproto.message_field(2)
    grant_record: "TrialAvatarGrantRecord" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TrifleItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    material: "Material" = betterproto.message_field(5, group="detail")
    equip: "Equip" = betterproto.message_field(6, group="detail")
    furniture: "Furniture" = betterproto.message_field(7, group="detail")


@dataclass(eq=False, repr=False)
class TriggerCreateGadgetToEquipPartNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(3)
    gadget_id: int = betterproto.uint32_field(5)
    gadget_entity_id: int = betterproto.uint32_field(4)
    equip_part: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class TriggerRoguelikeCurseNotify(betterproto.Message):
    is_trigger_curse: bool = betterproto.bool_field(7)
    unk3300_polienbcnlf: int = betterproto.uint32_field(13)
    effect_param_list: List[int] = betterproto.uint32_field(6)
    unk3300_ljhjibdpbbc: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TriggerRoguelikeRuneReq(betterproto.Message):
    rune_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TriggerRoguelikeRuneRsp(betterproto.Message):
    available_count: int = betterproto.uint32_field(11)
    rune_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class TryCustomDungeonReq(betterproto.Message):
    room_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TryCustomDungeonRsp(betterproto.Message):
    room_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class TryEnterHomeReq(betterproto.Message):
    target_point: int = betterproto.uint32_field(11)
    is_transfer_to_safe_point: bool = betterproto.bool_field(4)
    target_uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TryEnterHomeRsp(betterproto.Message):
    target_uid: int = betterproto.uint32_field(15)
    param_list: List[int] = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class TryEnterNextRogueDiaryDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TryEnterNextRogueDiaryDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class TryInterruptRogueDiaryDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TryInterruptRogueDiaryDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class UgcActivityDetailInfo(betterproto.Message):
    is_ugc_feature_closed: bool = betterproto.bool_field(5)
    official_custom_dungeon_list: List[
        "OfficialCustomDungeon"
    ] = betterproto.message_field(10)
    is_enable_ugc: bool = betterproto.bool_field(15)
    custom_dungeon_group_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UgcInfo(betterproto.Message):
    is_ugc_feature_closed: bool = betterproto.bool_field(5)
    official_custom_dungeon_list: List[
        "OfficialCustomDungeon"
    ] = betterproto.message_field(10)
    is_enable_ugc: bool = betterproto.bool_field(15)
    custom_dungeon_group_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UgcMusicBriefInfo(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(8)
    unk3300_ccmmpahimdo: int = betterproto.uint32_field(88)
    unk3300_plnofohfape: int = betterproto.uint32_field(15)
    unk3300_hkbhaimobko: List[int] = betterproto.uint32_field(1363)
    unk3300_fkigpajfplg: bool = betterproto.bool_field(5)
    import_from_ugc_guid: int = betterproto.uint64_field(6)
    music_id: int = betterproto.uint32_field(14)
    unk3300_jeebfpfehhg: List[int] = betterproto.uint32_field(1062)
    unk3300_mbkdgbnfpoa: int = betterproto.uint32_field(1837)
    unk3300_ojokfbjalij: int = betterproto.uint32_field(7)
    unk3300_egigiookbab: int = betterproto.uint32_field(287)
    unk3300_obbmcfadnin: int = betterproto.uint32_field(2)
    unk3300_pbenmahhgil: int = betterproto.uint32_field(9)
    unk3300_ncdkcnolgkb: bool = betterproto.bool_field(4)
    version: int = betterproto.uint32_field(1)
    creator_nickname: str = betterproto.string_field(3)
    unk3300_gdnapnainba: bool = betterproto.bool_field(11)
    max_score: int = betterproto.uint32_field(12)
    unk3300_kmmblimkjcm: int = betterproto.uint32_field(10)
    is_psn_platform: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class UgcMusicNote(betterproto.Message):
    start_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class UgcMusicTrack(betterproto.Message):
    music_note_list: List["UgcMusicNote"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class UgcNotify(betterproto.Message):
    unk3300_ibldingjjfi: bool = betterproto.bool_field(13)
    unk3300_kpabjpmlhcd: bool = betterproto.bool_field(5)
    is_ugc_feature_closed: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class Uint32(betterproto.Message):
    minigame_id: int = betterproto.uint32_field(14)
    is_open: bool = betterproto.bool_field(3)
    open_time: int = betterproto.uint32_field(6)
    balloon_info: "BalloonInfo" = betterproto.message_field(13, group="detail")
    fall_info: "FallInfo" = betterproto.message_field(11, group="detail")
    music_info: "MusicInfo" = betterproto.message_field(9, group="detail")


@dataclass(eq=False, repr=False)
class Uint32Pair(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UnfreezeGroupLimitNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(10)
    point_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class UnionCmd(betterproto.Message):
    message_id: int = betterproto.uint32_field(3)
    body: bytes = betterproto.bytes_field(5)


@dataclass(eq=False, repr=False)
class UnionCmdNotify(betterproto.Message):
    cmd_list: List["UnionCmd"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class Unk3300Adhencifkni(betterproto.Message):
    time_stamp: int = betterproto.uint64_field(14)
    controller_id: int = betterproto.uint32_field(4)
    begin_time: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class Unk3300Dgbncdeiifc(betterproto.Message):
    monster_id_list: List[int] = betterproto.uint32_field(8)
    pgnajgkggih: List["PlatformType"] = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class Unk3300Icagmocoalo(betterproto.Message):
    match_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class UnlockAvatarTalentReq(betterproto.Message):
    talent_id: int = betterproto.uint32_field(9)
    avatar_guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class UnlockAvatarTalentRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    avatar_guid: int = betterproto.uint64_field(13)
    talent_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UnlockCoopChapterReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UnlockCoopChapterRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    chapter_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class UnlockedFurnitureFormulaDataNotify(betterproto.Message):
    is_all: bool = betterproto.bool_field(14)
    furniture_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class UnlockedFurnitureSuiteDataNotify(betterproto.Message):
    furniture_suite_id_list: List[int] = betterproto.uint32_field(12)
    is_all: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class UnlockNameCardNotify(betterproto.Message):
    name_card_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class UnlockPersonalLineReq(betterproto.Message):
    personal_line_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class UnlockPersonalLineRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    personal_line_id: int = betterproto.uint32_field(6)
    level: int = betterproto.uint32_field(3, group="param")
    chapter_id: int = betterproto.uint32_field(14, group="param")


@dataclass(eq=False, repr=False)
class UnlockTransPointReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(4)
    scene_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class UnlockTransPointRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class UnmarkEntityInMinMapNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UpdateAbilityCreatedMovingPlatformNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(4)
    op_type: "OpType" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class UpdateController(betterproto.Message):
    allow_controller_map: List["Uint32Pair"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class UpdatePlayerShowAvatarListReq(betterproto.Message):
    show_avatar_id_list: List[int] = betterproto.uint32_field(11)
    is_show_avatar: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class UpdatePlayerShowAvatarListRsp(betterproto.Message):
    show_avatar_id_list: List[int] = betterproto.uint32_field(15)
    is_show_avatar: bool = betterproto.bool_field(14)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class UpdatePlayerShowNameCardListReq(betterproto.Message):
    show_name_card_id_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class UpdatePlayerShowNameCardListRsp(betterproto.Message):
    show_name_card_id_list: List[int] = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class UpdatePs4BlockListReq(betterproto.Message):
    psn_id_list: List[str] = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class UpdatePs4BlockListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class UpdatePs4FriendListNotify(betterproto.Message):
    psn_id_list: List[str] = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class UpdatePs4FriendListReq(betterproto.Message):
    psn_id_list: List[str] = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class UpdatePs4FriendListRsp(betterproto.Message):
    psn_id_list: List[str] = betterproto.string_field(7)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class UpdateRedPointNotify(betterproto.Message):
    red_point_list: List["RedPointData"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class UpdateReunionWatcherNotify(betterproto.Message):
    mission_id: int = betterproto.uint32_field(12)
    watcher_info: "ReunionWatcherInfo" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class UpdateSalvageBundleMarkReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(5)
    challenge_type: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class UpdateSalvageBundleMarkRsp(betterproto.Message):
    challenge_type: int = betterproto.uint32_field(6)
    stage_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class UpgradeRoguelikeShikigamiReq(betterproto.Message):
    shikigami_group_id: int = betterproto.uint32_field(10)
    upgrade_level: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class UpgradeRoguelikeShikigamiRsp(betterproto.Message):
    cur_level: int = betterproto.uint32_field(4)
    shikigami_group_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class UseItemReq(betterproto.Message):
    guid: int = betterproto.uint64_field(8)
    option_idx: int = betterproto.uint32_field(14)
    count: int = betterproto.uint32_field(12)
    is_enter_mp_dungeon_team: bool = betterproto.bool_field(13)
    target_guid: int = betterproto.uint64_field(6)


@dataclass(eq=False, repr=False)
class UseItemRsp(betterproto.Message):
    guid: int = betterproto.uint64_field(12)
    retcode: int = betterproto.int32_field(7)
    item_id: int = betterproto.uint32_field(4)
    target_guid: int = betterproto.uint64_field(11)
    option_idx: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UseMiracleRingReq(betterproto.Message):
    pos: "Vector" = betterproto.message_field(7)
    rot: "Vector" = betterproto.message_field(2)
    miracle_ring_op_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UseMiracleRingRsp(betterproto.Message):
    miracle_ring_op_type: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class UseSkill(betterproto.Message):
    card_guid: int = betterproto.uint32_field(11)
    skill_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class UseSkillEnd(betterproto.Message):
    skill_id: int = betterproto.uint32_field(5)
    card_guid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class UseWidgetCreateGadgetReq(betterproto.Message):
    rot: "Vector" = betterproto.message_field(9)
    material_id: int = betterproto.uint32_field(7)
    pos: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UseWidgetCreateGadgetRsp(betterproto.Message):
    material_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class UseWidgetRetractGadgetReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class UseWidgetRetractGadgetRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class Vector(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class Vector3Int(betterproto.Message):
    x: int = betterproto.int32_field(1)
    y: int = betterproto.int32_field(2)
    z: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class VectorPlane(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class VehicleInfo(betterproto.Message):
    member_list: List["VehicleMember"] = betterproto.message_field(1)
    owner_uid: int = betterproto.uint32_field(2)
    cur_stamina: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class VehicleInteractReq(betterproto.Message):
    pos: int = betterproto.uint32_field(14)
    interact_type: "VehicleInteractType" = betterproto.enum_field(11)
    entity_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class VehicleInteractRsp(betterproto.Message):
    member: "VehicleMember" = betterproto.message_field(15)
    entity_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(10)
    interact_type: "VehicleInteractType" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class VehicleLocationInfo(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(11)
    gadget_id: int = betterproto.uint32_field(7)
    pos: "Vector" = betterproto.message_field(12)
    entity_id: int = betterproto.uint32_field(2)
    rot: "Vector" = betterproto.message_field(14)
    cur_hp: float = betterproto.float_field(5)
    owner_uid: int = betterproto.uint32_field(9)
    max_hp: float = betterproto.float_field(6)


@dataclass(eq=False, repr=False)
class VehicleMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    pos: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class VehicleStaminaNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(12)
    cur_stamina: float = betterproto.float_field(15)


@dataclass(eq=False, repr=False)
class ViewCodexReq(betterproto.Message):
    type_data_list: List["CodexTypeData"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ViewCodexRsp(betterproto.Message):
    unk3300_cbgdaaobgnb: List[int] = betterproto.uint32_field(14)
    recent_viewed_pushtips_list: List[int] = betterproto.uint32_field(13)
    type_data_list: List["CodexTypeData"] = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(10)
    unk3300_idnolalhffa: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ViewLanternProjectionLevelTipsReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ViewLanternProjectionLevelTipsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class ViewLanternProjectionTipsReq(betterproto.Message):
    is_input_tips: bool = betterproto.bool_field(2)
    input_type: "ClientInputType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ViewLanternProjectionTipsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class VintageBoothUsedItemData(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(12)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class VintageCampChallengeLevelData(betterproto.Message):
    is_open: bool = betterproto.bool_field(11)
    is_finish: bool = betterproto.bool_field(6)
    stage_id: int = betterproto.uint32_field(8)
    level_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class VintageCampChallengeStageData(betterproto.Message):
    camp_level_map: Dict[int, "VintageCampChallengeLevelData"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    is_open: bool = betterproto.bool_field(13)
    max_finished_level: int = betterproto.uint32_field(7)
    is_finish: bool = betterproto.bool_field(4)
    stage_id: int = betterproto.uint32_field(9)
    open_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class VintageCampGroupBundleRegisterNotify(betterproto.Message):
    group_bundle_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class VintageCampStageFinishNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class VintageDecorateBoothReq(betterproto.Message):
    combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(11)
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class VintageDecorateBoothRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class VintageHuntingFirstStageInfo(betterproto.Message):
    unk3300_nilgnhopgld: int = betterproto.uint32_field(14)
    unk3300_hikadhblpeb: int = betterproto.uint32_field(1)
    unk3300_ipajlkobdkc: int = betterproto.uint32_field(12)
    score: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class VintageHuntingInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(2)
    first_stage_info: "FirstStageInfo" = betterproto.message_field(14, group="info")
    second_stage_info: "SecondStageInfo" = betterproto.message_field(11, group="info")
    third_stage_info: "ThirdStageInfo" = betterproto.message_field(9, group="info")


@dataclass(eq=False, repr=False)
class VintageHuntingSecondStageInfo(betterproto.Message):
    total_num: int = betterproto.uint32_field(15)
    capture_animal_num: int = betterproto.uint32_field(11)
    homaiophceb: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class VintageHuntingStageData(betterproto.Message):
    is_open: bool = betterproto.bool_field(12)
    is_finish: bool = betterproto.bool_field(11)
    stage_id: int = betterproto.uint32_field(10)
    open_time: int = betterproto.uint32_field(1)
    record_value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class VintageHuntingStartGalleryReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class VintageHuntingStartGalleryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class VintageHuntingThirdStageInfo(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class VintageInfo(betterproto.Message):
    left_monsters: bool = betterproto.bool_field(12)
    booth_data: "VintageBoothUsedItemData" = betterproto.message_field(15)
    unk3300_ehhpfkiokoo: Dict[int, "VintageHuntingStageData"] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    unk3300_pciigpjjhgf: Dict[int, "VintagePresentStageData"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    unk3300_npkmdfclgbj: Dict[
        int, "VintageCampChallengeStageData"
    ] = betterproto.map_field(3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    market_info: "VintageMarketInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class VintageMarketDealInfo(betterproto.Message):
    trader_item_info_map: Dict[int, "VintageMarketTraderInfo"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class VintageMarketDeliverItemReq(betterproto.Message):
    deliver_item_list: List["ItemParam"] = betterproto.message_field(15)
    trader_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class VintageMarketDeliverItemRsp(betterproto.Message):
    trader_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class VintageMarketDividendFinishNotify(betterproto.Message):
    coin_a: int = betterproto.uint32_field(11)
    coin_c: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class VintageMarketFinishStorePlayReq(betterproto.Message):
    store_round: int = betterproto.uint32_field(8)
    store_op_list: List["VintageMarketStoreOpInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class VintageMarketFinishStorePlayRsp(betterproto.Message):
    unk3300_dgecjokmdgn: int = betterproto.uint32_field(4)
    unk3300_djilelfhfhj: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(11)
    unk3300_hjihioigapp: List[int] = betterproto.uint32_field(2)
    unk3300_dlnfcbpdbbh: int = betterproto.uint32_field(15)
    unk3300_gcdnopjeibg: int = betterproto.uint32_field(7)
    store_income_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    store_round: int = betterproto.uint32_field(6)
    unk3300_bdaionepkik: List[int] = betterproto.uint32_field(5)
    unk3300_ocimkepjool: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class VintageMarketInfo(betterproto.Message):
    unlock_strategy_list: List[int] = betterproto.uint32_field(15)
    store_round: int = betterproto.uint32_field(2)
    unk3300_cokbokaocnj: List[int] = betterproto.uint32_field(1216)
    bargain_info_map: Dict[int, bool] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_BOOL
    )
    unk3300_abhhacbdcfi: List[int] = betterproto.uint32_field(3)
    unk3300_edbjlbicejf: List[int] = betterproto.uint32_field(1)
    unk3300_kjdefibkbpe: bool = betterproto.bool_field(5)
    unk3300_nmhhgnpkbel: bool = betterproto.bool_field(1164)
    unk3300_fopkaiiamfm: int = betterproto.uint32_field(255)
    unk3300_lmnlhhpmamn: int = betterproto.uint32_field(12)
    unk3300_alhlenelieo: bool = betterproto.bool_field(1035)
    unk3300_pamkpaocjjj: bool = betterproto.bool_field(4)
    unk3300_icjocdglffd: bool = betterproto.bool_field(10)
    deal_info: "VintageMarketDealInfo" = betterproto.message_field(14)
    unk3300_ndfhaghbcfn: bool = betterproto.bool_field(6)
    open_store_list: List["VintageMarketStoreInfo"] = betterproto.message_field(7)
    unk3300_aiambbodlbo: List[int] = betterproto.uint32_field(13)
    help_skill_id: int = betterproto.uint32_field(1222)
    unk3300_fjdimcjeaob: bool = betterproto.bool_field(8)
    unk3300_hhkkeddigla: int = betterproto.uint32_field(11)
    unk3300_acjlanlbcgk: int = betterproto.uint32_field(458)
    unk3300_nbnojjbnjpb: bool = betterproto.bool_field(1190)


@dataclass(eq=False, repr=False)
class VintageMarketNpcEventFinishNotify(betterproto.Message):
    unlock_strategy_list: List[int] = betterproto.uint32_field(15)
    coin_a: int = betterproto.uint32_field(12)
    coin_c: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class VintageMarketStartStorePlayReq(betterproto.Message):
    store_round: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class VintageMarketStartStorePlayRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    unk3300_lccnekgonfg: int = betterproto.uint32_field(1)
    unk3300_adjkiijfnme: int = betterproto.uint32_field(13)
    store_round: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class VintageMarketStoreChooseStrategyReq(betterproto.Message):
    store_id: int = betterproto.uint32_field(10)
    strategy_list: List[int] = betterproto.uint32_field(2)
    store_op_list: List["VintageMarketStoreOpInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class VintageMarketStoreChooseStrategyRsp(betterproto.Message):
    strategy_list: List[int] = betterproto.uint32_field(7)
    store_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class VintageMarketStoreInfo(betterproto.Message):
    strategy_list: List[int] = betterproto.uint32_field(2)
    store_id: int = betterproto.uint32_field(8)
    slot_count: int = betterproto.uint32_field(7)
    unk3300_hnbghccenia: List[int] = betterproto.uint32_field(10)
    unk3300_odllankoend: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class VintageMarketStoreOpInfo(betterproto.Message):
    help_uid: int = betterproto.uint32_field(14)
    help_skill_id: int = betterproto.uint32_field(13)
    add_attr_list: List[int] = betterproto.uint32_field(3)
    store_id: int = betterproto.uint32_field(2)
    strategy_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class VintageMarketStoreUnlockSlotReq(betterproto.Message):
    store_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class VintageMarketStoreUnlockSlotRsp(betterproto.Message):
    store_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(8)
    slot_count: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class VintageMarketStoreViewStrategyReq(betterproto.Message):
    strategy_id: int = betterproto.uint32_field(10)
    strategy_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class VintageMarketStoreViewStrategyRsp(betterproto.Message):
    strategy_list: List[int] = betterproto.uint32_field(7)
    strategy_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class VintageMarketTraderInfo(betterproto.Message):
    hiiflfhdkkg: List["ItemParam"] = betterproto.message_field(10)
    trader_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class VintagePresentFinishNoify(betterproto.Message):
    present_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class VintagePresentFinishNotify(betterproto.Message):
    present_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class VintagePresentLevelData(betterproto.Message):
    is_open: bool = betterproto.bool_field(2)
    stage_id: int = betterproto.uint32_field(7)
    present_id: int = betterproto.uint32_field(5)
    is_finish: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class VintagePresentStageData(betterproto.Message):
    is_finish: bool = betterproto.bool_field(4)
    open_time: int = betterproto.uint32_field(14)
    is_open: bool = betterproto.bool_field(9)
    present_level_map: Dict[int, "VintagePresentLevelData"] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    stage_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WaitingListChange(betterproto.Message):
    controller_id: int = betterproto.uint32_field(4)
    cur_index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WatcherAllDataNotify(betterproto.Message):
    watcher_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class WatcherChangeNotify(betterproto.Message):
    new_watcher_list: List[int] = betterproto.uint32_field(4)
    removed_watcher_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WatcherEventNotify(betterproto.Message):
    add_progress: int = betterproto.uint32_field(3)
    watcher_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WatcherEventStageNotify(betterproto.Message):
    add_progress: int = betterproto.uint32_field(3)
    watcher_id: int = betterproto.uint32_field(13)
    stage: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class WatcherEventTypeNotify(betterproto.Message):
    param_list: List[int] = betterproto.uint32_field(5)
    add_progress: int = betterproto.uint32_field(13)
    watcher_trigger_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WaterInfo(betterproto.Message):
    id: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class WaterSpiritActivityDetailInfo(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(13)
    search_time_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    region_search_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WaterSpiritInfo(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(13)
    search_time_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    region_search_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WaterSpritePhaseFinishNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class Weapon(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    promote_level: int = betterproto.uint32_field(3)
    affix_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class WeaponAwakenReq(betterproto.Message):
    affix_level_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    item_guid: int = betterproto.uint64_field(2)
    target_weapon_guid: int = betterproto.uint64_field(9)


@dataclass(eq=False, repr=False)
class WeaponAwakenRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    target_weapon_awaken_level: int = betterproto.uint32_field(3)
    target_weapon_guid: int = betterproto.uint64_field(2)
    avatar_guid: int = betterproto.uint64_field(5)
    old_affix_level_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cur_affix_level_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class WeaponPromoteReq(betterproto.Message):
    target_weapon_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class WeaponPromoteRsp(betterproto.Message):
    cur_promote_level: int = betterproto.uint32_field(13)
    target_weapon_guid: int = betterproto.uint64_field(2)
    retcode: int = betterproto.int32_field(14)
    old_promote_level: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class WeaponUpgradeReq(betterproto.Message):
    item_param_list: List["ItemParam"] = betterproto.message_field(1)
    target_weapon_guid: int = betterproto.uint64_field(11)
    food_weapon_guid_list: List[int] = betterproto.uint64_field(7)


@dataclass(eq=False, repr=False)
class WeaponUpgradeRsp(betterproto.Message):
    cur_level: int = betterproto.uint32_field(5)
    item_param_list: List["ItemParam"] = betterproto.message_field(9)
    retcode: int = betterproto.int32_field(14)
    old_level: int = betterproto.uint32_field(1)
    target_weapon_guid: int = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class WearEquipReq(betterproto.Message):
    equip_guid: int = betterproto.uint64_field(12)
    avatar_guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class WearEquipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    avatar_guid: int = betterproto.uint64_field(6)
    equip_guid: int = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class WeatherInfo(betterproto.Message):
    weather_area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WeatherWizardData(betterproto.Message):
    shield_value: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class WeekendDjinnInfo(betterproto.Message):
    rot: "Vector" = betterproto.message_field(11)
    pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class WeeklyBossResinDiscountInfo(betterproto.Message):
    discount_num: int = betterproto.uint32_field(1)
    discount_num_limit: int = betterproto.uint32_field(2)
    resin_cost: int = betterproto.uint32_field(3)
    original_resin_cost: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WidgetActiveChangeNotify(betterproto.Message):
    widget_data_list: List["WidgetSlotData"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class WidgetCameraInfo(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class WidgetCaptureAnimalReq(betterproto.Message):
    material_id: int = betterproto.uint32_field(8)
    pos: "Vector" = betterproto.message_field(5)
    entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class WidgetCaptureAnimalRsp(betterproto.Message):
    material_id: int = betterproto.uint32_field(10)
    entity_id: int = betterproto.uint32_field(11)
    pos: "Vector" = betterproto.message_field(12)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class WidgetCoolDownData(betterproto.Message):
    id: int = betterproto.uint32_field(8)
    cool_down_time: int = betterproto.uint64_field(15)
    is_success: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class WidgetCoolDownNotify(betterproto.Message):
    normal_cool_down_data_list: List["WidgetCoolDownData"] = betterproto.message_field(
        15
    )
    group_cool_down_data_list: List["WidgetCoolDownData"] = betterproto.message_field(
        10
    )


@dataclass(eq=False, repr=False)
class WidgetDoBagReq(betterproto.Message):
    material_id: int = betterproto.uint32_field(12)
    location_info: "LocationInfo" = betterproto.message_field(135, group="op_info")
    widget_creator_info: "CreatorInfo" = betterproto.message_field(362, group="op_info")


@dataclass(eq=False, repr=False)
class WidgetDoBagRsp(betterproto.Message):
    material_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class WidgetGadgetAllDataNotify(betterproto.Message):
    widget_gadget_data: List["WidgetGadgetData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WidgetGadgetData(betterproto.Message):
    gadget_entity_id_list: List[int] = betterproto.uint32_field(15)
    gadget_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class WidgetGadgetDataNotify(betterproto.Message):
    widget_gadget_data: "WidgetGadgetData" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class WidgetGadgetDestroyNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WidgetQuickHitTreeReq(betterproto.Message):
    hit_tree_info_list: List["HitTreeInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WidgetQuickHitTreeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class WidgetReportReq(betterproto.Message):
    unk3300_bcaibkdihhf: bool = betterproto.bool_field(15)
    is_clear_sky_crystal_hint: bool = betterproto.bool_field(9)
    weather_wizard_shield_value: int = betterproto.uint32_field(12)
    material_id: int = betterproto.uint32_field(5)
    unk3300_apdfkknkijj: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class WidgetReportRsp(betterproto.Message):
    material_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class WidgetSlotChangeNotify(betterproto.Message):
    op: "WidgetSlotOp" = betterproto.enum_field(14)
    slot: "WidgetSlotData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WidgetSlotData(betterproto.Message):
    material_id: int = betterproto.uint32_field(11)
    cd_over_time: int = betterproto.uint32_field(2)
    is_active: bool = betterproto.bool_field(12)
    tag: "WidgetSlotTag" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class WidgetUpdateExtraCdReq(betterproto.Message):
    extra_cd_type: "WidgetExtraCdType" = betterproto.enum_field(9)
    material_id: int = betterproto.uint32_field(11)
    cd_group: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WidgetUpdateExtraCdRsp(betterproto.Message):
    material_id: int = betterproto.uint32_field(12)
    cd_group: int = betterproto.uint32_field(3)
    cool_data: "WidgetCoolDownData" = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(13)
    extra_cd_type: "WidgetExtraCdType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class WidgetUseAttachAbilityGroupChangeNotify(betterproto.Message):
    material_id: int = betterproto.uint32_field(13)
    is_attach: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class WidgetWeatherWizardDataNotify(betterproto.Message):
    shield_value: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WindFieldDungeonSettleInfo(betterproto.Message):
    unk3300_emcoilgacoc: List[int] = betterproto.uint32_field(6)
    fail_reason: "WindFieldDungeonFailReason" = betterproto.enum_field(12)
    unk3300_fjgfojbgbkm: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WindFieldGalleryChallengeInfoNotify(betterproto.Message):
    unk3300_glnhbjjjink: int = betterproto.uint32_field(15)
    unk3300_ffodakmkgek: int = betterproto.uint32_field(9)
    unk3300_nbibkfkocfk: int = betterproto.uint32_field(13)
    is_success: bool = betterproto.bool_field(12)
    is_start: bool = betterproto.bool_field(10)
    unk3300_mmonpdmiebn: int = betterproto.uint32_field(5)
    unk3300_gnjkocljfnm: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WindFieldGalleryInfoNotify(betterproto.Message):
    unk3300_ekmhmhjdhil: int = betterproto.uint32_field(9)
    unk3300_glnhbjjjink: int = betterproto.uint32_field(4)
    unk3300_ffodakmkgek: int = betterproto.uint32_field(13)
    unk3300_ojhjpbcaona: int = betterproto.uint32_field(1)
    unk3300_nbibkfkocfk: int = betterproto.uint32_field(5)
    unk3300_mmonpdmiebn: int = betterproto.uint32_field(15)
    unk3300_gnjkocljfnm: int = betterproto.uint32_field(11)
    unk3300_gnkcfhmdohj: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WindFieldInfo(betterproto.Message):
    unk3300_gnkcfhmdohj: int = betterproto.uint32_field(13)
    unk3300_glnhbjjjink: int = betterproto.uint32_field(4)
    unk3300_ojhjpbcaona: int = betterproto.uint32_field(12)
    unk3300_ekmhmhjdhil: int = betterproto.uint32_field(10)
    unk3300_nbibkfkocfk: int = betterproto.uint32_field(15)
    unk3300_gnjkocljfnm: int = betterproto.uint32_field(8)
    unk3300_ffodakmkgek: int = betterproto.uint32_field(7)
    unk3300_mmonpdmiebn: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class WindFieldRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WindFieldRestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class WindFieldStageInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(13)
    is_open: bool = betterproto.bool_field(2)
    stage_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class WindSeedClientNotify(betterproto.Message):
    refresh_notify: "WindSeedClientNotifyRefreshNotify" = betterproto.message_field(
        11, group="notify"
    )
    add_wind_bullet_notify: "WindSeedClientNotifyAddWindBulletNotify" = (
        betterproto.message_field(8, group="notify")
    )
    area_notify: "WindSeedClientNotifyAreaNotify" = betterproto.message_field(
        2, group="notify"
    )


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyRefreshNotify(betterproto.Message):
    refresh_num: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyAddWindBulletNotify(betterproto.Message):
    unk3300_ckikkcafjbc: int = betterproto.uint32_field(1)
    seed_pos: "Vector" = betterproto.message_field(10)
    unk3300_mpdfapbdjah: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyAreaNotify(betterproto.Message):
    area_type: int = betterproto.uint32_field(5)
    area_id: int = betterproto.uint32_field(12)
    area_code: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class WinterCampAcceptAllGiveItemReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WinterCampAcceptAllGiveItemRsp(betterproto.Message):
    accept_item_result_info: List[
        "WinterCampAcceptItemResultInfo"
    ] = betterproto.message_field(1)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class WinterCampAcceptGiveItemReq(betterproto.Message):
    uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WinterCampAcceptGiveItemRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    accept_item_result_info: "WinterCampAcceptItemResultInfo" = (
        betterproto.message_field(13)
    )


@dataclass(eq=False, repr=False)
class WinterCampAcceptItemResultInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(6)
    unk3300_ilellfnpdfj: List["ItemParam"] = betterproto.message_field(9)
    unk3300_jhkomcfhaog: List["ItemParam"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class WinterCampEditSnowmanCombinationReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)
    combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WinterCampEditSnowmanCombinationRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class WinterCampFriendWishData(betterproto.Message):
    uid: int = betterproto.uint32_field(8)
    item_id_list: List[int] = betterproto.uint32_field(14)
    nickname: str = betterproto.string_field(7)
    profile_picture: "ProfilePicture" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class WinterCampGetCanGiveFriendItemReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WinterCampGetCanGiveFriendItemRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    item_list: List["ItemParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class WinterCampGetFriendWishListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WinterCampGetFriendWishListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    wish_data_list: List["WinterCampFriendWishData"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class WinterCampGetRecvItemListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WinterCampGetRecvItemListRsp(betterproto.Message):
    recv_item_data_list: List["WinterCampRecvItemData"] = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class WinterCampGiveFriendItemReq(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(5)
    uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WinterCampGiveFriendItemRsp(betterproto.Message):
    limit_item_id_list: List[int] = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class WinterCampInfo(betterproto.Message):
    race_info_list: List["WinterCampRaceStageInfo"] = betterproto.message_field(5)
    unk3300_cmnibpmoeco: List[int] = betterproto.uint32_field(14)
    used_item_list: List["ItemParam"] = betterproto.message_field(8)
    unk3300_fhnnjjdgloo: List[int] = betterproto.uint32_field(7)
    explore_info: "WinterCampStageInfo" = betterproto.message_field(1)
    unk3300_kcgknjfgcfc: List[int] = betterproto.uint32_field(3)
    left_monsters: bool = betterproto.bool_field(11)
    battle_info: "WinterCampStageInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class WinterCampRaceScoreNotify(betterproto.Message):
    max_score: int = betterproto.uint32_field(7)
    id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class WinterCampRaceStageInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(10)
    max_score: int = betterproto.uint32_field(14)
    open_time: int = betterproto.uint32_field(11)
    id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WinterCampRecvItemData(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(9)
    profile_picture: "ProfilePicture" = betterproto.message_field(2)
    nickname: str = betterproto.string_field(8)
    uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WinterCampRecvItemNotify(betterproto.Message):
    recv_item_data: "WinterCampRecvItemData" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WinterCampSetWishListReq(betterproto.Message):
    item_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WinterCampSetWishListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    item_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WinterCampStageInfo(betterproto.Message):
    total_progress: int = betterproto.uint32_field(15)
    cur_progress: int = betterproto.uint32_field(2)
    id: int = betterproto.uint32_field(13)
    open_time: int = betterproto.uint32_field(12)
    pos: "Vector" = betterproto.message_field(6)
    is_finished: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class WinterCampStageInfoChangeNotify(betterproto.Message):
    battle_info: "WinterCampStageInfo" = betterproto.message_field(15)
    explore_info: "WinterCampStageInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class WinterCampTakeBattleRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class WinterCampTakeBattleRewardRsp(betterproto.Message):
    id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class WinterCampTakeExploreRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class WinterCampTakeExploreRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class WinterCampTriathlonRestartReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class WinterCampTriathlonRestartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    gallery_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class WinterCampTriathlonSettleNotify(betterproto.Message):
    unk3300_emnkjgkncmp: int = betterproto.uint32_field(12)
    is_success: bool = betterproto.bool_field(6)
    unk3300_oefogonenfn: int = betterproto.uint32_field(8)
    is_new_record: bool = betterproto.bool_field(2)
    gallery_id: int = betterproto.uint32_field(13)
    unk3300_acdombhmnjg: int = betterproto.uint32_field(4)
    remain_time: int = betterproto.uint32_field(7)
    score: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Worktop(betterproto.Message):
    option_list: List[int] = betterproto.uint32_field(1)
    is_guest_can_operate: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class WorktopInfo(betterproto.Message):
    option_list: List[int] = betterproto.uint32_field(1)
    is_guest_can_operate: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class WorktopOptionNotify(betterproto.Message):
    option_list: List[int] = betterproto.uint32_field(9)
    gadget_entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WorldAllRoutineTypeNotify(betterproto.Message):
    world_routine_type_list: List["WorldRoutineTypeInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WorldChestOpenNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(3)
    scene_id: int = betterproto.uint32_field(6)
    config_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class WorldDataNotify(betterproto.Message):
    world_prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class WorldOwnerBlossomBriefInfoNotify(betterproto.Message):
    brief_info_list: List["BlossomBriefInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class WorldOwnerBlossomScheduleInfoNotify(betterproto.Message):
    schedule_info: "BlossomScheduleInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WorldOwnerDailyTaskNotify(betterproto.Message):
    finished_daily_task_num: int = betterproto.uint32_field(4)
    task_list: List["DailyTaskInfo"] = betterproto.message_field(9)
    filter_city_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WorldPlayerDieNotify(betterproto.Message):
    die_type: "PlayerDieType" = betterproto.enum_field(10)
    murderer_entity_id: int = betterproto.uint32_field(8)
    monster_id: int = betterproto.uint32_field(1, group="entity")
    gadget_id: int = betterproto.uint32_field(4, group="entity")


@dataclass(eq=False, repr=False)
class WorldPlayerInfoNotify(betterproto.Message):
    player_uid_list: List[int] = betterproto.uint32_field(10)
    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(12)
    player_widget_info_list: List["PlayerWidgetInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class WorldPlayerLocationNotify(betterproto.Message):
    player_loc_list: List["PlayerLocationInfo"] = betterproto.message_field(4)
    player_world_loc_list: List["PlayerWorldLocationInfo"] = betterproto.message_field(
        3
    )


@dataclass(eq=False, repr=False)
class WorldPlayerReviveReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WorldPlayerReviveRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class WorldPlayerRttNotify(betterproto.Message):
    player_rtt_list: List["PlayerRttInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WorldRoutineChangeNotify(betterproto.Message):
    routine_type: int = betterproto.uint32_field(11)
    routine_info: "WorldRoutineInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WorldRoutineInfo(betterproto.Message):
    is_finished: bool = betterproto.bool_field(9)
    finish_progress: int = betterproto.uint32_field(15)
    progress: int = betterproto.uint32_field(5)
    routine_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WorldRoutineTypeCloseNotify(betterproto.Message):
    routine_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WorldRoutineTypeInfo(betterproto.Message):
    routine_type: int = betterproto.uint32_field(13)
    next_refresh_time: int = betterproto.uint32_field(15)
    world_routine_info_list: List["WorldRoutineInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class WorldRoutineTypeRefreshNotify(betterproto.Message):
    world_routine_type: "WorldRoutineTypeInfo" = betterproto.message_field(15)
